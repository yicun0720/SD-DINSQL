[
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "select other_details from paragraphs where paragraph_text like 'korea'",
    "query_toks": [
      "select",
      "other_details",
      "from",
      "paragraphs",
      "where",
      "paragraph_text",
      "like",
      "\"korea\""
    ],
    "query_toks_no_value": [
      "select",
      "other_details",
      "from",
      "paragraphs",
      "where",
      "paragraph_text",
      "like",
      "value"
    ],
    "question": "What are the details for the paragraph that includes the text 'Korea ' ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "details",
      "for",
      "the",
      "paragraph",
      "that",
      "includes",
      "the",
      "text",
      "'Korea",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"korea\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "Friend",
      "AS",
      "T1",
      "JOIN",
      "Highschooler",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.id",
      "INTERSECT",
      "SELECT",
      "T2.name",
      "FROM",
      "Likes",
      "AS",
      "T1",
      "JOIN",
      "Highschooler",
      "AS",
      "T2",
      "ON",
      "T1.liked_id",
      "=",
      "T2.id"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "friend",
      "as",
      "t1",
      "join",
      "highschooler",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "id",
      "intersect",
      "select",
      "t2",
      ".",
      "name",
      "from",
      "likes",
      "as",
      "t1",
      "join",
      "highschooler",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "liked_id",
      "=",
      "t2",
      ".",
      "id"
    ],
    "question": "Show name of all students who have some friends and also are liked by someone else.",
    "question_toks": [
      "Show",
      "name",
      "of",
      "all",
      "students",
      "who",
      "have",
      "some",
      "friends",
      "and",
      "also",
      "are",
      "liked",
      "by",
      "someone",
      "else",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              0
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  7,
                  false
                ],
                null
              ],
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "Friend",
      "AS",
      "T1",
      "JOIN",
      "Highschooler",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.id",
      "INTERSECT",
      "SELECT",
      "T2.name",
      "FROM",
      "Likes",
      "AS",
      "T1",
      "JOIN",
      "Highschooler",
      "AS",
      "T2",
      "ON",
      "T1.liked_id",
      "=",
      "T2.id"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "friend",
      "as",
      "t1",
      "join",
      "highschooler",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "id",
      "intersect",
      "select",
      "t2",
      ".",
      "name",
      "from",
      "likes",
      "as",
      "t1",
      "join",
      "highschooler",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "liked_id",
      "=",
      "t2",
      ".",
      "id"
    ],
    "question": "What are the names of high schoolers who both have friends and are liked?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "high",
      "schoolers",
      "who",
      "both",
      "have",
      "friends",
      "and",
      "are",
      "liked",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              0
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  7,
                  false
                ],
                null
              ],
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "query_toks": [
      "SELECT",
      "T1.first_name",
      ",",
      "T1.last_name",
      ",",
      "T2.size_code",
      "FROM",
      "Owners",
      "AS",
      "T1",
      "JOIN",
      "Dogs",
      "AS",
      "T2",
      "ON",
      "T1.owner_id",
      "=",
      "T2.owner_id"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "first_name",
      ",",
      "t1",
      ".",
      "last_name",
      ",",
      "t2",
      ".",
      "size_code",
      "from",
      "owners",
      "as",
      "t1",
      "join",
      "dogs",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "owner_id",
      "=",
      "t2",
      ".",
      "owner_id"
    ],
    "question": "List each owner's first name, last name, and the size of his for her dog.",
    "question_toks": [
      "List",
      "each",
      "owner",
      "'s",
      "first",
      "name",
      ",",
      "last",
      "name",
      ",",
      "and",
      "the",
      "size",
      "of",
      "his",
      "for",
      "her",
      "dog",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "query_toks": [
      "select",
      "t1.first_name",
      "from",
      "students",
      "as",
      "t1",
      "join",
      "addresses",
      "as",
      "t2",
      "on",
      "t1.permanent_address_id",
      "=",
      "t2.address_id",
      "where",
      "t2.country",
      "=",
      "\"haiti\"",
      "or",
      "t1.cell_mobile_number",
      "=",
      "\"09700166582\""
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "first_name",
      "from",
      "students",
      "as",
      "t1",
      "join",
      "addresses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "permanent_address_id",
      "=",
      "t2",
      ".",
      "address_id",
      "where",
      "t2",
      ".",
      "country",
      "=",
      "value",
      "or",
      "t1",
      ".",
      "cell_mobile_number",
      "=",
      "value"
    ],
    "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "of",
      "the",
      "students",
      "who",
      "permanently",
      "live",
      "in",
      "the",
      "country",
      "Haiti",
      "or",
      "have",
      "the",
      "cell",
      "phone",
      "number",
      "09700166582",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"haiti\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"09700166582\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CAR_MAKERS",
      "AS",
      "T1",
      "JOIN",
      "COUNTRIES",
      "AS",
      "T2",
      "ON",
      "T1.Country",
      "=",
      "T2.CountryId",
      "WHERE",
      "T2.CountryName",
      "=",
      "'france",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "car_makers",
      "as",
      "t1",
      "join",
      "countries",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "country",
      "=",
      "t2",
      ".",
      "countryid",
      "where",
      "t2",
      ".",
      "countryname",
      "=",
      "value"
    ],
    "question": "How many car makers are there in france?",
    "question_toks": [
      "How",
      "many",
      "car",
      "makers",
      "are",
      "there",
      "in",
      "france",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"france\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T2.Model",
      "FROM",
      "CAR_NAMES",
      "AS",
      "T1",
      "JOIN",
      "MODEL_LIST",
      "AS",
      "T2",
      "ON",
      "T1.Model",
      "=",
      "T2.Model",
      "JOIN",
      "CAR_MAKERS",
      "AS",
      "T3",
      "ON",
      "T2.Maker",
      "=",
      "T3.Id",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T4",
      "ON",
      "T1.MakeId",
      "=",
      "T4.Id",
      "WHERE",
      "T3.FullName",
      "=",
      "'General",
      "Motors",
      "'",
      "OR",
      "T4.weight",
      ">",
      "3500",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "model",
      "from",
      "car_names",
      "as",
      "t1",
      "join",
      "model_list",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "model",
      "=",
      "t2",
      ".",
      "model",
      "join",
      "car_makers",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "maker",
      "=",
      "t3",
      ".",
      "id",
      "join",
      "cars_data",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "makeid",
      "=",
      "t4",
      ".",
      "id",
      "where",
      "t3",
      ".",
      "fullname",
      "=",
      "value",
      "or",
      "t4",
      ".",
      "weight",
      ">",
      "value"
    ],
    "question": "What are the different models created by either the car maker General Motors or weighed more than 3500?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "models",
      "created",
      "by",
      "either",
      "the",
      "car",
      "maker",
      "General",
      "Motors",
      "or",
      "weighed",
      "more",
      "than",
      "3500",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ],
            [
              0,
              12,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"General Motors\"",
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          3500.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "ranking",
      ")",
      ",",
      "T1.first_name",
      "FROM",
      "players",
      "AS",
      "T1",
      "JOIN",
      "rankings",
      "AS",
      "T2",
      "ON",
      "T1.player_id",
      "=",
      "T2.player_id",
      "GROUP",
      "BY",
      "T1.first_name"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "ranking",
      ")",
      ",",
      "t1",
      ".",
      "first_name",
      "from",
      "players",
      "as",
      "t1",
      "join",
      "rankings",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "player_id",
      "=",
      "t2",
      ".",
      "player_id",
      "group",
      "by",
      "t1",
      ".",
      "first_name"
    ],
    "question": "Find the average ranking for each player and their first name.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "ranking",
      "for",
      "each",
      "player",
      "and",
      "their",
      "first",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              41,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Name",
      "FROM",
      "conductor",
      "AS",
      "T1",
      "JOIN",
      "orchestra",
      "AS",
      "T2",
      "ON",
      "T1.Conductor_ID",
      "=",
      "T2.Conductor_ID",
      "GROUP",
      "BY",
      "T2.Conductor_ID",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "conductor",
      "as",
      "t1",
      "join",
      "orchestra",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "conductor_id",
      "=",
      "t2",
      ".",
      "conductor_id",
      "group",
      "by",
      "t2",
      ".",
      "conductor_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the conductor who has conducted the most orchestras?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "conductor",
      "who",
      "has",
      "conducted",
      "the",
      "most",
      "orchestras",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T2.semester_id",
      "FROM",
      "Degree_Programs",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T2",
      "ON",
      "T1.degree_program_id",
      "=",
      "T2.degree_program_id",
      "WHERE",
      "degree_summary_name",
      "=",
      "'Master",
      "'",
      "INTERSECT",
      "SELECT",
      "DISTINCT",
      "T2.semester_id",
      "FROM",
      "Degree_Programs",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T2",
      "ON",
      "T1.degree_program_id",
      "=",
      "T2.degree_program_id",
      "WHERE",
      "degree_summary_name",
      "=",
      "'Bachelor",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "semester_id",
      "from",
      "degree_programs",
      "as",
      "t1",
      "join",
      "student_enrolment",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "degree_program_id",
      "=",
      "t2",
      ".",
      "degree_program_id",
      "where",
      "degree_summary_name",
      "=",
      "value",
      "intersect",
      "select",
      "distinct",
      "t2",
      ".",
      "semester_id",
      "from",
      "degree_programs",
      "as",
      "t1",
      "join",
      "student_enrolment",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "degree_program_id",
      "=",
      "t2",
      ".",
      "degree_program_id",
      "where",
      "degree_summary_name",
      "=",
      "value"
    ],
    "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "semester",
      "that",
      "had",
      "both",
      "Masters",
      "and",
      "Bachelors",
      "students",
      "enrolled",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              45,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Master\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              3
            ],
            [
              "table_unit",
              7
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  18,
                  false
                ],
                null
              ],
              [
                0,
                45,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          true,
          [
            [
              0,
              [
                0,
                [
                  0,
                  46,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            "\"Bachelor\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "query_toks": [
      "SELECT",
      "CountryCode",
      "FROM",
      "countrylanguage",
      "EXCEPT",
      "SELECT",
      "CountryCode",
      "FROM",
      "countrylanguage",
      "WHERE",
      "LANGUAGE",
      "=",
      "``",
      "English",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "countrycode",
      "from",
      "countrylanguage",
      "except",
      "select",
      "countrycode",
      "from",
      "countrylanguage",
      "where",
      "language",
      "=",
      "value"
    ],
    "question": "What are the country codes for countries that do not speak English?",
    "question_toks": [
      "What",
      "are",
      "the",
      "country",
      "codes",
      "for",
      "countries",
      "that",
      "do",
      "not",
      "speak",
      "English",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              3
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  23,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            "\"English\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "country",
      "WHERE",
      "GovernmentForm",
      "=",
      "``",
      "Republic",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "country",
      "where",
      "governmentform",
      "=",
      "value"
    ],
    "question": "How many countries have a republic as their form of government?",
    "question_toks": [
      "How",
      "many",
      "countries",
      "have",
      "a",
      "republic",
      "as",
      "their",
      "form",
      "of",
      "government",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Republic\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "query_toks": [
      "select",
      "t1.first_name",
      "from",
      "students",
      "as",
      "t1",
      "join",
      "addresses",
      "as",
      "t2",
      "on",
      "t1.permanent_address_id",
      "=",
      "t2.address_id",
      "where",
      "t2.country",
      "=",
      "\"haiti\"",
      "or",
      "t1.cell_mobile_number",
      "=",
      "\"09700166582\""
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "first_name",
      "from",
      "students",
      "as",
      "t1",
      "join",
      "addresses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "permanent_address_id",
      "=",
      "t2",
      ".",
      "address_id",
      "where",
      "t2",
      ".",
      "country",
      "=",
      "value",
      "or",
      "t1",
      ".",
      "cell_mobile_number",
      "=",
      "value"
    ],
    "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "the",
      "students",
      "who",
      "live",
      "in",
      "Haiti",
      "permanently",
      "or",
      "have",
      "the",
      "cell",
      "phone",
      "number",
      "09700166582",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"haiti\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"09700166582\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "battle_death",
    "query": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "battle",
      "WHERE",
      "bulgarian_commander",
      "=",
      "'Kaloyan",
      "'",
      "AND",
      "latin_commander",
      "=",
      "'Baldwin",
      "I",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "battle",
      "where",
      "bulgarian_commander",
      "=",
      "value",
      "and",
      "latin_commander",
      "=",
      "value"
    ],
    "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "battle",
      "names",
      "which",
      "are",
      "between",
      "bulgarian",
      "commander",
      "'Kaloyan",
      "'",
      "and",
      "latin",
      "commander",
      "'Baldwin",
      "I",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Kaloyan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Baldwin I\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "query_toks": [
      "SELECT",
      "template_type_code",
      "FROM",
      "Templates",
      "EXCEPT",
      "SELECT",
      "template_type_code",
      "FROM",
      "Templates",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.template_id",
      "=",
      "T2.template_id"
    ],
    "query_toks_no_value": [
      "select",
      "template_type_code",
      "from",
      "templates",
      "except",
      "select",
      "template_type_code",
      "from",
      "templates",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "template_id",
      "=",
      "t2",
      ".",
      "template_id"
    ],
    "question": "What are the codes of template types that are not used for any document?",
    "question_toks": [
      "What",
      "are",
      "the",
      "codes",
      "of",
      "template",
      "types",
      "that",
      "are",
      "not",
      "used",
      "for",
      "any",
      "document",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ],
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "FLIGHTS",
      "AS",
      "T1",
      "JOIN",
      "AIRPORTS",
      "AS",
      "T2",
      "ON",
      "T1.DestAirport",
      "=",
      "T2.AirportCode",
      "JOIN",
      "AIRLINES",
      "AS",
      "T3",
      "ON",
      "T3.uid",
      "=",
      "T1.Airline",
      "WHERE",
      "T2.City",
      "=",
      "``",
      "Aberdeen",
      "''",
      "AND",
      "T3.Airline",
      "=",
      "``",
      "United",
      "Airlines",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flights",
      "as",
      "t1",
      "join",
      "airports",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "destairport",
      "=",
      "t2",
      ".",
      "airportcode",
      "join",
      "airlines",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "uid",
      "=",
      "t1",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "airline",
      "=",
      "value"
    ],
    "question": "Count the number of United Airlines flights that arrive in Aberdeen.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "United",
      "Airlines",
      "flights",
      "that",
      "arrive",
      "in",
      "Aberdeen",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Aberdeen\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"United Airlines\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "query_toks": [
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "WHERE",
      "T2.SourceAirport",
      "=",
      "``",
      "APG",
      "''",
      "INTERSECT",
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "WHERE",
      "T2.SourceAirport",
      "=",
      "``",
      "CVO",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "sourceairport",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "sourceairport",
      "=",
      "value"
    ],
    "question": "Which airlines have departing flights from both APG and CVO airports?",
    "question_toks": [
      "Which",
      "airlines",
      "have",
      "departing",
      "flights",
      "from",
      "both",
      "APG",
      "and",
      "CVO",
      "airports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"APG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            "\"CVO\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.course_name",
      "FROM",
      "Courses",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment_Courses",
      "AS",
      "T2",
      "ON",
      "T1.course_id",
      "=",
      "T2.course_id",
      "GROUP",
      "BY",
      "T1.course_name",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "course_name",
      "from",
      "courses",
      "as",
      "t1",
      "join",
      "student_enrolment_courses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "course_id",
      "=",
      "t2",
      ".",
      "course_id",
      "group",
      "by",
      "t1",
      ".",
      "course_name",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the course with the most students enrolled?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "course",
      "with",
      "the",
      "most",
      "students",
      "enrolled",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            8
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              50,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "query_toks": [
      "SELECT",
      "pettype",
      ",",
      "weight",
      "FROM",
      "pets",
      "ORDER",
      "BY",
      "pet_age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "pettype",
      ",",
      "weight",
      "from",
      "pets",
      "order",
      "by",
      "pet_age",
      "limit",
      "value"
    ],
    "question": "What type of pet is the youngest animal, and how much does it weigh?",
    "question_toks": [
      "What",
      "type",
      "of",
      "pet",
      "is",
      "the",
      "youngest",
      "animal",
      ",",
      "and",
      "how",
      "much",
      "does",
      "it",
      "weigh",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "battle_death",
    "query": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
    "query_toks": [
      "SELECT",
      "T1.name",
      ",",
      "T1.date",
      "FROM",
      "battle",
      "AS",
      "T1",
      "JOIN",
      "ship",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.lost_in_battle",
      "WHERE",
      "T2.name",
      "=",
      "'Lettice",
      "'",
      "INTERSECT",
      "SELECT",
      "T1.name",
      ",",
      "T1.date",
      "FROM",
      "battle",
      "AS",
      "T1",
      "JOIN",
      "ship",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.lost_in_battle",
      "WHERE",
      "T2.name",
      "=",
      "'HMS",
      "Atalanta",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "date",
      "from",
      "battle",
      "as",
      "t1",
      "join",
      "ship",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "lost_in_battle",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "date",
      "from",
      "battle",
      "as",
      "t1",
      "join",
      "ship",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "lost_in_battle",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
    "question_toks": [
      "List",
      "the",
      "name",
      "and",
      "date",
      "the",
      "battle",
      "that",
      "has",
      "lost",
      "the",
      "ship",
      "named",
      "'Lettice",
      "'",
      "and",
      "the",
      "ship",
      "named",
      "'HMS",
      "Atalanta",
      "'"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Lettice\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              1
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            "\"HMS Atalanta\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "Likes",
      "AS",
      "T1",
      "JOIN",
      "Highschooler",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.id",
      "GROUP",
      "BY",
      "T1.student_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "likes",
      "as",
      "t1",
      "join",
      "highschooler",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "id",
      "group",
      "by",
      "t1",
      ".",
      "student_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Give the name of the student with the most likes.",
    "question_toks": [
      "Give",
      "the",
      "name",
      "of",
      "the",
      "student",
      "with",
      "the",
      "most",
      "likes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Hometown",
      "FROM",
      "teacher",
      "GROUP",
      "BY",
      "Hometown",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "hometown",
      "from",
      "teacher",
      "group",
      "by",
      "hometown",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the most commmon hometowns for teachers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "commmon",
      "hometowns",
      "for",
      "teachers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "query_toks": [
      "SELECT",
      "package_option",
      ",",
      "series_name",
      "FROM",
      "TV_Channel",
      "WHERE",
      "hight_definition_TV",
      "=",
      "``",
      "yes",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "package_option",
      ",",
      "series_name",
      "from",
      "tv_channel",
      "where",
      "hight_definition_tv",
      "=",
      "value"
    ],
    "question": "Find the package choice and series name of the TV channel that has high definition TV.",
    "question_toks": [
      "Find",
      "the",
      "package",
      "choice",
      "and",
      "series",
      "name",
      "of",
      "the",
      "TV",
      "channel",
      "that",
      "has",
      "high",
      "definition",
      "TV",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"yes\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "query_toks": [
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "WHERE",
      "T2.DestAirport",
      "=",
      "``",
      "AHD",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "destairport",
      "=",
      "value"
    ],
    "question": "Which airlines have a flight with destination airport AHD?",
    "question_toks": [
      "Which",
      "airlines",
      "have",
      "a",
      "flight",
      "with",
      "destination",
      "airport",
      "AHD",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"AHD\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "singer",
      "WHERE",
      "Citizenship",
      "!",
      "=",
      "``",
      "France",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "singer",
      "where",
      "citizenship",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of the singers who are not French citizens?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "singers",
      "who",
      "are",
      "not",
      "French",
      "citizens",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"France\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CAR_MAKERS",
      "AS",
      "T1",
      "JOIN",
      "COUNTRIES",
      "AS",
      "T2",
      "ON",
      "T1.Country",
      "=",
      "T2.CountryId",
      "WHERE",
      "T2.CountryName",
      "=",
      "'france",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "car_makers",
      "as",
      "t1",
      "join",
      "countries",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "country",
      "=",
      "t2",
      ".",
      "countryid",
      "where",
      "t2",
      ".",
      "countryname",
      "=",
      "value"
    ],
    "question": "What is the number of makers of care in France?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "makers",
      "of",
      "care",
      "in",
      "France",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"france\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "query_toks": [
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "GROUP",
      "BY",
      "T1.Airline",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "group",
      "by",
      "t1",
      ".",
      "airline",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find all airlines that have at least 10 flights.",
    "question_toks": [
      "Find",
      "all",
      "airlines",
      "that",
      "have",
      "at",
      "least",
      "10",
      "flights",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.address_id",
      ",",
      "T1.line_1",
      ",",
      "T1.line_2",
      "FROM",
      "Addresses",
      "AS",
      "T1",
      "JOIN",
      "Students",
      "AS",
      "T2",
      "ON",
      "T1.address_id",
      "=",
      "T2.current_address_id",
      "GROUP",
      "BY",
      "T1.address_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "address_id",
      ",",
      "t1",
      ".",
      "line_1",
      ",",
      "t1",
      ".",
      "line_2",
      "from",
      "addresses",
      "as",
      "t1",
      "join",
      "students",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "address_id",
      "=",
      "t2",
      ".",
      "current_address_id",
      "group",
      "by",
      "t1",
      ".",
      "address_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which address holds the most number of students currently? List the address id and all lines.",
    "question_toks": [
      "Which",
      "address",
      "holds",
      "the",
      "most",
      "number",
      "of",
      "students",
      "currently",
      "?",
      "List",
      "the",
      "address",
      "id",
      "and",
      "all",
      "lines",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            6
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              33,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T2.Airline",
      "=",
      "T1.uid",
      "WHERE",
      "T1.Airline",
      "=",
      "``",
      "United",
      "Airlines",
      "''",
      "AND",
      "T2.DestAirport",
      "=",
      "``",
      "ASY",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "airline",
      "=",
      "t1",
      ".",
      "uid",
      "where",
      "t1",
      ".",
      "airline",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "destairport",
      "=",
      "value"
    ],
    "question": "How many 'United Airlines' flights go to Airport 'ASY'?",
    "question_toks": [
      "How",
      "many",
      "'United",
      "Airlines",
      "'",
      "flights",
      "go",
      "to",
      "Airport",
      "'ASY",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"United Airlines\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"ASY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "query_toks": [
      "SELECT",
      "other_student_details",
      "FROM",
      "Students",
      "ORDER",
      "BY",
      "other_student_details",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "other_student_details",
      "from",
      "students",
      "order",
      "by",
      "other_student_details",
      "desc"
    ],
    "question": "What other details can you tell me about students in reverse alphabetical order?",
    "question_toks": [
      "What",
      "other",
      "details",
      "can",
      "you",
      "tell",
      "me",
      "about",
      "students",
      "in",
      "reverse",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "winner_name",
      ",",
      "loser_name",
      "FROM",
      "matches",
      "ORDER",
      "BY",
      "minutes",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "winner_name",
      ",",
      "loser_name",
      "from",
      "matches",
      "order",
      "by",
      "minutes",
      "desc",
      "limit",
      "value"
    ],
    "question": "find the names of loser and winner who played in the match with greatest number of minutes.",
    "question_toks": [
      "find",
      "the",
      "names",
      "of",
      "loser",
      "and",
      "winner",
      "who",
      "played",
      "in",
      "the",
      "match",
      "with",
      "greatest",
      "number",
      "of",
      "minutes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "T2.Name",
      "FROM",
      "course_arrange",
      "AS",
      "T1",
      "JOIN",
      "teacher",
      "AS",
      "T2",
      "ON",
      "T1.Teacher_ID",
      "=",
      "T2.Teacher_ID",
      "GROUP",
      "BY",
      "T2.Name",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "course_arrange",
      "as",
      "t1",
      "join",
      "teacher",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "teacher_id",
      "=",
      "t2",
      ".",
      "teacher_id",
      "group",
      "by",
      "t2",
      ".",
      "name",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show names of teachers that teach at least two courses.",
    "question_toks": [
      "Show",
      "names",
      "of",
      "teachers",
      "that",
      "teach",
      "at",
      "least",
      "two",
      "courses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "WHERE",
      "SurfaceArea",
      ">",
      "(",
      "SELECT",
      "min",
      "(",
      "SurfaceArea",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Continent",
      "=",
      "``",
      "Europe",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "where",
      "surfacearea",
      ">",
      "(",
      "select",
      "min",
      "(",
      "surfacearea",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value",
      ")"
    ],
    "question": "What are the countries that have greater surface area than any country in Europe?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "that",
      "have",
      "greater",
      "surface",
      "area",
      "than",
      "any",
      "country",
      "in",
      "Europe",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    10,
                    false
                  ],
                  null
                ],
                "\"Europe\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Abbreviation",
      ",",
      "T1.Country",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "GROUP",
      "BY",
      "T1.Airline",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "abbreviation",
      ",",
      "t1",
      ".",
      "country",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "group",
      "by",
      "t1",
      ".",
      "airline",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "limit",
      "value"
    ],
    "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
    "question_toks": [
      "What",
      "is",
      "the",
      "abbreviation",
      "of",
      "the",
      "airilne",
      "has",
      "the",
      "fewest",
      "flights",
      "and",
      "what",
      "country",
      "is",
      "it",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "select distinct year from cars_data where weight between 3000 and 4000;",
    "query_toks": [
      "select",
      "distinct",
      "year",
      "from",
      "cars_data",
      "where",
      "weight",
      "between",
      "3000",
      "and",
      "4000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "year",
      "from",
      "cars_data",
      "where",
      "weight",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "years",
      "in",
      "which",
      "there",
      "were",
      "cars",
      "produced",
      "that",
      "weighed",
      "less",
      "than",
      "4000",
      "and",
      "also",
      "cars",
      "that",
      "weighted",
      "more",
      "than",
      "3000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          3000.0,
          4000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "query_toks": [
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "WHERE",
      "T2.SourceAirport",
      "=",
      "``",
      "AHD",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "sourceairport",
      "=",
      "value"
    ],
    "question": "What are airlines that have some flight departing from airport 'AHD'?",
    "question_toks": [
      "What",
      "are",
      "airlines",
      "that",
      "have",
      "some",
      "flight",
      "departing",
      "from",
      "airport",
      "'AHD",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"AHD\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t2.name",
      "FROM",
      "hiring",
      "AS",
      "t1",
      "JOIN",
      "shop",
      "AS",
      "t2",
      "ON",
      "t1.shop_id",
      "=",
      "t2.shop_id",
      "GROUP",
      "BY",
      "t2.name"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t2",
      ".",
      "name",
      "from",
      "hiring",
      "as",
      "t1",
      "join",
      "shop",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "shop_id",
      "=",
      "t2",
      ".",
      "shop_id",
      "group",
      "by",
      "t2",
      ".",
      "name"
    ],
    "question": "For each shop, return the number of employees working there and the name of the shop.",
    "question_toks": [
      "For",
      "each",
      "shop",
      ",",
      "return",
      "the",
      "number",
      "of",
      "employees",
      "working",
      "there",
      "and",
      "the",
      "name",
      "of",
      "the",
      "shop",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "query_toks": [
      "SELECT",
      "T1.course_name",
      ",",
      "T1.course_id",
      "FROM",
      "Courses",
      "AS",
      "T1",
      "JOIN",
      "Sections",
      "AS",
      "T2",
      "ON",
      "T1.course_id",
      "=",
      "T2.course_id",
      "GROUP",
      "BY",
      "T1.course_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "course_name",
      ",",
      "t1",
      ".",
      "course_id",
      "from",
      "courses",
      "as",
      "t1",
      "join",
      "sections",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "course_id",
      "=",
      "t2",
      ".",
      "course_id",
      "group",
      "by",
      "t1",
      ".",
      "course_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "value"
    ],
    "question": "What are the names and ids of every course with less than 2 sections?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "ids",
      "of",
      "every",
      "course",
      "with",
      "less",
      "than",
      "2",
      "sections",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              24,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [
        [
          false,
          6,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.owner_id",
      ",",
      "T1.zip_code",
      "FROM",
      "Owners",
      "AS",
      "T1",
      "JOIN",
      "Dogs",
      "AS",
      "T2",
      "ON",
      "T1.owner_id",
      "=",
      "T2.owner_id",
      "JOIN",
      "Treatments",
      "AS",
      "T3",
      "ON",
      "T2.dog_id",
      "=",
      "T3.dog_id",
      "GROUP",
      "BY",
      "T1.owner_id",
      "ORDER",
      "BY",
      "sum",
      "(",
      "T3.cost_of_treatment",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "owner_id",
      ",",
      "t1",
      ".",
      "zip_code",
      "from",
      "owners",
      "as",
      "t1",
      "join",
      "dogs",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "owner_id",
      "=",
      "t2",
      ".",
      "owner_id",
      "join",
      "treatments",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "dog_id",
      "=",
      "t3",
      ".",
      "dog_id",
      "group",
      "by",
      "t1",
      ".",
      "owner_id",
      "order",
      "by",
      "sum",
      "(",
      "t3",
      ".",
      "cost_of_treatment",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
    "question_toks": [
      "Find",
      "the",
      "owner",
      "id",
      "and",
      "zip",
      "code",
      "of",
      "the",
      "owner",
      "who",
      "spent",
      "the",
      "most",
      "money",
      "in",
      "total",
      "for",
      "his",
      "or",
      "her",
      "dogs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              45,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              4,
              49,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "query_toks": [
      "SELECT",
      "Maker",
      ",",
      "Model",
      "FROM",
      "MODEL_LIST",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "maker",
      ",",
      "model",
      "from",
      "model_list"
    ],
    "question": "What are all the makers and models?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "makers",
      "and",
      "models",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "query_toks": [
      "SELECT",
      "song_name",
      ",",
      "song_release_year",
      "FROM",
      "singer",
      "ORDER",
      "BY",
      "age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      ",",
      "song_release_year",
      "from",
      "singer",
      "order",
      "by",
      "age",
      "limit",
      "value"
    ],
    "question": "Show the name and the release year of the song by the youngest singer.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "and",
      "the",
      "release",
      "year",
      "of",
      "the",
      "song",
      "by",
      "the",
      "youngest",
      "singer",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "TV_Channel",
      "EXCEPT",
      "SELECT",
      "T1.country",
      "FROM",
      "TV_Channel",
      "AS",
      "T1",
      "JOIN",
      "cartoon",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.Channel",
      "WHERE",
      "T2.written_by",
      "=",
      "'Todd",
      "Casey",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "tv_channel",
      "except",
      "select",
      "t1",
      ".",
      "country",
      "from",
      "tv_channel",
      "as",
      "t1",
      "join",
      "cartoon",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "channel",
      "where",
      "t2",
      ".",
      "written_by",
      "=",
      "value"
    ],
    "question": "What are the countries that are not playing cartoons written by Todd Casey?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "that",
      "are",
      "not",
      "playing",
      "cartoons",
      "written",
      "by",
      "Todd",
      "Casey",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            "\"Todd Casey\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "query_toks": [
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "WHERE",
      "T2.SourceAirport",
      "=",
      "``",
      "AHD",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "sourceairport",
      "=",
      "value"
    ],
    "question": "Which airlines have a flight with source airport AHD?",
    "question_toks": [
      "Which",
      "airlines",
      "have",
      "a",
      "flight",
      "with",
      "source",
      "airport",
      "AHD",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"AHD\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.document_id",
      ",",
      "T2.document_name",
      "FROM",
      "Paragraphs",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.document_id",
      "=",
      "T2.document_id",
      "GROUP",
      "BY",
      "T1.document_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "document_id",
      ",",
      "t2",
      ".",
      "document_name",
      "from",
      "paragraphs",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "document_id",
      "=",
      "t2",
      ".",
      "document_id",
      "group",
      "by",
      "t1",
      ".",
      "document_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the document id and name with greatest number of paragraphs?",
    "question_toks": [
      "What",
      "is",
      "the",
      "document",
      "id",
      "and",
      "name",
      "with",
      "greatest",
      "number",
      "of",
      "paragraphs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.first_name",
      ",",
      "T1.middle_name",
      ",",
      "T1.last_name",
      "FROM",
      "Students",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.student_id",
      "JOIN",
      "Degree_Programs",
      "AS",
      "T3",
      "ON",
      "T2.degree_program_id",
      "=",
      "T3.degree_program_id",
      "WHERE",
      "T3.degree_summary_name",
      "=",
      "'Bachelor",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "first_name",
      ",",
      "t1",
      ".",
      "middle_name",
      ",",
      "t1",
      ".",
      "last_name",
      "from",
      "students",
      "as",
      "t1",
      "join",
      "student_enrolment",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "student_id",
      "join",
      "degree_programs",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "degree_program_id",
      "=",
      "t3",
      ".",
      "degree_program_id",
      "where",
      "t3",
      ".",
      "degree_summary_name",
      "=",
      "value"
    ],
    "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
    "question_toks": [
      "Who",
      "is",
      "enrolled",
      "in",
      "a",
      "Bachelor",
      "degree",
      "program",
      "?",
      "List",
      "the",
      "first",
      "name",
      ",",
      "middle",
      "name",
      ",",
      "last",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ],
            [
              0,
              47,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                45,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Bachelor\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "Friend",
      "AS",
      "T1",
      "JOIN",
      "Highschooler",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.id",
      "GROUP",
      "BY",
      "T1.student_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "friend",
      "as",
      "t1",
      "join",
      "highschooler",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "id",
      "group",
      "by",
      "t1",
      ".",
      "student_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the high schooler who has the greatest number of friends?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "high",
      "schooler",
      "who",
      "has",
      "the",
      "greatest",
      "number",
      "of",
      "friends",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "T2.edispl",
      ")",
      "FROM",
      "CAR_NAMES",
      "AS",
      "T1",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T2",
      "ON",
      "T1.MakeId",
      "=",
      "T2.Id",
      "WHERE",
      "T1.Model",
      "=",
      "'volvo",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "t2",
      ".",
      "edispl",
      ")",
      "from",
      "car_names",
      "as",
      "t1",
      "join",
      "cars_data",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "makeid",
      "=",
      "t2",
      ".",
      "id",
      "where",
      "t1",
      ".",
      "model",
      "=",
      "value"
    ],
    "question": "What is the average edispl for all volvos?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "edispl",
      "for",
      "all",
      "volvos",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"volvo\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "query_toks": [
      "SELECT",
      "T1.last_name",
      "FROM",
      "Owners",
      "AS",
      "T1",
      "JOIN",
      "Dogs",
      "AS",
      "T2",
      "ON",
      "T1.owner_id",
      "=",
      "T2.owner_id",
      "WHERE",
      "T2.age",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "Dogs",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "last_name",
      "from",
      "owners",
      "as",
      "t1",
      "join",
      "dogs",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "owner_id",
      "=",
      "t2",
      ".",
      "owner_id",
      "where",
      "t2",
      ".",
      "age",
      "=",
      "(",
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "dogs",
      ")"
    ],
    "question": "Who owns the youngest dog? Give me his or her last name.",
    "question_toks": [
      "Who",
      "owns",
      "the",
      "youngest",
      "dog",
      "?",
      "Give",
      "me",
      "his",
      "or",
      "her",
      "last",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      26,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "query_toks": [
      "SELECT",
      "T3.Name",
      "FROM",
      "course_arrange",
      "AS",
      "T1",
      "JOIN",
      "course",
      "AS",
      "T2",
      "ON",
      "T1.Course_ID",
      "=",
      "T2.Course_ID",
      "JOIN",
      "teacher",
      "AS",
      "T3",
      "ON",
      "T1.Teacher_ID",
      "=",
      "T3.Teacher_ID",
      "WHERE",
      "T2.Course",
      "=",
      "``",
      "Math",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      "from",
      "course_arrange",
      "as",
      "t1",
      "join",
      "course",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "course_id",
      "=",
      "t2",
      ".",
      "course_id",
      "join",
      "teacher",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "teacher_id",
      "=",
      "t3",
      ".",
      "teacher_id",
      "where",
      "t2",
      ".",
      "course",
      "=",
      "value"
    ],
    "question": "What are the names of the people who teach math courses?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "people",
      "who",
      "teach",
      "math",
      "courses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Math\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "LANGUAGE",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "TV_Channel",
      "GROUP",
      "BY",
      "LANGUAGE",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "ASC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "language",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tv_channel",
      "group",
      "by",
      "language",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "asc",
      "limit",
      "value"
    ],
    "question": "What are the languages used by the least number of TV Channels and how many channels use it?",
    "question_toks": [
      "What",
      "are",
      "the",
      "languages",
      "used",
      "by",
      "the",
      "least",
      "number",
      "of",
      "TV",
      "Channels",
      "and",
      "how",
      "many",
      "channels",
      "use",
      "it",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "query_toks": [
      "SELECT",
      "T1.series_name",
      ",",
      "T1.country",
      "FROM",
      "TV_Channel",
      "AS",
      "T1",
      "JOIN",
      "cartoon",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.Channel",
      "WHERE",
      "T2.directed_by",
      "=",
      "'Michael",
      "Chang",
      "'",
      "INTERSECT",
      "SELECT",
      "T1.series_name",
      ",",
      "T1.country",
      "FROM",
      "TV_Channel",
      "AS",
      "T1",
      "JOIN",
      "cartoon",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.Channel",
      "WHERE",
      "T2.directed_by",
      "=",
      "'Ben",
      "Jones",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "series_name",
      ",",
      "t1",
      ".",
      "country",
      "from",
      "tv_channel",
      "as",
      "t1",
      "join",
      "cartoon",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "channel",
      "where",
      "t2",
      ".",
      "directed_by",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "series_name",
      ",",
      "t1",
      ".",
      "country",
      "from",
      "tv_channel",
      "as",
      "t1",
      "join",
      "cartoon",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "channel",
      "where",
      "t2",
      ".",
      "directed_by",
      "=",
      "value"
    ],
    "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
    "question_toks": [
      "Find",
      "the",
      "series",
      "name",
      "and",
      "country",
      "of",
      "the",
      "tv",
      "channel",
      "that",
      "is",
      "playing",
      "some",
      "cartoons",
      "directed",
      "by",
      "Ben",
      "Jones",
      "and",
      "Michael",
      "Chang",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Michael Chang\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            "\"Ben Jones\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Departments",
      "AS",
      "T1",
      "JOIN",
      "Degree_Programs",
      "AS",
      "T2",
      "ON",
      "T1.department_id",
      "=",
      "T2.department_id",
      "WHERE",
      "T1.department_name",
      "=",
      "'engineer",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "departments",
      "as",
      "t1",
      "join",
      "degree_programs",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "department_id",
      "=",
      "t2",
      ".",
      "department_id",
      "where",
      "t1",
      ".",
      "department_name",
      "=",
      "value"
    ],
    "question": "How many degrees does the engineering department offer?",
    "question_toks": [
      "How",
      "many",
      "degrees",
      "does",
      "the",
      "engineering",
      "department",
      "offer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"engineer\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "battle_death",
    "query": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T2.id",
      ",",
      "T2.name",
      "FROM",
      "death",
      "AS",
      "T1",
      "JOIN",
      "ship",
      "AS",
      "t2",
      "ON",
      "T1.caused_by_ship_id",
      "=",
      "T2.id",
      "GROUP",
      "BY",
      "T2.id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "id",
      ",",
      "t2",
      ".",
      "name",
      "from",
      "death",
      "as",
      "t1",
      "join",
      "ship",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "caused_by_ship_id",
      "=",
      "t2",
      ".",
      "id",
      "group",
      "by",
      "t2",
      ".",
      "id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the ship id and name that caused most total injuries?",
    "question_toks": [
      "What",
      "is",
      "the",
      "ship",
      "id",
      "and",
      "name",
      "that",
      "caused",
      "most",
      "total",
      "injuries",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T2.Money_Rank",
      "FROM",
      "people",
      "AS",
      "T1",
      "JOIN",
      "poker_player",
      "AS",
      "T2",
      "ON",
      "T1.People_ID",
      "=",
      "T2.People_ID",
      "ORDER",
      "BY",
      "T1.Height",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "money_rank",
      "from",
      "people",
      "as",
      "t1",
      "join",
      "poker_player",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "people_id",
      "=",
      "t2",
      ".",
      "people_id",
      "order",
      "by",
      "t1",
      ".",
      "height",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the money rank of the tallest poker player?",
    "question_toks": [
      "What",
      "is",
      "the",
      "money",
      "rank",
      "of",
      "the",
      "tallest",
      "poker",
      "player",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "query_toks": [
      "SELECT",
      "T1.FlightNo",
      "FROM",
      "FLIGHTS",
      "AS",
      "T1",
      "JOIN",
      "AIRLINES",
      "AS",
      "T2",
      "ON",
      "T2.uid",
      "=",
      "T1.Airline",
      "WHERE",
      "T2.Airline",
      "=",
      "``",
      "United",
      "Airlines",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "flightno",
      "from",
      "flights",
      "as",
      "t1",
      "join",
      "airlines",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "uid",
      "=",
      "t1",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "airline",
      "=",
      "value"
    ],
    "question": "What are flight numbers of Airline \"United Airlines\"?",
    "question_toks": [
      "What",
      "are",
      "flight",
      "numbers",
      "of",
      "Airline",
      "``",
      "United",
      "Airlines",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"United Airlines\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "query_toks": [
      "SELECT",
      "T1.Name",
      ",",
      "sum",
      "(",
      "T2.Sales",
      ")",
      "FROM",
      "singer",
      "AS",
      "T1",
      "JOIN",
      "song",
      "AS",
      "T2",
      "ON",
      "T1.Singer_ID",
      "=",
      "T2.Singer_ID",
      "GROUP",
      "BY",
      "T1.Name"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "sum",
      "(",
      "t2",
      ".",
      "sales",
      ")",
      "from",
      "singer",
      "as",
      "t1",
      "join",
      "song",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "singer_id",
      "=",
      "t2",
      ".",
      "singer_id",
      "group",
      "by",
      "t1",
      ".",
      "name"
    ],
    "question": "For each singer name, what is the total sales for their songs?",
    "question_toks": [
      "For",
      "each",
      "singer",
      "name",
      ",",
      "what",
      "is",
      "the",
      "total",
      "sales",
      "for",
      "their",
      "songs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.first_name",
      ",",
      "T3.treatment_type_description",
      "FROM",
      "professionals",
      "AS",
      "T1",
      "JOIN",
      "Treatments",
      "AS",
      "T2",
      "ON",
      "T1.professional_id",
      "=",
      "T2.professional_id",
      "JOIN",
      "Treatment_types",
      "AS",
      "T3",
      "ON",
      "T2.treatment_type_code",
      "=",
      "T3.treatment_type_code"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "first_name",
      ",",
      "t3",
      ".",
      "treatment_type_description",
      "from",
      "professionals",
      "as",
      "t1",
      "join",
      "treatments",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "professional_id",
      "=",
      "t2",
      ".",
      "professional_id",
      "join",
      "treatment_types",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "treatment_type_code",
      "=",
      "t3",
      ".",
      "treatment_type_code"
    ],
    "question": "What are each professional's first name and description of the treatment they have performed?",
    "question_toks": [
      "What",
      "are",
      "each",
      "professional",
      "'s",
      "first",
      "name",
      "and",
      "description",
      "of",
      "the",
      "treatment",
      "they",
      "have",
      "performed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ],
            [
              0,
              46,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                47,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "query_toks": [
      "SELECT",
      "T1.Name",
      ",",
      "sum",
      "(",
      "T2.Sales",
      ")",
      "FROM",
      "singer",
      "AS",
      "T1",
      "JOIN",
      "song",
      "AS",
      "T2",
      "ON",
      "T1.Singer_ID",
      "=",
      "T2.Singer_ID",
      "GROUP",
      "BY",
      "T1.Name"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "sum",
      "(",
      "t2",
      ".",
      "sales",
      ")",
      "from",
      "singer",
      "as",
      "t1",
      "join",
      "song",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "singer_id",
      "=",
      "t2",
      ".",
      "singer_id",
      "group",
      "by",
      "t1",
      ".",
      "name"
    ],
    "question": "Show the names of singers and the total sales of their songs.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "singers",
      "and",
      "the",
      "total",
      "sales",
      "of",
      "their",
      "songs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "winner_name",
      ")",
      "FROM",
      "matches",
      "WHERE",
      "tourney_name",
      "=",
      "'WTA",
      "Championships",
      "'",
      "AND",
      "winner_hand",
      "=",
      "'L",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "winner_name",
      ")",
      "from",
      "matches",
      "where",
      "tourney_name",
      "=",
      "value",
      "and",
      "winner_hand",
      "=",
      "value"
    ],
    "question": "Find the number of left handed winners who participated in the WTA Championships.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "left",
      "handed",
      "winners",
      "who",
      "participated",
      "in",
      "the",
      "WTA",
      "Championships",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                34,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"WTA Championships\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          "\"L\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "ranking_points",
      ")",
      ",",
      "T1.first_name",
      "FROM",
      "players",
      "AS",
      "T1",
      "JOIN",
      "rankings",
      "AS",
      "T2",
      "ON",
      "T1.player_id",
      "=",
      "T2.player_id",
      "GROUP",
      "BY",
      "T1.first_name"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "ranking_points",
      ")",
      ",",
      "t1",
      ".",
      "first_name",
      "from",
      "players",
      "as",
      "t1",
      "join",
      "rankings",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "player_id",
      "=",
      "t2",
      ".",
      "player_id",
      "group",
      "by",
      "t1",
      ".",
      "first_name"
    ],
    "question": "Find the total ranking points for each player and their first name.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "ranking",
      "points",
      "for",
      "each",
      "player",
      "and",
      "their",
      "first",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              41,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                42,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.age",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'dog",
      "'",
      "AND",
      "T1.stuid",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.stuid",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'cat",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "age",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value",
      ")"
    ],
    "question": "What is the first name of every student who has a dog but does not have a cat?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "name",
      "of",
      "every",
      "student",
      "who",
      "has",
      "a",
      "dog",
      "but",
      "does",
      "not",
      "have",
      "a",
      "cat",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"dog\"",
          null
        ],
        "and",
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ],
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ],
                "and",
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    10,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"cat\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "T2.Name",
      "FROM",
      "course_arrange",
      "AS",
      "T1",
      "JOIN",
      "teacher",
      "AS",
      "T2",
      "ON",
      "T1.Teacher_ID",
      "=",
      "T2.Teacher_ID",
      "GROUP",
      "BY",
      "T2.Name",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "course_arrange",
      "as",
      "t1",
      "join",
      "teacher",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "teacher_id",
      "=",
      "t2",
      ".",
      "teacher_id",
      "group",
      "by",
      "t2",
      ".",
      "name",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the names of the teachers who teach at least two courses?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "teachers",
      "who",
      "teach",
      "at",
      "least",
      "two",
      "courses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.degree_program_id",
      ",",
      "T1.degree_summary_name",
      "FROM",
      "Degree_Programs",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T2",
      "ON",
      "T1.degree_program_id",
      "=",
      "T2.degree_program_id",
      "GROUP",
      "BY",
      "T1.degree_program_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "degree_program_id",
      ",",
      "t1",
      ".",
      "degree_summary_name",
      "from",
      "degree_programs",
      "as",
      "t1",
      "join",
      "student_enrolment",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "degree_program_id",
      "=",
      "t2",
      ".",
      "degree_program_id",
      "group",
      "by",
      "t1",
      ".",
      "degree_program_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the program which most number of students are enrolled in. List both the id and the summary.",
    "question_toks": [
      "Find",
      "the",
      "program",
      "which",
      "most",
      "number",
      "of",
      "students",
      "are",
      "enrolled",
      "in",
      ".",
      "List",
      "both",
      "the",
      "id",
      "and",
      "the",
      "summary",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              45,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "query_toks": [
      "SELECT",
      "district",
      "FROM",
      "shop",
      "WHERE",
      "Number_products",
      "<",
      "3000",
      "INTERSECT",
      "SELECT",
      "district",
      "FROM",
      "shop",
      "WHERE",
      "Number_products",
      ">",
      "10000"
    ],
    "query_toks_no_value": [
      "select",
      "district",
      "from",
      "shop",
      "where",
      "number_products",
      "<",
      "value",
      "intersect",
      "select",
      "district",
      "from",
      "shop",
      "where",
      "number_products",
      ">",
      "value"
    ],
    "question": "Which district has both stores with less than 3000 products and stores with more than 10000 products?",
    "question_toks": [
      "Which",
      "district",
      "has",
      "both",
      "stores",
      "with",
      "less",
      "than",
      "3000",
      "products",
      "and",
      "stores",
      "with",
      "more",
      "than",
      "10000",
      "products",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          3000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  8,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            3,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            10000.0,
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.date_arrived",
      ",",
      "T1.date_departed",
      "FROM",
      "Dogs",
      "AS",
      "T1",
      "JOIN",
      "Treatments",
      "AS",
      "T2",
      "ON",
      "T1.dog_id",
      "=",
      "T2.dog_id"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "date_arrived",
      ",",
      "t1",
      ".",
      "date_departed",
      "from",
      "dogs",
      "as",
      "t1",
      "join",
      "treatments",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "dog_id",
      "=",
      "t2",
      ".",
      "dog_id"
    ],
    "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
    "question_toks": [
      "What",
      "are",
      "the",
      "arriving",
      "date",
      "and",
      "the",
      "departing",
      "date",
      "of",
      "the",
      "dogs",
      "who",
      "have",
      "gone",
      "through",
      "a",
      "treatment",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              45,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "countries",
      "as",
      "t1",
      "join",
      "car_makers",
      "as",
      "t2",
      "on",
      "t1.countryid",
      "=",
      "t2.country",
      "group",
      "by",
      "t1.countryid",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "countries",
      "as",
      "t1",
      "join",
      "car_makers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "countryid",
      "=",
      "t2",
      ".",
      "country",
      "group",
      "by",
      "t1",
      ".",
      "countryid",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "How many countries has more than 2 car makers ?",
    "question_toks": [
      "How",
      "many",
      "countries",
      "has",
      "more",
      "than",
      "2",
      "car",
      "makers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",
    "query_toks": [
      "select",
      "t2.name",
      ",",
      "t2.capacity",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1.stadium_id",
      "=",
      "t2.stadium_id",
      "where",
      "t1.year",
      ">",
      "2013",
      "group",
      "by",
      "t2.stadium_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "capacity",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "where",
      "t1",
      ".",
      "year",
      ">",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "stadium_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name and capacity of the stadium with the most concerts after 2013 ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "capacity",
      "of",
      "the",
      "stadium",
      "with",
      "the",
      "most",
      "concerts",
      "after",
      "2013",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2013.0,
          null
        ]
      ],
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Hometown",
      "FROM",
      "teacher",
      "ORDER",
      "BY",
      "Age",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "hometown",
      "from",
      "teacher",
      "order",
      "by",
      "age",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the hometown of the youngest teacher?",
    "question_toks": [
      "What",
      "is",
      "the",
      "hometown",
      "of",
      "the",
      "youngest",
      "teacher",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "professional_id",
      ",",
      "last_name",
      ",",
      "cell_number",
      "FROM",
      "Professionals",
      "WHERE",
      "state",
      "=",
      "'Indiana",
      "'",
      "UNION",
      "SELECT",
      "T1.professional_id",
      ",",
      "T1.last_name",
      ",",
      "T1.cell_number",
      "FROM",
      "Professionals",
      "AS",
      "T1",
      "JOIN",
      "Treatments",
      "AS",
      "T2",
      "ON",
      "T1.professional_id",
      "=",
      "T2.professional_id",
      "GROUP",
      "BY",
      "T1.professional_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "professional_id",
      ",",
      "last_name",
      ",",
      "cell_number",
      "from",
      "professionals",
      "where",
      "state",
      "=",
      "value",
      "union",
      "select",
      "t1",
      ".",
      "professional_id",
      ",",
      "t1",
      ".",
      "last_name",
      ",",
      "t1",
      ".",
      "cell_number",
      "from",
      "professionals",
      "as",
      "t1",
      "join",
      "treatments",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "professional_id",
      "=",
      "t2",
      ".",
      "professional_id",
      "group",
      "by",
      "t1",
      ".",
      "professional_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
    "question_toks": [
      "Find",
      "the",
      "id",
      ",",
      "last",
      "name",
      "and",
      "cell",
      "phone",
      "of",
      "the",
      "professionals",
      "who",
      "live",
      "in",
      "the",
      "state",
      "of",
      "Indiana",
      "or",
      "have",
      "performed",
      "more",
      "than",
      "two",
      "treatments",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"Indiana\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": {
        "from": {
          "table_units": [
            [
              "table_unit",
              6
            ],
            [
              "table_unit",
              7
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  33,
                  false
                ],
                null
              ],
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  33,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  40,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  43,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [
          [
            0,
            33,
            false
          ]
        ],
        "having": [
          [
            false,
            3,
            [
              0,
              [
                3,
                0,
                false
              ],
              null
            ],
            2.0,
            null
          ]
        ],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.degree_program_id",
      ",",
      "T1.degree_summary_name",
      "FROM",
      "Degree_Programs",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T2",
      "ON",
      "T1.degree_program_id",
      "=",
      "T2.degree_program_id",
      "GROUP",
      "BY",
      "T1.degree_program_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "degree_program_id",
      ",",
      "t1",
      ".",
      "degree_summary_name",
      "from",
      "degree_programs",
      "as",
      "t1",
      "join",
      "student_enrolment",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "degree_program_id",
      "=",
      "t2",
      ".",
      "degree_program_id",
      "group",
      "by",
      "t1",
      ".",
      "degree_program_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the program id and the summary of the degree that has the most students enrolled?",
    "question_toks": [
      "What",
      "is",
      "the",
      "program",
      "id",
      "and",
      "the",
      "summary",
      "of",
      "the",
      "degree",
      "that",
      "has",
      "the",
      "most",
      "students",
      "enrolled",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              45,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Episode FROM TV_series ORDER BY rating",
    "query_toks": [
      "SELECT",
      "Episode",
      "FROM",
      "TV_series",
      "ORDER",
      "BY",
      "rating"
    ],
    "query_toks_no_value": [
      "select",
      "episode",
      "from",
      "tv_series",
      "order",
      "by",
      "rating"
    ],
    "question": "What are all of the episodes ordered by ratings?",
    "question_toks": [
      "What",
      "are",
      "all",
      "of",
      "the",
      "episodes",
      "ordered",
      "by",
      "ratings",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "query_toks": [
      "SELECT",
      "Record_Company",
      "FROM",
      "orchestra",
      "WHERE",
      "Year_of_Founded",
      "<",
      "2003",
      "INTERSECT",
      "SELECT",
      "Record_Company",
      "FROM",
      "orchestra",
      "WHERE",
      "Year_of_Founded",
      ">",
      "2003"
    ],
    "query_toks_no_value": [
      "select",
      "record_company",
      "from",
      "orchestra",
      "where",
      "year_of_founded",
      "<",
      "value",
      "intersect",
      "select",
      "record_company",
      "from",
      "orchestra",
      "where",
      "year_of_founded",
      ">",
      "value"
    ],
    "question": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?",
    "question_toks": [
      "What",
      "are",
      "the",
      "record",
      "companies",
      "that",
      "are",
      "used",
      "by",
      "both",
      "orchestras",
      "founded",
      "before",
      "2003",
      "and",
      "those",
      "founded",
      "after",
      "2003",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2003.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  9,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            3,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            2003.0,
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "query_toks": [
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "WHERE",
      "T2.SourceAirport",
      "=",
      "``",
      "CVO",
      "''",
      "EXCEPT",
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "WHERE",
      "T2.SourceAirport",
      "=",
      "``",
      "APG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "sourceairport",
      "=",
      "value",
      "except",
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "sourceairport",
      "=",
      "value"
    ],
    "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
    "question_toks": [
      "Find",
      "all",
      "airlines",
      "that",
      "have",
      "flights",
      "from",
      "airport",
      "'CVO",
      "'",
      "but",
      "not",
      "from",
      "'APG",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"CVO\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            "\"APG\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T2.Name",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "city",
      "AS",
      "T2",
      "ON",
      "T2.CountryCode",
      "=",
      "T1.Code",
      "WHERE",
      "T1.Continent",
      "=",
      "'Europe",
      "'",
      "AND",
      "T1.Name",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T3.Name",
      "FROM",
      "country",
      "AS",
      "T3",
      "JOIN",
      "countrylanguage",
      "AS",
      "T4",
      "ON",
      "T3.Code",
      "=",
      "T4.CountryCode",
      "WHERE",
      "T4.IsOfficial",
      "=",
      "'T",
      "'",
      "AND",
      "T4.Language",
      "=",
      "'English",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "city",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "countrycode",
      "=",
      "t1",
      ".",
      "code",
      "where",
      "t1",
      ".",
      "continent",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "not",
      "in",
      "(",
      "select",
      "t3",
      ".",
      "name",
      "from",
      "country",
      "as",
      "t3",
      "join",
      "countrylanguage",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "code",
      "=",
      "t4",
      ".",
      "countrycode",
      "where",
      "t4",
      ".",
      "isofficial",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "language",
      "=",
      "value",
      ")"
    ],
    "question": "Which cities are in European countries where English is not the official language?",
    "question_toks": [
      "Which",
      "cities",
      "are",
      "in",
      "European",
      "countries",
      "where",
      "English",
      "is",
      "not",
      "the",
      "official",
      "language",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Europe\"",
          null
        ],
        "and",
        [
          true,
          8,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ],
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    23,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    25,
                    false
                  ],
                  null
                ],
                "\"T\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    24,
                    false
                  ],
                  null
                ],
                "\"English\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T2.horsepower",
      ",",
      "T1.Make",
      "FROM",
      "CAR_NAMES",
      "AS",
      "T1",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T2",
      "ON",
      "T1.MakeId",
      "=",
      "T2.Id",
      "WHERE",
      "T2.cylinders",
      "=",
      "3",
      "ORDER",
      "BY",
      "T2.horsepower",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "horsepower",
      ",",
      "t1",
      ".",
      "make",
      "from",
      "car_names",
      "as",
      "t1",
      "join",
      "cars_data",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "makeid",
      "=",
      "t2",
      ".",
      "id",
      "where",
      "t2",
      ".",
      "cylinders",
      "=",
      "value",
      "order",
      "by",
      "t2",
      ".",
      "horsepower",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "horsepower",
      "and",
      "the",
      "make",
      "of",
      "the",
      "car",
      "models",
      "with",
      "3",
      "cylinders",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.first_name",
      ",",
      "T1.last_name",
      "FROM",
      "Professionals",
      "AS",
      "T1",
      "JOIN",
      "Treatments",
      "AS",
      "T2",
      "WHERE",
      "cost_of_treatment",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "cost_of_treatment",
      ")",
      "FROM",
      "Treatments",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "first_name",
      ",",
      "t1",
      ".",
      "last_name",
      "from",
      "professionals",
      "as",
      "t1",
      "join",
      "treatments",
      "as",
      "t2",
      "where",
      "cost_of_treatment",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "cost_of_treatment",
      ")",
      "from",
      "treatments",
      ")"
    ],
    "question": "What are the first name and last name of the professionals who have done treatment with cost below average?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "of",
      "the",
      "professionals",
      "who",
      "have",
      "done",
      "treatment",
      "with",
      "cost",
      "below",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              49,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  7
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      49,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "LifeExpectancy",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Continent",
      "=",
      "``",
      "Africa",
      "''",
      "AND",
      "GovernmentForm",
      "=",
      "``",
      "Republic",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "lifeexpectancy",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value",
      "and",
      "governmentform",
      "=",
      "value"
    ],
    "question": "What is the average life expectancy in African countries that are republics?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "life",
      "expectancy",
      "in",
      "African",
      "countries",
      "that",
      "are",
      "republics",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Africa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Republic\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "query_toks": [
      "SELECT",
      "student_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Friend",
      "GROUP",
      "BY",
      "student_id"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "friend",
      "group",
      "by",
      "student_id"
    ],
    "question": "How many friends does each student have?",
    "question_toks": [
      "How",
      "many",
      "friends",
      "does",
      "each",
      "student",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "query_toks": [
      "SELECT",
      "T3.Name",
      "FROM",
      "course_arrange",
      "AS",
      "T1",
      "JOIN",
      "course",
      "AS",
      "T2",
      "ON",
      "T1.Course_ID",
      "=",
      "T2.Course_ID",
      "JOIN",
      "teacher",
      "AS",
      "T3",
      "ON",
      "T1.Teacher_ID",
      "=",
      "T3.Teacher_ID",
      "WHERE",
      "T2.Course",
      "=",
      "``",
      "Math",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      "from",
      "course_arrange",
      "as",
      "t1",
      "join",
      "course",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "course_id",
      "=",
      "t2",
      ".",
      "course_id",
      "join",
      "teacher",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "teacher_id",
      "=",
      "t3",
      ".",
      "teacher_id",
      "where",
      "t2",
      ".",
      "course",
      "=",
      "value"
    ],
    "question": "Show the name of the teacher for the math course.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "of",
      "the",
      "teacher",
      "for",
      "the",
      "math",
      "course",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Math\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "query_toks": [
      "SELECT",
      "T2.Name",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "course_arrange",
      "AS",
      "T1",
      "JOIN",
      "teacher",
      "AS",
      "T2",
      "ON",
      "T1.Teacher_ID",
      "=",
      "T2.Teacher_ID",
      "GROUP",
      "BY",
      "T2.Name"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "course_arrange",
      "as",
      "t1",
      "join",
      "teacher",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "teacher_id",
      "=",
      "t2",
      ".",
      "teacher_id",
      "group",
      "by",
      "t2",
      ".",
      "name"
    ],
    "question": "Show names of teachers and the number of courses they teach.",
    "question_toks": [
      "Show",
      "names",
      "of",
      "teachers",
      "and",
      "the",
      "number",
      "of",
      "courses",
      "they",
      "teach",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Episode FROM TV_series ORDER BY rating",
    "query_toks": [
      "SELECT",
      "Episode",
      "FROM",
      "TV_series",
      "ORDER",
      "BY",
      "rating"
    ],
    "query_toks_no_value": [
      "select",
      "episode",
      "from",
      "tv_series",
      "order",
      "by",
      "rating"
    ],
    "question": "List the Episode of all TV series sorted by rating.",
    "question_toks": [
      "List",
      "the",
      "Episode",
      "of",
      "all",
      "TV",
      "series",
      "sorted",
      "by",
      "rating",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.owner_id",
      ",",
      "T1.zip_code",
      "FROM",
      "Owners",
      "AS",
      "T1",
      "JOIN",
      "Dogs",
      "AS",
      "T2",
      "ON",
      "T1.owner_id",
      "=",
      "T2.owner_id",
      "JOIN",
      "Treatments",
      "AS",
      "T3",
      "ON",
      "T2.dog_id",
      "=",
      "T3.dog_id",
      "GROUP",
      "BY",
      "T1.owner_id",
      "ORDER",
      "BY",
      "sum",
      "(",
      "T3.cost_of_treatment",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "owner_id",
      ",",
      "t1",
      ".",
      "zip_code",
      "from",
      "owners",
      "as",
      "t1",
      "join",
      "dogs",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "owner_id",
      "=",
      "t2",
      ".",
      "owner_id",
      "join",
      "treatments",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "dog_id",
      "=",
      "t3",
      ".",
      "dog_id",
      "group",
      "by",
      "t1",
      ".",
      "owner_id",
      "order",
      "by",
      "sum",
      "(",
      "t3",
      ".",
      "cost_of_treatment",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.",
    "question_toks": [
      "Which",
      "owner",
      "has",
      "paid",
      "the",
      "largest",
      "amount",
      "of",
      "money",
      "in",
      "total",
      "for",
      "their",
      "dogs",
      "?",
      "Show",
      "the",
      "owner",
      "id",
      "and",
      "zip",
      "code",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              45,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              4,
              49,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "query_toks": [
      "SELECT",
      "T1.country",
      "FROM",
      "TV_Channel",
      "AS",
      "T1",
      "JOIN",
      "cartoon",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.Channel",
      "WHERE",
      "T2.written_by",
      "=",
      "'Todd",
      "Casey",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "country",
      "from",
      "tv_channel",
      "as",
      "t1",
      "join",
      "cartoon",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "channel",
      "where",
      "t2",
      ".",
      "written_by",
      "=",
      "value"
    ],
    "question": "which countries' tv channels are playing some cartoon written by Todd Casey?",
    "question_toks": [
      "which",
      "countries",
      "'",
      "tv",
      "channels",
      "are",
      "playing",
      "some",
      "cartoon",
      "written",
      "by",
      "Todd",
      "Casey",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"Todd Casey\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "singer_in_concert",
      "AS",
      "T1",
      "JOIN",
      "singer",
      "AS",
      "T2",
      "ON",
      "T1.singer_id",
      "=",
      "T2.singer_id",
      "JOIN",
      "concert",
      "AS",
      "T3",
      "ON",
      "T1.concert_id",
      "=",
      "T3.concert_id",
      "WHERE",
      "T3.year",
      "=",
      "2014"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "singer_in_concert",
      "as",
      "t1",
      "join",
      "singer",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "singer_id",
      "=",
      "t2",
      ".",
      "singer_id",
      "join",
      "concert",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "concert_id",
      "=",
      "t3",
      ".",
      "concert_id",
      "where",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "List all singer names in concerts in year 2014.",
    "question_toks": [
      "List",
      "all",
      "singer",
      "names",
      "in",
      "concerts",
      "in",
      "year",
      "2014",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T2.petid",
      "=",
      "T3.petid",
      "WHERE",
      "T1.sex",
      "=",
      "'F",
      "'",
      "AND",
      "T3.pettype",
      "=",
      "'dog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "petid",
      "=",
      "t3",
      ".",
      "petid",
      "where",
      "t1",
      ".",
      "sex",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "pettype",
      "=",
      "value"
    ],
    "question": "How many dog pets are raised by female students?",
    "question_toks": [
      "How",
      "many",
      "dog",
      "pets",
      "are",
      "raised",
      "by",
      "female",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"dog\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Birth_Date",
      "FROM",
      "people",
      "AS",
      "T1",
      "JOIN",
      "poker_player",
      "AS",
      "T2",
      "ON",
      "T1.People_ID",
      "=",
      "T2.People_ID",
      "ORDER",
      "BY",
      "T2.Earnings",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "birth_date",
      "from",
      "people",
      "as",
      "t1",
      "join",
      "poker_player",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "people_id",
      "=",
      "t2",
      ".",
      "people_id",
      "order",
      "by",
      "t2",
      ".",
      "earnings",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the birth date of the poker player with the lowest earnings?",
    "question_toks": [
      "What",
      "is",
      "the",
      "birth",
      "date",
      "of",
      "the",
      "poker",
      "player",
      "with",
      "the",
      "lowest",
      "earnings",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "GNP",
      ")",
      ",",
      "sum",
      "(",
      "population",
      ")",
      "FROM",
      "country",
      "WHERE",
      "GovernmentForm",
      "=",
      "``",
      "US",
      "Territory",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "gnp",
      ")",
      ",",
      "sum",
      "(",
      "population",
      ")",
      "from",
      "country",
      "where",
      "governmentform",
      "=",
      "value"
    ],
    "question": "What is the average GNP and total population in all nations whose government is US territory?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "GNP",
      "and",
      "total",
      "population",
      "in",
      "all",
      "nations",
      "whose",
      "government",
      "is",
      "US",
      "territory",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"US Territory\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "query_toks": [
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "WHERE",
      "T2.SourceAirport",
      "=",
      "``",
      "CVO",
      "''",
      "EXCEPT",
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "WHERE",
      "T2.SourceAirport",
      "=",
      "``",
      "APG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "sourceairport",
      "=",
      "value",
      "except",
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "sourceairport",
      "=",
      "value"
    ],
    "question": "Which airlines have departures from CVO but not from APG airports?",
    "question_toks": [
      "Which",
      "airlines",
      "have",
      "departures",
      "from",
      "CVO",
      "but",
      "not",
      "from",
      "APG",
      "airports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"CVO\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            "\"APG\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "(",
      "SELECT",
      "T1.Name",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T2.Language",
      "=",
      "``",
      "English",
      "''",
      "INTERSECT",
      "SELECT",
      "T1.Name",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T2.Language",
      "=",
      "``",
      "Dutch",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "(",
      "select",
      "t1",
      ".",
      "name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "language",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "language",
      "=",
      "value",
      ")"
    ],
    "question": "What is the number of nations that use English and Dutch?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "nations",
      "that",
      "use",
      "English",
      "and",
      "Dutch",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "sql",
            {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    2
                  ],
                  [
                    "table_unit",
                    3
                  ]
                ],
                "conds": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        8,
                        false
                      ],
                      null
                    ],
                    [
                      0,
                      23,
                      false
                    ],
                    null
                  ]
                ]
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        9,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ],
                  "\"English\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": {
                "from": {
                  "table_units": [
                    [
                      "table_unit",
                      2
                    ],
                    [
                      "table_unit",
                      3
                    ]
                  ],
                  "conds": [
                    [
                      false,
                      2,
                      [
                        0,
                        [
                          0,
                          8,
                          false
                        ],
                        null
                      ],
                      [
                        0,
                        23,
                        false
                      ],
                      null
                    ]
                  ]
                },
                "select": [
                  false,
                  [
                    [
                      0,
                      [
                        0,
                        [
                          0,
                          9,
                          false
                        ],
                        null
                      ]
                    ]
                  ]
                ],
                "where": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        24,
                        false
                      ],
                      null
                    ],
                    "\"Dutch\"",
                    null
                  ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
              },
              "union": null,
              "except": null
            }
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Paragraphs",
      "GROUP",
      "BY",
      "document_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "paragraphs",
      "group",
      "by",
      "document_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "asc",
      "limit",
      "value"
    ],
    "question": "Return the id of the document with the fewest paragraphs.",
    "question_toks": [
      "Return",
      "the",
      "id",
      "of",
      "the",
      "document",
      "with",
      "the",
      "fewest",
      "paragraphs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "battle_death",
    "query": "SELECT max(killed) ,  min(killed) FROM death",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "killed",
      ")",
      ",",
      "min",
      "(",
      "killed",
      ")",
      "FROM",
      "death"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "killed",
      ")",
      ",",
      "min",
      "(",
      "killed",
      ")",
      "from",
      "death"
    ],
    "question": "What is maximum and minimum death toll caused each time?",
    "question_toks": [
      "What",
      "is",
      "maximum",
      "and",
      "minimum",
      "death",
      "toll",
      "caused",
      "each",
      "time",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "query_toks": [
      "SELECT",
      "T1.CountryName",
      "FROM",
      "COUNTRIES",
      "AS",
      "T1",
      "JOIN",
      "CONTINENTS",
      "AS",
      "T2",
      "ON",
      "T1.Continent",
      "=",
      "T2.ContId",
      "JOIN",
      "CAR_MAKERS",
      "AS",
      "T3",
      "ON",
      "T1.CountryId",
      "=",
      "T3.Country",
      "WHERE",
      "T2.Continent",
      "=",
      "'europe",
      "'",
      "GROUP",
      "BY",
      "T1.CountryName",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "3",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "countryname",
      "from",
      "countries",
      "as",
      "t1",
      "join",
      "continents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "continent",
      "=",
      "t2",
      ".",
      "contid",
      "join",
      "car_makers",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "countryid",
      "=",
      "t3",
      ".",
      "country",
      "where",
      "t2",
      ".",
      "continent",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "countryname",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Which countries in europe have at least 3 car manufacturers?",
    "question_toks": [
      "Which",
      "countries",
      "in",
      "europe",
      "have",
      "at",
      "least",
      "3",
      "car",
      "manufacturers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"europe\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "hiring",
      "AS",
      "t1",
      "JOIN",
      "shop",
      "AS",
      "t2",
      "ON",
      "t1.shop_id",
      "=",
      "t2.shop_id",
      "GROUP",
      "BY",
      "t1.shop_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "hiring",
      "as",
      "t1",
      "join",
      "shop",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "shop_id",
      "=",
      "t2",
      ".",
      "shop_id",
      "group",
      "by",
      "t1",
      ".",
      "shop_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the shop that is hiring the largest number of employees?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "shop",
      "that",
      "is",
      "hiring",
      "the",
      "largest",
      "number",
      "of",
      "employees",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "T1.professional_id",
      ",",
      "T1.cell_number",
      "FROM",
      "Professionals",
      "AS",
      "T1",
      "JOIN",
      "Treatments",
      "AS",
      "T2",
      "ON",
      "T1.professional_id",
      "=",
      "T2.professional_id",
      "GROUP",
      "BY",
      "T1.professional_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "professional_id",
      ",",
      "t1",
      ".",
      "cell_number",
      "from",
      "professionals",
      "as",
      "t1",
      "join",
      "treatments",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "professional_id",
      "=",
      "t2",
      ".",
      "professional_id",
      "group",
      "by",
      "t1",
      ".",
      "professional_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone.",
    "question_toks": [
      "Which",
      "professionals",
      "have",
      "done",
      "at",
      "least",
      "two",
      "types",
      "of",
      "treatments",
      "?",
      "List",
      "the",
      "professional",
      "id",
      "and",
      "cell",
      "phone",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ],
            [
              0,
              46,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          33,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "battle_death",
    "query": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "RESULT",
      ",",
      "bulgarian_commander",
      "FROM",
      "battle",
      "EXCEPT",
      "SELECT",
      "T1.name",
      ",",
      "T1.result",
      ",",
      "T1.bulgarian_commander",
      "FROM",
      "battle",
      "AS",
      "T1",
      "JOIN",
      "ship",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.lost_in_battle",
      "WHERE",
      "T2.location",
      "=",
      "'English",
      "Channel",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "result",
      ",",
      "bulgarian_commander",
      "from",
      "battle",
      "except",
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "result",
      ",",
      "t1",
      ".",
      "bulgarian_commander",
      "from",
      "battle",
      "as",
      "t1",
      "join",
      "ship",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "lost_in_battle",
      "where",
      "t2",
      ".",
      "location",
      "=",
      "value"
    ],
    "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
    "question_toks": [
      "Show",
      "names",
      ",",
      "results",
      "and",
      "bulgarian",
      "commanders",
      "of",
      "the",
      "battles",
      "with",
      "no",
      "ships",
      "lost",
      "in",
      "the",
      "'English",
      "Channel",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              1
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  6,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  4,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            "\"English Channel\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.AirportCode",
      "FROM",
      "AIRPORTS",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.AirportCode",
      "=",
      "T2.DestAirport",
      "OR",
      "T1.AirportCode",
      "=",
      "T2.SourceAirport",
      "GROUP",
      "BY",
      "T1.AirportCode",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airportcode",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "airportcode",
      "=",
      "t2",
      ".",
      "destairport",
      "or",
      "t1",
      ".",
      "airportcode",
      "=",
      "t2",
      ".",
      "sourceairport",
      "group",
      "by",
      "t1",
      ".",
      "airportcode",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "limit",
      "value"
    ],
    "question": "What is the code of airport that has fewest number of flights?",
    "question_toks": [
      "What",
      "is",
      "the",
      "code",
      "of",
      "airport",
      "that",
      "has",
      "fewest",
      "number",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "query_toks": [
      "SELECT",
      "winner_name",
      "FROM",
      "matches",
      "WHERE",
      "YEAR",
      "=",
      "2013",
      "INTERSECT",
      "SELECT",
      "winner_name",
      "FROM",
      "matches",
      "WHERE",
      "YEAR",
      "=",
      "2016"
    ],
    "query_toks_no_value": [
      "select",
      "winner_name",
      "from",
      "matches",
      "where",
      "year",
      "=",
      "value",
      "intersect",
      "select",
      "winner_name",
      "from",
      "matches",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "List the names of all winners who played in both 2013 and 2016.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "winners",
      "who",
      "played",
      "in",
      "both",
      "2013",
      "and",
      "2016",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          2013.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  34,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            2016.0,
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "CARS_DATA",
      "WHERE",
      "Accelerate",
      ">",
      "(",
      "SELECT",
      "Accelerate",
      "FROM",
      "CARS_DATA",
      "ORDER",
      "BY",
      "Horsepower",
      "DESC",
      "LIMIT",
      "1",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "cars_data",
      "where",
      "accelerate",
      ">",
      "(",
      "select",
      "accelerate",
      "from",
      "cars_data",
      "order",
      "by",
      "horsepower",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "How many cars have a larger accelerate than the car with the largest horsepower?",
    "question_toks": [
      "How",
      "many",
      "cars",
      "have",
      "a",
      "larger",
      "accelerate",
      "than",
      "the",
      "car",
      "with",
      "the",
      "largest",
      "horsepower",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      22,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    0,
                    20,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "select name from teacher where hometown != \"little lever urban district\"",
    "query_toks": [
      "select",
      "name",
      "from",
      "teacher",
      "where",
      "hometown",
      "!=",
      "\"little lever urban district\""
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "teacher",
      "where",
      "hometown",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "teachers",
      "whose",
      "hometown",
      "is",
      "not",
      "``",
      "Little",
      "Lever",
      "Urban",
      "District",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"little lever urban district\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.owner_id",
      ",",
      "T2.first_name",
      ",",
      "T2.last_name",
      "FROM",
      "Dogs",
      "AS",
      "T1",
      "JOIN",
      "Owners",
      "AS",
      "T2",
      "ON",
      "T1.owner_id",
      "=",
      "T2.owner_id",
      "GROUP",
      "BY",
      "T1.owner_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "owner_id",
      ",",
      "t2",
      ".",
      "first_name",
      ",",
      "t2",
      ".",
      "last_name",
      "from",
      "dogs",
      "as",
      "t1",
      "join",
      "owners",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "owner_id",
      "=",
      "t2",
      ".",
      "owner_id",
      "group",
      "by",
      "t1",
      ".",
      "owner_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the owner id, first name and last name of the owner who has the most dogs.",
    "question_toks": [
      "Return",
      "the",
      "owner",
      "id",
      ",",
      "first",
      "name",
      "and",
      "last",
      "name",
      "of",
      "the",
      "owner",
      "who",
      "has",
      "the",
      "most",
      "dogs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          21,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T2.transcript_date",
      ",",
      "T1.transcript_id",
      "FROM",
      "Transcript_Contents",
      "AS",
      "T1",
      "JOIN",
      "Transcripts",
      "AS",
      "T2",
      "ON",
      "T1.transcript_id",
      "=",
      "T2.transcript_id",
      "GROUP",
      "BY",
      "T1.transcript_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "transcript_date",
      ",",
      "t1",
      ".",
      "transcript_id",
      "from",
      "transcript_contents",
      "as",
      "t1",
      "join",
      "transcripts",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "transcript_id",
      "=",
      "t2",
      ".",
      "transcript_id",
      "group",
      "by",
      "t1",
      ".",
      "transcript_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the date and id of the transcript with the least number of results?",
    "question_toks": [
      "What",
      "is",
      "the",
      "date",
      "and",
      "id",
      "of",
      "the",
      "transcript",
      "with",
      "the",
      "least",
      "number",
      "of",
      "results",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ],
          [
            "table_unit",
            9
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                56,
                false
              ],
              null
            ],
            [
              0,
              52,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                53,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                56,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          56,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.student_id",
      ",",
      "T1.first_name",
      ",",
      "T1.middle_name",
      ",",
      "T1.last_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.student_id",
      "FROM",
      "Students",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.student_id",
      "GROUP",
      "BY",
      "T1.student_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "student_id",
      ",",
      "t1",
      ".",
      "first_name",
      ",",
      "t1",
      ".",
      "middle_name",
      ",",
      "t1",
      ".",
      "last_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "student_id",
      "from",
      "students",
      "as",
      "t1",
      "join",
      "student_enrolment",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "student_id",
      "group",
      "by",
      "t1",
      ".",
      "student_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
    "question_toks": [
      "Which",
      "student",
      "has",
      "enrolled",
      "for",
      "the",
      "most",
      "times",
      "in",
      "any",
      "program",
      "?",
      "List",
      "the",
      "id",
      ",",
      "first",
      "name",
      ",",
      "middle",
      "name",
      ",",
      "last",
      "name",
      ",",
      "the",
      "number",
      "of",
      "enrollments",
      "and",
      "student",
      "id",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ],
            [
              0,
              47,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          32,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.fname",
      ",",
      "T1.age",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "age",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid"
    ],
    "question": "Find the first name and age of students who have a pet.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "and",
      "age",
      "of",
      "students",
      "who",
      "have",
      "a",
      "pet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "query_toks": [
      "SELECT",
      "T1.last_name",
      "FROM",
      "Students",
      "AS",
      "T1",
      "JOIN",
      "Addresses",
      "AS",
      "T2",
      "ON",
      "T1.current_address_id",
      "=",
      "T2.address_id",
      "WHERE",
      "T2.state_province_county",
      "=",
      "'NorthCarolina",
      "'",
      "EXCEPT",
      "SELECT",
      "DISTINCT",
      "T3.last_name",
      "FROM",
      "Students",
      "AS",
      "T3",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T4",
      "ON",
      "T3.student_id",
      "=",
      "T4.student_id"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "last_name",
      "from",
      "students",
      "as",
      "t1",
      "join",
      "addresses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "current_address_id",
      "=",
      "t2",
      ".",
      "address_id",
      "where",
      "t2",
      ".",
      "state_province_county",
      "=",
      "value",
      "except",
      "select",
      "distinct",
      "t3",
      ".",
      "last_name",
      "from",
      "students",
      "as",
      "t3",
      "join",
      "student_enrolment",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "student_id",
      "=",
      "t4",
      ".",
      "student_id"
    ],
    "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
    "question_toks": [
      "What",
      "are",
      "the",
      "last",
      "name",
      "of",
      "the",
      "students",
      "who",
      "live",
      "in",
      "North",
      "Carolina",
      "but",
      "have",
      "not",
      "registered",
      "in",
      "any",
      "degree",
      "programs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"NorthCarolina\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              6
            ],
            [
              "table_unit",
              7
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  32,
                  false
                ],
                null
              ],
              [
                0,
                47,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          true,
          [
            [
              0,
              [
                0,
                [
                  0,
                  37,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "transcript_date",
      ",",
      "other_details",
      "FROM",
      "Transcripts",
      "ORDER",
      "BY",
      "transcript_date",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "transcript_date",
      ",",
      "other_details",
      "from",
      "transcripts",
      "order",
      "by",
      "transcript_date",
      "asc",
      "limit",
      "value"
    ],
    "question": "When is the first transcript released? List the date and details.",
    "question_toks": [
      "When",
      "is",
      "the",
      "first",
      "transcript",
      "released",
      "?",
      "List",
      "the",
      "date",
      "and",
      "details",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                53,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                54,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              53,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Population",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Name",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.Name",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T2.Language",
      "=",
      "``",
      "English",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "population",
      ")",
      "from",
      "country",
      "where",
      "name",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "language",
      "=",
      "value",
      ")"
    ],
    "question": "What is the total number of people living in the nations that do not use English?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "people",
      "living",
      "in",
      "the",
      "nations",
      "that",
      "do",
      "not",
      "use",
      "English",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ],
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    23,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    24,
                    false
                  ],
                  null
                ],
                "\"English\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "query_toks": [
      "SELECT",
      "T1.FullName",
      ",",
      "T1.Id",
      "FROM",
      "CAR_MAKERS",
      "AS",
      "T1",
      "JOIN",
      "MODEL_LIST",
      "AS",
      "T2",
      "ON",
      "T1.Id",
      "=",
      "T2.Maker",
      "GROUP",
      "BY",
      "T1.Id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fullname",
      ",",
      "t1",
      ".",
      "id",
      "from",
      "car_makers",
      "as",
      "t1",
      "join",
      "model_list",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "maker",
      "group",
      "by",
      "t1",
      ".",
      "id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the names and ids of all makers with more than 3 models?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "ids",
      "of",
      "all",
      "makers",
      "with",
      "more",
      "than",
      "3",
      "models",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "select max(capacity), average from stadium",
    "query_toks": [
      "select",
      "max",
      "(",
      "capacity",
      ")",
      ",",
      "average",
      "from",
      "stadium"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "capacity",
      ")",
      ",",
      "average",
      "from",
      "stadium"
    ],
    "question": "What is the maximum capacity and the average of all stadiums ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "capacity",
      "and",
      "the",
      "average",
      "of",
      "all",
      "stadiums",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "query_toks": [
      "SELECT",
      "CountryCode",
      ",",
      "max",
      "(",
      "Percentage",
      ")",
      "FROM",
      "countrylanguage",
      "WHERE",
      "LANGUAGE",
      "=",
      "``",
      "Spanish",
      "''",
      "GROUP",
      "BY",
      "CountryCode"
    ],
    "query_toks_no_value": [
      "select",
      "countrycode",
      ",",
      "max",
      "(",
      "percentage",
      ")",
      "from",
      "countrylanguage",
      "where",
      "language",
      "=",
      "value",
      "group",
      "by",
      "countrycode"
    ],
    "question": "Return the codes of countries for which Spanish is the predominantly spoken language.",
    "question_toks": [
      "Return",
      "the",
      "codes",
      "of",
      "countries",
      "for",
      "which",
      "Spanish",
      "is",
      "the",
      "predominantly",
      "spoken",
      "language",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Spanish\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          23,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "MODEL_LIST",
      "AS",
      "T1",
      "JOIN",
      "CAR_MAKERS",
      "AS",
      "T2",
      "ON",
      "T1.Maker",
      "=",
      "T2.Id",
      "JOIN",
      "COUNTRIES",
      "AS",
      "T3",
      "ON",
      "T2.Country",
      "=",
      "T3.CountryId",
      "WHERE",
      "T3.CountryName",
      "=",
      "'usa",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "model_list",
      "as",
      "t1",
      "join",
      "car_makers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "maker",
      "=",
      "t2",
      ".",
      "id",
      "join",
      "countries",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "country",
      "=",
      "t3",
      ".",
      "countryid",
      "where",
      "t3",
      ".",
      "countryname",
      "=",
      "value"
    ],
    "question": "What is the count of the car models produced in the United States?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "the",
      "car",
      "models",
      "produced",
      "in",
      "the",
      "United",
      "States",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"usa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "winner_name",
      "FROM",
      "matches",
      "WHERE",
      "tourney_name",
      "=",
      "'Australian",
      "Open",
      "'",
      "ORDER",
      "BY",
      "winner_rank_points",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "winner_name",
      "from",
      "matches",
      "where",
      "tourney_name",
      "=",
      "value",
      "order",
      "by",
      "winner_rank_points",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "winner",
      "who",
      "has",
      "the",
      "highest",
      "rank",
      "points",
      "and",
      "participated",
      "in",
      "the",
      "Australian",
      "Open",
      "tourney",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Australian Open\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              36,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.document_id",
      ",",
      "T2.document_name",
      "FROM",
      "Paragraphs",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.document_id",
      "=",
      "T2.document_id",
      "GROUP",
      "BY",
      "T1.document_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "document_id",
      ",",
      "t2",
      ".",
      "document_name",
      "from",
      "paragraphs",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "document_id",
      "=",
      "t2",
      ".",
      "document_id",
      "group",
      "by",
      "t1",
      ".",
      "document_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the id and name of the document with the most paragraphs.",
    "question_toks": [
      "Return",
      "the",
      "id",
      "and",
      "name",
      "of",
      "the",
      "document",
      "with",
      "the",
      "most",
      "paragraphs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "query_toks": [
      "SELECT",
      "T1.Accelerate",
      "FROM",
      "CARS_DATA",
      "AS",
      "T1",
      "JOIN",
      "CAR_NAMES",
      "AS",
      "T2",
      "ON",
      "T1.Id",
      "=",
      "T2.MakeId",
      "WHERE",
      "T2.Make",
      "=",
      "'amc",
      "hornet",
      "sportabout",
      "(",
      "sw",
      ")",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "accelerate",
      "from",
      "cars_data",
      "as",
      "t1",
      "join",
      "car_names",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "makeid",
      "where",
      "t2",
      ".",
      "make",
      "=",
      "value"
    ],
    "question": "What is the accelerate of the car make amc hornet sportabout (sw)?",
    "question_toks": [
      "What",
      "is",
      "the",
      "accelerate",
      "of",
      "the",
      "car",
      "make",
      "amc",
      "hornet",
      "sportabout",
      "(",
      "sw",
      ")",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"amc hornet sportabout (sw)\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "query_toks": [
      "SELECT",
      "T1.first_name",
      ",",
      "T1.middle_name",
      ",",
      "T1.last_name",
      ",",
      "T1.student_id",
      "FROM",
      "Students",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.student_id",
      "GROUP",
      "BY",
      "T1.student_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "first_name",
      ",",
      "t1",
      ".",
      "middle_name",
      ",",
      "t1",
      ".",
      "last_name",
      ",",
      "t1",
      ".",
      "student_id",
      "from",
      "students",
      "as",
      "t1",
      "join",
      "student_enrolment",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "student_id",
      "group",
      "by",
      "t1",
      ".",
      "student_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      ",",
      "middle",
      ",",
      "and",
      "last",
      "names",
      ",",
      "along",
      "with",
      "the",
      "ids",
      ",",
      "of",
      "all",
      "students",
      "who",
      "enrolled",
      "in",
      "2",
      "degree",
      "programs",
      "in",
      "one",
      "semester",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ],
            [
              0,
              47,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          32,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T2.name",
      ",",
      "T2.capacity",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "WHERE",
      "T1.year",
      ">",
      "=",
      "2014",
      "GROUP",
      "BY",
      "T2.stadium_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "capacity",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "where",
      "t1",
      ".",
      "year",
      ">",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "stadium_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
    "question_toks": [
      "Show",
      "the",
      "stadium",
      "name",
      "and",
      "capacity",
      "with",
      "most",
      "number",
      "of",
      "concerts",
      "in",
      "year",
      "2014",
      "or",
      "after",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ],
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "Version_Number",
      ")",
      ",",
      "template_type_code",
      "FROM",
      "Templates"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "version_number",
      ")",
      ",",
      "template_type_code",
      "from",
      "templates"
    ],
    "question": "Return the lowest version number, along with its corresponding template type code.",
    "question_toks": [
      "Return",
      "the",
      "lowest",
      "version",
      "number",
      ",",
      "along",
      "with",
      "its",
      "corresponding",
      "template",
      "type",
      "code",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T2.department_name",
      ",",
      "T1.department_id",
      "FROM",
      "Degree_Programs",
      "AS",
      "T1",
      "JOIN",
      "Departments",
      "AS",
      "T2",
      "ON",
      "T1.department_id",
      "=",
      "T2.department_id",
      "GROUP",
      "BY",
      "T1.department_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "department_name",
      ",",
      "t1",
      ".",
      "department_id",
      "from",
      "degree_programs",
      "as",
      "t1",
      "join",
      "departments",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "department_id",
      "=",
      "t2",
      ".",
      "department_id",
      "group",
      "by",
      "t1",
      ".",
      "department_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which department offers the most number of degrees? List department name and id.",
    "question_toks": [
      "Which",
      "department",
      "offers",
      "the",
      "most",
      "number",
      "of",
      "degrees",
      "?",
      "List",
      "department",
      "name",
      "and",
      "id",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "query_toks": [
      "SELECT",
      "T1.Name",
      "FROM",
      "conductor",
      "AS",
      "T1",
      "JOIN",
      "orchestra",
      "AS",
      "T2",
      "ON",
      "T1.Conductor_ID",
      "=",
      "T2.Conductor_ID",
      "GROUP",
      "BY",
      "T2.Conductor_ID",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "conductor",
      "as",
      "t1",
      "join",
      "orchestra",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "conductor_id",
      "=",
      "t2",
      ".",
      "conductor_id",
      "group",
      "by",
      "t2",
      ".",
      "conductor_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the names of conductors who have conducted at more than one orchestra?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "conductors",
      "who",
      "have",
      "conducted",
      "at",
      "more",
      "than",
      "one",
      "orchestra",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_1",
    "query": "SELECT count(*) FROM area_code_state",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "area_code_state"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "area_code_state"
    ],
    "question": "How many states are there?",
    "question_toks": [
      "How",
      "many",
      "states",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Abbreviation",
      ",",
      "T1.Country",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "GROUP",
      "BY",
      "T1.Airline",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "abbreviation",
      ",",
      "t1",
      ".",
      "country",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "group",
      "by",
      "t1",
      ".",
      "airline",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "limit",
      "value"
    ],
    "question": "Find the abbreviation and country of the airline that has fewest number of flights?",
    "question_toks": [
      "Find",
      "the",
      "abbreviation",
      "and",
      "country",
      "of",
      "the",
      "airline",
      "that",
      "has",
      "fewest",
      "number",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "query_toks": [
      "SELECT",
      "package_option",
      ",",
      "series_name",
      "FROM",
      "TV_Channel",
      "WHERE",
      "hight_definition_TV",
      "=",
      "``",
      "yes",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "package_option",
      ",",
      "series_name",
      "from",
      "tv_channel",
      "where",
      "hight_definition_tv",
      "=",
      "value"
    ],
    "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
    "question_toks": [
      "What",
      "are",
      "the",
      "package",
      "options",
      "and",
      "the",
      "name",
      "of",
      "the",
      "series",
      "for",
      "the",
      "TV",
      "Channel",
      "that",
      "supports",
      "high",
      "definition",
      "TV",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"yes\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "LifeExpectancy",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Name",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.Name",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T2.Language",
      "=",
      "``",
      "English",
      "''",
      "AND",
      "T2.IsOfficial",
      "=",
      "``",
      "T",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "lifeexpectancy",
      ")",
      "from",
      "country",
      "where",
      "name",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "language",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "isofficial",
      "=",
      "value",
      ")"
    ],
    "question": "What is average life expectancy in the countries where English is not the official language?",
    "question_toks": [
      "What",
      "is",
      "average",
      "life",
      "expectancy",
      "in",
      "the",
      "countries",
      "where",
      "English",
      "is",
      "not",
      "the",
      "official",
      "language",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ],
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    23,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    24,
                    false
                  ],
                  null
                ],
                "\"English\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    25,
                    false
                  ],
                  null
                ],
                "\"T\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "query_toks": [
      "SELECT",
      "weight",
      "FROM",
      "pets",
      "ORDER",
      "BY",
      "pet_age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "weight",
      "from",
      "pets",
      "order",
      "by",
      "pet_age",
      "limit",
      "value"
    ],
    "question": "Find the weight of the youngest dog.",
    "question_toks": [
      "Find",
      "the",
      "weight",
      "of",
      "the",
      "youngest",
      "dog",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "query_toks": [
      "SELECT",
      "T3.name",
      "FROM",
      "Friend",
      "AS",
      "T1",
      "JOIN",
      "Highschooler",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.id",
      "JOIN",
      "Highschooler",
      "AS",
      "T3",
      "ON",
      "T1.friend_id",
      "=",
      "T3.id",
      "WHERE",
      "T2.name",
      "=",
      "``",
      "Kyle",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      "from",
      "friend",
      "as",
      "t1",
      "join",
      "highschooler",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "id",
      "join",
      "highschooler",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "friend_id",
      "=",
      "t3",
      ".",
      "id",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Show the names of all of the high schooler Kyle's friends.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "all",
      "of",
      "the",
      "high",
      "schooler",
      "Kyle",
      "'s",
      "friends",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Kyle\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "query_toks": [
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "GROUP",
      "BY",
      "T1.Airline",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "<",
      "200"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "group",
      "by",
      "t1",
      ".",
      "airline",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "value"
    ],
    "question": "Which airlines have less than 200 flights?",
    "question_toks": [
      "Which",
      "airlines",
      "have",
      "less",
      "than",
      "200",
      "flights",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [
        [
          false,
          4,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T2.Airline",
      "=",
      "T1.uid",
      "WHERE",
      "T1.Airline",
      "=",
      "``",
      "United",
      "Airlines",
      "''",
      "AND",
      "T2.DestAirport",
      "=",
      "``",
      "ASY",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "airline",
      "=",
      "t1",
      ".",
      "uid",
      "where",
      "t1",
      ".",
      "airline",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "destairport",
      "=",
      "value"
    ],
    "question": "Count the number of United Airlines flights arriving in ASY Airport.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "United",
      "Airlines",
      "flights",
      "arriving",
      "in",
      "ASY",
      "Airport",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"United Airlines\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"ASY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "employee",
      "AS",
      "t1",
      "JOIN",
      "evaluation",
      "AS",
      "t2",
      "ON",
      "t1.Employee_ID",
      "=",
      "t2.Employee_ID",
      "GROUP",
      "BY",
      "t2.Employee_ID",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "employee",
      "as",
      "t1",
      "join",
      "evaluation",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "employee_id",
      "=",
      "t2",
      ".",
      "employee_id",
      "group",
      "by",
      "t2",
      ".",
      "employee_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "find the name of employee who was awarded the most times in the evaluation.",
    "question_toks": [
      "find",
      "the",
      "name",
      "of",
      "employee",
      "who",
      "was",
      "awarded",
      "the",
      "most",
      "times",
      "in",
      "the",
      "evaluation",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler",
    "query_toks": [
      "SELECT",
      "grade",
      "FROM",
      "Highschooler"
    ],
    "query_toks_no_value": [
      "select",
      "grade",
      "from",
      "highschooler"
    ],
    "question": "What is the grade of each high schooler?",
    "question_toks": [
      "What",
      "is",
      "the",
      "grade",
      "of",
      "each",
      "high",
      "schooler",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "query_toks": [
      "SELECT",
      "Abbreviation",
      "FROM",
      "AIRLINES",
      "WHERE",
      "Airline",
      "=",
      "``",
      "JetBlue",
      "Airways",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "abbreviation",
      "from",
      "airlines",
      "where",
      "airline",
      "=",
      "value"
    ],
    "question": "Which abbreviation corresponds to Jetblue Airways?",
    "question_toks": [
      "Which",
      "abbreviation",
      "corresponds",
      "to",
      "Jetblue",
      "Airways",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"JetBlue Airways\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "FLIGHTS",
      "AS",
      "T1",
      "JOIN",
      "AIRLINES",
      "AS",
      "T2",
      "ON",
      "T1.Airline",
      "=",
      "T2.uid",
      "WHERE",
      "T2.Airline",
      "=",
      "``",
      "JetBlue",
      "Airways",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flights",
      "as",
      "t1",
      "join",
      "airlines",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "airline",
      "=",
      "t2",
      ".",
      "uid",
      "where",
      "t2",
      ".",
      "airline",
      "=",
      "value"
    ],
    "question": "Give the number of Jetblue Airways flights.",
    "question_toks": [
      "Give",
      "the",
      "number",
      "of",
      "Jetblue",
      "Airways",
      "flights",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"JetBlue Airways\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T1.Model",
      "FROM",
      "CAR_NAMES",
      "AS",
      "T1",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T2",
      "ON",
      "T1.MakeId",
      "=",
      "T2.Id",
      "ORDER",
      "BY",
      "T2.mpg",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "model",
      "from",
      "car_names",
      "as",
      "t1",
      "join",
      "cars_data",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "makeid",
      "=",
      "t2",
      ".",
      "id",
      "order",
      "by",
      "t2",
      ".",
      "mpg",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
    "question_toks": [
      "Which",
      "model",
      "saves",
      "the",
      "most",
      "gasoline",
      "?",
      "That",
      "is",
      "to",
      "say",
      ",",
      "have",
      "the",
      "maximum",
      "miles",
      "per",
      "gallon",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "LifeExpectancy",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Continent",
      "=",
      "``",
      "Africa",
      "''",
      "AND",
      "GovernmentForm",
      "=",
      "``",
      "Republic",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "lifeexpectancy",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value",
      "and",
      "governmentform",
      "=",
      "value"
    ],
    "question": "Give the average life expectancy for countries in Africa which are republics?",
    "question_toks": [
      "Give",
      "the",
      "average",
      "life",
      "expectancy",
      "for",
      "countries",
      "in",
      "Africa",
      "which",
      "are",
      "republics",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Africa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Republic\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "query_toks": [
      "SELECT",
      "LANGUAGE",
      ",",
      "CountryCode",
      ",",
      "max",
      "(",
      "Percentage",
      ")",
      "FROM",
      "countrylanguage",
      "GROUP",
      "BY",
      "CountryCode"
    ],
    "query_toks_no_value": [
      "select",
      "language",
      ",",
      "countrycode",
      ",",
      "max",
      "(",
      "percentage",
      ")",
      "from",
      "countrylanguage",
      "group",
      "by",
      "countrycode"
    ],
    "question": "What is the language spoken by the largest percentage of people in each country?",
    "question_toks": [
      "What",
      "is",
      "the",
      "language",
      "spoken",
      "by",
      "the",
      "largest",
      "percentage",
      "of",
      "people",
      "in",
      "each",
      "country",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          23,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "query_toks": [
      "SELECT",
      "song_name",
      ",",
      "song_release_year",
      "FROM",
      "singer",
      "ORDER",
      "BY",
      "age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      ",",
      "song_release_year",
      "from",
      "singer",
      "order",
      "by",
      "age",
      "limit",
      "value"
    ],
    "question": "What are the names and release years for all the songs of the youngest singer?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "release",
      "years",
      "for",
      "all",
      "the",
      "songs",
      "of",
      "the",
      "youngest",
      "singer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.owner_id",
      ",",
      "T2.first_name",
      ",",
      "T2.last_name",
      "FROM",
      "Dogs",
      "AS",
      "T1",
      "JOIN",
      "Owners",
      "AS",
      "T2",
      "ON",
      "T1.owner_id",
      "=",
      "T2.owner_id",
      "GROUP",
      "BY",
      "T1.owner_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "owner_id",
      ",",
      "t2",
      ".",
      "first_name",
      ",",
      "t2",
      ".",
      "last_name",
      "from",
      "dogs",
      "as",
      "t1",
      "join",
      "owners",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "owner_id",
      "=",
      "t2",
      ".",
      "owner_id",
      "group",
      "by",
      "t1",
      ".",
      "owner_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which owner owns the most dogs? List the owner id, first name and last name.",
    "question_toks": [
      "Which",
      "owner",
      "owns",
      "the",
      "most",
      "dogs",
      "?",
      "List",
      "the",
      "owner",
      "id",
      ",",
      "first",
      "name",
      "and",
      "last",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          21,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T2.horsepower",
      ",",
      "T1.Make",
      "FROM",
      "CAR_NAMES",
      "AS",
      "T1",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T2",
      "ON",
      "T1.MakeId",
      "=",
      "T2.Id",
      "WHERE",
      "T2.cylinders",
      "=",
      "3",
      "ORDER",
      "BY",
      "T2.horsepower",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "horsepower",
      ",",
      "t1",
      ".",
      "make",
      "from",
      "car_names",
      "as",
      "t1",
      "join",
      "cars_data",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "makeid",
      "=",
      "t2",
      ".",
      "id",
      "where",
      "t2",
      ".",
      "cylinders",
      "=",
      "value",
      "order",
      "by",
      "t2",
      ".",
      "horsepower",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
    "question_toks": [
      "What",
      "is",
      "the",
      "largest",
      "amount",
      "of",
      "horsepower",
      "for",
      "the",
      "models",
      "with",
      "3",
      "cylinders",
      "and",
      "what",
      "make",
      "is",
      "it",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "winner_name",
      ",",
      "loser_name",
      "FROM",
      "matches",
      "ORDER",
      "BY",
      "minutes",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "winner_name",
      ",",
      "loser_name",
      "from",
      "matches",
      "order",
      "by",
      "minutes",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the names of the winner and loser who played in the longest match?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "winner",
      "and",
      "loser",
      "who",
      "played",
      "in",
      "the",
      "longest",
      "match",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "cost_of_treatment",
      "FROM",
      "Treatments",
      "ORDER",
      "BY",
      "date_of_treatment",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "cost_of_treatment",
      "from",
      "treatments",
      "order",
      "by",
      "date_of_treatment",
      "desc",
      "limit",
      "value"
    ],
    "question": "Show me the cost of the most recently performed treatment.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "cost",
      "of",
      "the",
      "most",
      "recently",
      "performed",
      "treatment",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                49,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              48,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.semester_name",
      ",",
      "T1.semester_id",
      "FROM",
      "Semesters",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T2",
      "ON",
      "T1.semester_id",
      "=",
      "T2.semester_id",
      "GROUP",
      "BY",
      "T1.semester_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "semester_name",
      ",",
      "t1",
      ".",
      "semester_id",
      "from",
      "semesters",
      "as",
      "t1",
      "join",
      "student_enrolment",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "semester_id",
      "=",
      "t2",
      ".",
      "semester_id",
      "group",
      "by",
      "t1",
      ".",
      "semester_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the semester which most student registered in? Show both the name and the id.",
    "question_toks": [
      "What",
      "is",
      "the",
      "semester",
      "which",
      "most",
      "student",
      "registered",
      "in",
      "?",
      "Show",
      "both",
      "the",
      "name",
      "and",
      "the",
      "id",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ],
            [
              0,
              46,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          28,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      "FROM",
      "Dogs",
      "WHERE",
      "dog_id",
      "IN",
      "(",
      "SELECT",
      "dog_id",
      "FROM",
      "Treatments",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "dogs",
      "where",
      "dog_id",
      "in",
      "(",
      "select",
      "dog_id",
      "from",
      "treatments",
      ")"
    ],
    "question": "Find the average age of the dogs who went through treatments.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "age",
      "of",
      "the",
      "dogs",
      "who",
      "went",
      "through",
      "treatments",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  7
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      45,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "GNP",
      ")",
      ",",
      "sum",
      "(",
      "population",
      ")",
      "FROM",
      "country",
      "WHERE",
      "GovernmentForm",
      "=",
      "``",
      "US",
      "Territory",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "gnp",
      ")",
      ",",
      "sum",
      "(",
      "population",
      ")",
      "from",
      "country",
      "where",
      "governmentform",
      "=",
      "value"
    ],
    "question": "Give the mean GNP and total population of nations which are considered US territory.",
    "question_toks": [
      "Give",
      "the",
      "mean",
      "GNP",
      "and",
      "total",
      "population",
      "of",
      "nations",
      "which",
      "are",
      "considered",
      "US",
      "territory",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"US Territory\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "cost_of_treatment",
      "FROM",
      "Treatments",
      "ORDER",
      "BY",
      "date_of_treatment",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "cost_of_treatment",
      "from",
      "treatments",
      "order",
      "by",
      "date_of_treatment",
      "desc",
      "limit",
      "value"
    ],
    "question": "How much does the most recent treatment cost?",
    "question_toks": [
      "How",
      "much",
      "does",
      "the",
      "most",
      "recent",
      "treatment",
      "cost",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                49,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              48,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "query_toks": [
      "SELECT",
      "CountryName",
      "FROM",
      "countries",
      "EXCEPT",
      "SELECT",
      "T1.CountryName",
      "FROM",
      "countries",
      "AS",
      "T1",
      "JOIN",
      "CAR_MAKERS",
      "AS",
      "T2",
      "ON",
      "T1.countryId",
      "=",
      "T2.Country",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "countryname",
      "from",
      "countries",
      "except",
      "select",
      "t1",
      ".",
      "countryname",
      "from",
      "countries",
      "as",
      "t1",
      "join",
      "car_makers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "countryid",
      "=",
      "t2",
      ".",
      "country"
    ],
    "question": "What are the name of the countries where there is not a single car maker?",
    "question_toks": [
      "What",
      "are",
      "the",
      "name",
      "of",
      "the",
      "countries",
      "where",
      "there",
      "is",
      "not",
      "a",
      "single",
      "car",
      "maker",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ],
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  4,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "world_1",
    "query": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "query_toks": [
      "select",
      "sum",
      "(",
      "population",
      ")",
      ",",
      "avg",
      "(",
      "surfacearea",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "\"north america\"",
      "and",
      "surfacearea",
      ">",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "population",
      ")",
      ",",
      "avg",
      "(",
      "surfacearea",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value",
      "and",
      "surfacearea",
      ">",
      "value"
    ],
    "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "population",
      "and",
      "average",
      "area",
      "of",
      "countries",
      "in",
      "the",
      "continent",
      "of",
      "North",
      "America",
      "whose",
      "area",
      "is",
      "bigger",
      "than",
      "3000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"north america\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          3000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T2.Language",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T1.Continent",
      "=",
      "``",
      "Asia",
      "''",
      "GROUP",
      "BY",
      "T2.Language",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "language",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t1",
      ".",
      "continent",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "language",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which language is the most popular on the Asian continent?",
    "question_toks": [
      "Which",
      "language",
      "is",
      "the",
      "most",
      "popular",
      "on",
      "the",
      "Asian",
      "continent",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Asia\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          24,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "country",
      "WHERE",
      "GovernmentForm",
      "=",
      "``",
      "Republic",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "country",
      "where",
      "governmentform",
      "=",
      "value"
    ],
    "question": "How many countries have governments that are republics?",
    "question_toks": [
      "How",
      "many",
      "countries",
      "have",
      "governments",
      "that",
      "are",
      "republics",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Republic\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "max",
      "(",
      "Percentage",
      ")",
      "FROM",
      "countrylanguage",
      "WHERE",
      "LANGUAGE",
      "=",
      "``",
      "Spanish",
      "''",
      "GROUP",
      "BY",
      "CountryCode"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "max",
      "(",
      "percentage",
      ")",
      "from",
      "countrylanguage",
      "where",
      "language",
      "=",
      "value",
      "group",
      "by",
      "countrycode"
    ],
    "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "countries",
      "where",
      "Spanish",
      "is",
      "spoken",
      "by",
      "the",
      "largest",
      "percentage",
      "of",
      "people",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Spanish\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          23,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "employee",
      "AS",
      "t1",
      "JOIN",
      "evaluation",
      "AS",
      "t2",
      "ON",
      "t1.Employee_ID",
      "=",
      "t2.Employee_ID",
      "GROUP",
      "BY",
      "t2.Employee_ID",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "employee",
      "as",
      "t1",
      "join",
      "evaluation",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "employee_id",
      "=",
      "t2",
      ".",
      "employee_id",
      "group",
      "by",
      "t2",
      ".",
      "employee_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which employee received the most awards in evaluations? Give me the employee name.",
    "question_toks": [
      "Which",
      "employee",
      "received",
      "the",
      "most",
      "awards",
      "in",
      "evaluations",
      "?",
      "Give",
      "me",
      "the",
      "employee",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.template_id",
      ",",
      "T2.Template_Type_Code",
      "FROM",
      "Documents",
      "AS",
      "T1",
      "JOIN",
      "Templates",
      "AS",
      "T2",
      "ON",
      "T1.template_id",
      "=",
      "T2.template_id",
      "GROUP",
      "BY",
      "T1.template_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "template_id",
      ",",
      "t2",
      ".",
      "template_type_code",
      "from",
      "documents",
      "as",
      "t1",
      "join",
      "templates",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "template_id",
      "=",
      "t2",
      ".",
      "template_id",
      "group",
      "by",
      "t1",
      ".",
      "template_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the id and type code for the template used by the most documents?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "and",
      "type",
      "code",
      "for",
      "the",
      "template",
      "used",
      "by",
      "the",
      "most",
      "documents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
    "query_toks": [
      "SELECT",
      "T1.Id",
      ",",
      "T1.Maker",
      "FROM",
      "CAR_MAKERS",
      "AS",
      "T1",
      "JOIN",
      "MODEL_LIST",
      "AS",
      "T2",
      "ON",
      "T1.Id",
      "=",
      "T2.Maker",
      "GROUP",
      "BY",
      "T1.Id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2",
      "INTERSECT",
      "SELECT",
      "T1.Id",
      ",",
      "T1.Maker",
      "FROM",
      "CAR_MAKERS",
      "AS",
      "T1",
      "JOIN",
      "MODEL_LIST",
      "AS",
      "T2",
      "ON",
      "T1.Id",
      "=",
      "T2.Maker",
      "JOIN",
      "CAR_NAMES",
      "AS",
      "T3",
      "ON",
      "T2.model",
      "=",
      "T3.model",
      "GROUP",
      "BY",
      "T1.Id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "id",
      ",",
      "t1",
      ".",
      "maker",
      "from",
      "car_makers",
      "as",
      "t1",
      "join",
      "model_list",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "maker",
      "group",
      "by",
      "t1",
      ".",
      "id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "id",
      ",",
      "t1",
      ".",
      "maker",
      "from",
      "car_makers",
      "as",
      "t1",
      "join",
      "model_list",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "maker",
      "join",
      "car_names",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "model",
      "=",
      "t3",
      ".",
      "model",
      "group",
      "by",
      "t1",
      ".",
      "id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "and",
      "makers",
      "of",
      "all",
      "car",
      "makers",
      "that",
      "produce",
      "at",
      "least",
      "2",
      "models",
      "and",
      "make",
      "more",
      "than",
      "3",
      "cars",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              3
            ],
            [
              "table_unit",
              4
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  6,
                  false
                ],
                null
              ],
              [
                0,
                11,
                false
              ],
              null
            ],
            "and",
            [
              false,
              2,
              [
                0,
                [
                  0,
                  12,
                  false
                ],
                null
              ],
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  6,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  7,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [
          [
            0,
            6,
            false
          ]
        ],
        "having": [
          [
            false,
            3,
            [
              0,
              [
                3,
                0,
                false
              ],
              null
            ],
            3.0,
            null
          ]
        ],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "id",
      "FROM",
      "tv_channel",
      "GROUP",
      "BY",
      "country",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      "from",
      "tv_channel",
      "group",
      "by",
      "country",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the ids of all tv channels that have more than 2 TV channels?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "tv",
      "channels",
      "that",
      "have",
      "more",
      "than",
      "2",
      "TV",
      "channels",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "WHERE",
      "Continent",
      "=",
      "``",
      "Asia",
      "''",
      "AND",
      "population",
      ">",
      "(",
      "SELECT",
      "min",
      "(",
      "population",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Continent",
      "=",
      "``",
      "Africa",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value",
      "and",
      "population",
      ">",
      "(",
      "select",
      "min",
      "(",
      "population",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value",
      ")"
    ],
    "question": "What are the Asian countries which have a population larger than that of any country in Africa?",
    "question_toks": [
      "What",
      "are",
      "the",
      "Asian",
      "countries",
      "which",
      "have",
      "a",
      "population",
      "larger",
      "than",
      "that",
      "of",
      "any",
      "country",
      "in",
      "Africa",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Asia\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    10,
                    false
                  ],
                  null
                ],
                "\"Africa\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "singer_in_concert",
      "AS",
      "T1",
      "JOIN",
      "singer",
      "AS",
      "T2",
      "ON",
      "T1.singer_id",
      "=",
      "T2.singer_id",
      "JOIN",
      "concert",
      "AS",
      "T3",
      "ON",
      "T1.concert_id",
      "=",
      "T3.concert_id",
      "WHERE",
      "T3.year",
      "=",
      "2014"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "singer_in_concert",
      "as",
      "t1",
      "join",
      "singer",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "singer_id",
      "=",
      "t2",
      ".",
      "singer_id",
      "join",
      "concert",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "concert_id",
      "=",
      "t3",
      ".",
      "concert_id",
      "where",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "What are the names of the singers who performed in a concert in 2014?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "singers",
      "who",
      "performed",
      "in",
      "a",
      "concert",
      "in",
      "2014",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"",
    "query_toks": [
      "select",
      "t1.name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1.code",
      "=",
      "t2.countrycode",
      "where",
      "t2.language",
      "=",
      "\"english\"",
      "and",
      "isofficial",
      "=",
      "\"t\"",
      "union",
      "select",
      "t1.name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1.code",
      "=",
      "t2.countrycode",
      "where",
      "t2.language",
      "=",
      "\"dutch\"",
      "and",
      "isofficial",
      "=",
      "\"t\""
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "language",
      "=",
      "value",
      "and",
      "isofficial",
      "=",
      "value",
      "union",
      "select",
      "t1",
      ".",
      "name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "language",
      "=",
      "value",
      "and",
      "isofficial",
      "=",
      "value"
    ],
    "question": "What are the countries where either English or Dutch is the official language ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "where",
      "either",
      "English",
      "or",
      "Dutch",
      "is",
      "the",
      "official",
      "language",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"english\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"t\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              3
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  8,
                  false
                ],
                null
              ],
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  9,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            "\"dutch\"",
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            "\"t\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "except": null
    }
  },
  {
    "db_id": "real_estate_properties",
    "query": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1",
    "query_toks": [
      "SELECT",
      "property_name",
      "FROM",
      "Properties",
      "WHERE",
      "property_type_code",
      "=",
      "``",
      "House",
      "''",
      "UNION",
      "SELECT",
      "property_name",
      "FROM",
      "Properties",
      "WHERE",
      "property_type_code",
      "=",
      "``",
      "Apartment",
      "''",
      "AND",
      "room_count",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "property_name",
      "from",
      "properties",
      "where",
      "property_type_code",
      "=",
      "value",
      "union",
      "select",
      "property_name",
      "from",
      "properties",
      "where",
      "property_type_code",
      "=",
      "value",
      "and",
      "room_count",
      ">",
      "value"
    ],
    "question": "What are the names of properties that are either houses or apartments with more than 1 room?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "properties",
      "that",
      "are",
      "either",
      "houses",
      "or",
      "apartments",
      "with",
      "more",
      "than",
      "1",
      "room",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"House\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": {
        "from": {
          "table_units": [
            [
              "table_unit",
              3
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  13,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            "\"Apartment\"",
            null
          ],
          "and",
          [
            false,
            3,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            1.0,
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "WHERE",
      "Continent",
      "=",
      "``",
      "Asia",
      "''",
      "ORDER",
      "BY",
      "LifeExpectancy",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value",
      "order",
      "by",
      "lifeexpectancy",
      "limit",
      "value"
    ],
    "question": "What is the name of country that has the shortest life expectancy in Asia?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "country",
      "that",
      "has",
      "the",
      "shortest",
      "life",
      "expectancy",
      "in",
      "Asia",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Asia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Name",
      ",",
      "T1.Population",
      "FROM",
      "city",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.CountryCode",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T2.Language",
      "=",
      "``",
      "English",
      "''",
      "ORDER",
      "BY",
      "T1.Population",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "population",
      "from",
      "city",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "countrycode",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "language",
      "=",
      "value",
      "order",
      "by",
      "t1",
      ".",
      "population",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the city with the largest population that uses English.",
    "question_toks": [
      "Find",
      "the",
      "city",
      "with",
      "the",
      "largest",
      "population",
      "that",
      "uses",
      "English",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"English\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Templates",
      "WHERE",
      "template_type_code",
      "=",
      "``",
      "CV",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "templates",
      "where",
      "template_type_code",
      "=",
      "value"
    ],
    "question": "Count the number of templates of the type CV.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "templates",
      "of",
      "the",
      "type",
      "CV",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"CV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.address_id",
      ",",
      "T1.line_1",
      ",",
      "T1.line_2",
      "FROM",
      "Addresses",
      "AS",
      "T1",
      "JOIN",
      "Students",
      "AS",
      "T2",
      "ON",
      "T1.address_id",
      "=",
      "T2.current_address_id",
      "GROUP",
      "BY",
      "T1.address_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "address_id",
      ",",
      "t1",
      ".",
      "line_1",
      ",",
      "t1",
      ".",
      "line_2",
      "from",
      "addresses",
      "as",
      "t1",
      "join",
      "students",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "address_id",
      "=",
      "t2",
      ".",
      "current_address_id",
      "group",
      "by",
      "t1",
      ".",
      "address_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the id, line 1, and line 2 of the address with the most students?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      ",",
      "line",
      "1",
      ",",
      "and",
      "line",
      "2",
      "of",
      "the",
      "address",
      "with",
      "the",
      "most",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            6
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              33,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.owner_id",
      ",",
      "T1.last_name",
      "FROM",
      "Owners",
      "AS",
      "T1",
      "JOIN",
      "Dogs",
      "AS",
      "T2",
      "ON",
      "T1.owner_id",
      "=",
      "T2.owner_id",
      "JOIN",
      "Treatments",
      "AS",
      "T3",
      "ON",
      "T2.dog_id",
      "=",
      "T3.dog_id",
      "GROUP",
      "BY",
      "T1.owner_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "owner_id",
      ",",
      "t1",
      ".",
      "last_name",
      "from",
      "owners",
      "as",
      "t1",
      "join",
      "dogs",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "owner_id",
      "=",
      "t2",
      ".",
      "owner_id",
      "join",
      "treatments",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "dog_id",
      "=",
      "t3",
      ".",
      "dog_id",
      "group",
      "by",
      "t1",
      ".",
      "owner_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.",
    "question_toks": [
      "Tell",
      "me",
      "the",
      "owner",
      "id",
      "and",
      "last",
      "name",
      "of",
      "the",
      "owner",
      "who",
      "spent",
      "the",
      "most",
      "on",
      "treatments",
      "of",
      "his",
      "or",
      "her",
      "dogs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              45,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "winner_name",
      ",",
      "winner_rank_points",
      "FROM",
      "matches",
      "GROUP",
      "BY",
      "winner_name",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "winner_name",
      ",",
      "winner_rank_points",
      "from",
      "matches",
      "group",
      "by",
      "winner_name",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the winner who has won the most matches, and how many rank points does this player have?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "winner",
      "who",
      "has",
      "won",
      "the",
      "most",
      "matches",
      ",",
      "and",
      "how",
      "many",
      "rank",
      "points",
      "does",
      "this",
      "player",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          34,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "query_toks": [
      "SELECT",
      "T1.FlightNo",
      "FROM",
      "FLIGHTS",
      "AS",
      "T1",
      "JOIN",
      "AIRLINES",
      "AS",
      "T2",
      "ON",
      "T2.uid",
      "=",
      "T1.Airline",
      "WHERE",
      "T2.Airline",
      "=",
      "``",
      "United",
      "Airlines",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "flightno",
      "from",
      "flights",
      "as",
      "t1",
      "join",
      "airlines",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "uid",
      "=",
      "t1",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "airline",
      "=",
      "value"
    ],
    "question": "Which flight numbers correspond to United Airlines flights?",
    "question_toks": [
      "Which",
      "flight",
      "numbers",
      "correspond",
      "to",
      "United",
      "Airlines",
      "flights",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"United Airlines\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "query_toks": [
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "WHERE",
      "T2.DestAirport",
      "=",
      "``",
      "AHD",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "destairport",
      "=",
      "value"
    ],
    "question": "What are airlines that have flights arriving at airport 'AHD'?",
    "question_toks": [
      "What",
      "are",
      "airlines",
      "that",
      "have",
      "flights",
      "arriving",
      "at",
      "airport",
      "'AHD",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"AHD\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'",
    "query_toks": [
      "select",
      "cell_mobile_number",
      "from",
      "students",
      "where",
      "first_name",
      "=",
      "\"timmothy\"",
      "and",
      "last_name",
      "=",
      "\"ward\""
    ],
    "query_toks_no_value": [
      "select",
      "cell_mobile_number",
      "from",
      "students",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the mobile phone number of the student named Timmothy Ward ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "mobile",
      "phone",
      "number",
      "of",
      "the",
      "student",
      "named",
      "Timmothy",
      "Ward",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"timmothy\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          "\"ward\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.date_arrived",
      ",",
      "T1.date_departed",
      "FROM",
      "Dogs",
      "AS",
      "T1",
      "JOIN",
      "Treatments",
      "AS",
      "T2",
      "ON",
      "T1.dog_id",
      "=",
      "T2.dog_id"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "date_arrived",
      ",",
      "t1",
      ".",
      "date_departed",
      "from",
      "dogs",
      "as",
      "t1",
      "join",
      "treatments",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "dog_id",
      "=",
      "t2",
      ".",
      "dog_id"
    ],
    "question": "Find the arriving date and the departing date of the dogs that received a treatment.",
    "question_toks": [
      "Find",
      "the",
      "arriving",
      "date",
      "and",
      "the",
      "departing",
      "date",
      "of",
      "the",
      "dogs",
      "that",
      "received",
      "a",
      "treatment",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              45,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "query_toks": [
      "select",
      "sum",
      "(",
      "population",
      ")",
      ",",
      "avg",
      "(",
      "surfacearea",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "\"north america\"",
      "and",
      "surfacearea",
      ">",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "population",
      ")",
      ",",
      "avg",
      "(",
      "surfacearea",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value",
      "and",
      "surfacearea",
      ">",
      "value"
    ],
    "question": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .",
    "question_toks": [
      "Give",
      "the",
      "total",
      "population",
      "and",
      "average",
      "surface",
      "area",
      "corresponding",
      "to",
      "countries",
      "in",
      "North",
      "America",
      "that",
      "have",
      "a",
      "surface",
      "area",
      "greater",
      "than",
      "3000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"north america\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          3000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.student_id",
      ",",
      "T1.first_name",
      ",",
      "T1.middle_name",
      ",",
      "T1.last_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.student_id",
      "FROM",
      "Students",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.student_id",
      "GROUP",
      "BY",
      "T1.student_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "student_id",
      ",",
      "t1",
      ".",
      "first_name",
      ",",
      "t1",
      ".",
      "middle_name",
      ",",
      "t1",
      ".",
      "last_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "student_id",
      "from",
      "students",
      "as",
      "t1",
      "join",
      "student_enrolment",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "student_id",
      "group",
      "by",
      "t1",
      ".",
      "student_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      ",",
      "middle",
      ",",
      "and",
      "last",
      "name",
      ",",
      "along",
      "with",
      "the",
      "id",
      "and",
      "number",
      "of",
      "enrollments",
      ",",
      "for",
      "the",
      "student",
      "who",
      "enrolled",
      "the",
      "most",
      "in",
      "any",
      "program",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ],
            [
              0,
              47,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          32,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "GROUP",
      "BY",
      "T1.Airline",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "group",
      "by",
      "t1",
      ".",
      "airline",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What airline serves the most flights?",
    "question_toks": [
      "What",
      "airline",
      "serves",
      "the",
      "most",
      "flights",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Population",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Name",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.Name",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T2.Language",
      "=",
      "``",
      "English",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "population",
      ")",
      "from",
      "country",
      "where",
      "name",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "language",
      "=",
      "value",
      ")"
    ],
    "question": "How many people live in countries that do not speak English?",
    "question_toks": [
      "How",
      "many",
      "people",
      "live",
      "in",
      "countries",
      "that",
      "do",
      "not",
      "speak",
      "English",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ],
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    23,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    24,
                    false
                  ],
                  null
                ],
                "\"English\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "winner_name",
      ",",
      "winner_rank_points",
      "FROM",
      "matches",
      "GROUP",
      "BY",
      "winner_name",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "winner_name",
      ",",
      "winner_rank_points",
      "from",
      "matches",
      "group",
      "by",
      "winner_name",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name and rank points of the winner who won the most times.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "rank",
      "points",
      "of",
      "the",
      "winner",
      "who",
      "won",
      "the",
      "most",
      "times",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          34,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "select name from teacher where hometown != \"little lever urban district\"",
    "query_toks": [
      "select",
      "name",
      "from",
      "teacher",
      "where",
      "hometown",
      "!=",
      "\"little lever urban district\""
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "teacher",
      "where",
      "hometown",
      "!",
      "=",
      "value"
    ],
    "question": "List the name of teachers whose hometown is not `` Little Lever Urban District '' .",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "teachers",
      "whose",
      "hometown",
      "is",
      "not",
      "``",
      "Little",
      "Lever",
      "Urban",
      "District",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"little lever urban district\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Name",
      ",",
      "T1.Population",
      "FROM",
      "city",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.CountryCode",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T2.Language",
      "=",
      "``",
      "English",
      "''",
      "ORDER",
      "BY",
      "T1.Population",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "population",
      "from",
      "city",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "countrycode",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "language",
      "=",
      "value",
      "order",
      "by",
      "t1",
      ".",
      "population",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the most populace city that speaks English?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "populace",
      "city",
      "that",
      "speaks",
      "English",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"English\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "query_toks": [
      "SELECT",
      "template_type_code",
      "FROM",
      "Templates",
      "EXCEPT",
      "SELECT",
      "template_type_code",
      "FROM",
      "Templates",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.template_id",
      "=",
      "T2.template_id"
    ],
    "query_toks_no_value": [
      "select",
      "template_type_code",
      "from",
      "templates",
      "except",
      "select",
      "template_type_code",
      "from",
      "templates",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "template_id",
      "=",
      "t2",
      ".",
      "template_id"
    ],
    "question": "Show all template type codes that are not used by any document.",
    "question_toks": [
      "Show",
      "all",
      "template",
      "type",
      "codes",
      "that",
      "are",
      "not",
      "used",
      "by",
      "any",
      "document",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ],
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.first_name",
      ",",
      "T3.treatment_type_description",
      "FROM",
      "professionals",
      "AS",
      "T1",
      "JOIN",
      "Treatments",
      "AS",
      "T2",
      "ON",
      "T1.professional_id",
      "=",
      "T2.professional_id",
      "JOIN",
      "Treatment_types",
      "AS",
      "T3",
      "ON",
      "T2.treatment_type_code",
      "=",
      "T3.treatment_type_code"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "first_name",
      ",",
      "t3",
      ".",
      "treatment_type_description",
      "from",
      "professionals",
      "as",
      "t1",
      "join",
      "treatments",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "professional_id",
      "=",
      "t2",
      ".",
      "professional_id",
      "join",
      "treatment_types",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "treatment_type_code",
      "=",
      "t3",
      ".",
      "treatment_type_code"
    ],
    "question": "List the first name of all the professionals along with the description of the treatment they have done.",
    "question_toks": [
      "List",
      "the",
      "first",
      "name",
      "of",
      "all",
      "the",
      "professionals",
      "along",
      "with",
      "the",
      "description",
      "of",
      "the",
      "treatment",
      "they",
      "have",
      "done",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ],
            [
              0,
              46,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                47,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "winner_name",
      ",",
      "winner_rank",
      "FROM",
      "matches",
      "ORDER",
      "BY",
      "winner_age",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "winner_name",
      ",",
      "winner_rank",
      "from",
      "matches",
      "order",
      "by",
      "winner_age",
      "limit",
      "value"
    ],
    "question": "What are the names and ranks of the three youngest winners across all matches?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "ranks",
      "of",
      "the",
      "three",
      "youngest",
      "winners",
      "across",
      "all",
      "matches",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "query_toks": [
      "SELECT",
      "T3.name",
      "FROM",
      "Friend",
      "AS",
      "T1",
      "JOIN",
      "Highschooler",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.id",
      "JOIN",
      "Highschooler",
      "AS",
      "T3",
      "ON",
      "T1.friend_id",
      "=",
      "T3.id",
      "WHERE",
      "T2.name",
      "=",
      "``",
      "Kyle",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      "from",
      "friend",
      "as",
      "t1",
      "join",
      "highschooler",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "id",
      "join",
      "highschooler",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "friend_id",
      "=",
      "t3",
      ".",
      "id",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Return the names of friends of the high school student Kyle.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "friends",
      "of",
      "the",
      "high",
      "school",
      "student",
      "Kyle",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Kyle\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "Likes",
      "AS",
      "T1",
      "JOIN",
      "Highschooler",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.id",
      "GROUP",
      "BY",
      "T1.student_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "likes",
      "as",
      "t1",
      "join",
      "highschooler",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "id",
      "group",
      "by",
      "t1",
      ".",
      "student_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the high schooler who has the greatest number of likes?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "high",
      "schooler",
      "who",
      "has",
      "the",
      "greatest",
      "number",
      "of",
      "likes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "ranking_points",
      ")",
      ",",
      "T1.first_name",
      "FROM",
      "players",
      "AS",
      "T1",
      "JOIN",
      "rankings",
      "AS",
      "T2",
      "ON",
      "T1.player_id",
      "=",
      "T2.player_id",
      "GROUP",
      "BY",
      "T1.first_name"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "ranking_points",
      ")",
      ",",
      "t1",
      ".",
      "first_name",
      "from",
      "players",
      "as",
      "t1",
      "join",
      "rankings",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "player_id",
      "=",
      "t2",
      ".",
      "player_id",
      "group",
      "by",
      "t1",
      ".",
      "first_name"
    ],
    "question": "What are the first names of all players, and their total ranking points?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "all",
      "players",
      ",",
      "and",
      "their",
      "total",
      "ranking",
      "points",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              41,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                42,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Highschooler",
      "EXCEPT",
      "SELECT",
      "T2.name",
      "FROM",
      "Friend",
      "AS",
      "T1",
      "JOIN",
      "Highschooler",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.id"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "highschooler",
      "except",
      "select",
      "t2",
      ".",
      "name",
      "from",
      "friend",
      "as",
      "t1",
      "join",
      "highschooler",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "id"
    ],
    "question": "Show names of all high school students who do not have any friends.",
    "question_toks": [
      "Show",
      "names",
      "of",
      "all",
      "high",
      "school",
      "students",
      "who",
      "do",
      "not",
      "have",
      "any",
      "friends",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              0
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  4,
                  false
                ],
                null
              ],
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Continent",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "GROUP",
      "BY",
      "T1.Continent",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "continent",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "group",
      "by",
      "t1",
      ".",
      "continent",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which continent has the most diverse languages?",
    "question_toks": [
      "Which",
      "continent",
      "has",
      "the",
      "most",
      "diverse",
      "languages",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "query_toks": [
      "SELECT",
      "T1.first_name",
      ",",
      "T1.middle_name",
      ",",
      "T1.last_name",
      ",",
      "T1.student_id",
      "FROM",
      "Students",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.student_id",
      "GROUP",
      "BY",
      "T1.student_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "first_name",
      ",",
      "t1",
      ".",
      "middle_name",
      ",",
      "t1",
      ".",
      "last_name",
      ",",
      "t1",
      ".",
      "student_id",
      "from",
      "students",
      "as",
      "t1",
      "join",
      "student_enrolment",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "student_id",
      "group",
      "by",
      "t1",
      ".",
      "student_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
    "question_toks": [
      "Who",
      "are",
      "enrolled",
      "in",
      "2",
      "degree",
      "programs",
      "in",
      "one",
      "semester",
      "?",
      "List",
      "the",
      "first",
      "name",
      ",",
      "middle",
      "name",
      "and",
      "last",
      "name",
      "and",
      "the",
      "id",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ],
            [
              0,
              47,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          32,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "real_estate_properties",
    "query": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
    "query_toks": [
      "SELECT",
      "T2.property_type_description",
      "FROM",
      "Properties",
      "AS",
      "T1",
      "JOIN",
      "Ref_Property_Types",
      "AS",
      "T2",
      "ON",
      "T1.property_type_code",
      "=",
      "T2.property_type_code",
      "GROUP",
      "BY",
      "T1.property_type_code"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "property_type_description",
      "from",
      "properties",
      "as",
      "t1",
      "join",
      "ref_property_types",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "property_type_code",
      "=",
      "t2",
      ".",
      "property_type_code",
      "group",
      "by",
      "t1",
      ".",
      "property_type_code"
    ],
    "question": "Show the property type descriptions of properties belonging to that code.",
    "question_toks": [
      "Show",
      "the",
      "property",
      "type",
      "descriptions",
      "of",
      "properties",
      "belonging",
      "to",
      "that",
      "code",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "query_toks": [
      "SELECT",
      "T1.Accelerate",
      "FROM",
      "CARS_DATA",
      "AS",
      "T1",
      "JOIN",
      "CAR_NAMES",
      "AS",
      "T2",
      "ON",
      "T1.Id",
      "=",
      "T2.MakeId",
      "WHERE",
      "T2.Make",
      "=",
      "'amc",
      "hornet",
      "sportabout",
      "(",
      "sw",
      ")",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "accelerate",
      "from",
      "cars_data",
      "as",
      "t1",
      "join",
      "car_names",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "makeid",
      "where",
      "t2",
      ".",
      "make",
      "=",
      "value"
    ],
    "question": "How much does the car accelerate that makes amc hornet sportabout (sw)?",
    "question_toks": [
      "How",
      "much",
      "does",
      "the",
      "car",
      "accelerate",
      "that",
      "makes",
      "amc",
      "hornet",
      "sportabout",
      "(",
      "sw",
      ")",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"amc hornet sportabout (sw)\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.semester_name",
      ",",
      "T1.semester_id",
      "FROM",
      "Semesters",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T2",
      "ON",
      "T1.semester_id",
      "=",
      "T2.semester_id",
      "GROUP",
      "BY",
      "T1.semester_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "semester_name",
      ",",
      "t1",
      ".",
      "semester_id",
      "from",
      "semesters",
      "as",
      "t1",
      "join",
      "student_enrolment",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "semester_id",
      "=",
      "t2",
      ".",
      "semester_id",
      "group",
      "by",
      "t1",
      ".",
      "semester_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "For each semester, what is the name and id of the one with the most students registered?",
    "question_toks": [
      "For",
      "each",
      "semester",
      ",",
      "what",
      "is",
      "the",
      "name",
      "and",
      "id",
      "of",
      "the",
      "one",
      "with",
      "the",
      "most",
      "students",
      "registered",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ],
            [
              0,
              46,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          28,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"",
    "query_toks": [
      "select",
      "distinct",
      "t3.name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1.code",
      "=",
      "t2.countrycode",
      "join",
      "city",
      "as",
      "t3",
      "on",
      "t1.code",
      "=",
      "t3.countrycode",
      "where",
      "t2.isofficial",
      "=",
      "\"t\"",
      "and",
      "t2.language",
      "=",
      "\"chinese\"",
      "and",
      "t1.continent",
      "=",
      "\"asia\""
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "join",
      "city",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t3",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "isofficial",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "language",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "continent",
      "=",
      "value"
    ],
    "question": "Which unique cities are in Asian countries where Chinese is the official language ?",
    "question_toks": [
      "Which",
      "unique",
      "cities",
      "are",
      "in",
      "Asian",
      "countries",
      "where",
      "Chinese",
      "is",
      "the",
      "official",
      "language",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              23,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"t\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"chinese\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"asia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Paragraphs",
      "GROUP",
      "BY",
      "document_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "paragraphs",
      "group",
      "by",
      "document_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the document id with least number of paragraphs?",
    "question_toks": [
      "What",
      "is",
      "the",
      "document",
      "id",
      "with",
      "least",
      "number",
      "of",
      "paragraphs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "query_toks": [
      "SELECT",
      "T1.first_name",
      ",",
      "T1.last_name",
      ",",
      "T2.size_code",
      "FROM",
      "Owners",
      "AS",
      "T1",
      "JOIN",
      "Dogs",
      "AS",
      "T2",
      "ON",
      "T1.owner_id",
      "=",
      "T2.owner_id"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "first_name",
      ",",
      "t1",
      ".",
      "last_name",
      ",",
      "t2",
      ".",
      "size_code",
      "from",
      "owners",
      "as",
      "t1",
      "join",
      "dogs",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "owner_id",
      "=",
      "t2",
      ".",
      "owner_id"
    ],
    "question": "What are each owner's first name, last name, and the size of their dog?",
    "question_toks": [
      "What",
      "are",
      "each",
      "owner",
      "'s",
      "first",
      "name",
      ",",
      "last",
      "name",
      ",",
      "and",
      "the",
      "size",
      "of",
      "their",
      "dog",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "id",
      "FROM",
      "tv_channel",
      "GROUP",
      "BY",
      "country",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      "from",
      "tv_channel",
      "group",
      "by",
      "country",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "find id of the tv channels that from the countries where have more than two tv channels.",
    "question_toks": [
      "find",
      "id",
      "of",
      "the",
      "tv",
      "channels",
      "that",
      "from",
      "the",
      "countries",
      "where",
      "have",
      "more",
      "than",
      "two",
      "tv",
      "channels",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT min(loser_rank) FROM matches",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "loser_rank",
      ")",
      "FROM",
      "matches"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "loser_rank",
      ")",
      "from",
      "matches"
    ],
    "question": "Find the highest rank of losers in all matches.",
    "question_toks": [
      "Find",
      "the",
      "highest",
      "rank",
      "of",
      "losers",
      "in",
      "all",
      "matches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "query_toks": [
      "SELECT",
      "T2.Make",
      ",",
      "T1.Year",
      "FROM",
      "CARS_DATA",
      "AS",
      "T1",
      "JOIN",
      "CAR_NAMES",
      "AS",
      "T2",
      "ON",
      "T1.Id",
      "=",
      "T2.MakeId",
      "WHERE",
      "T1.Year",
      "=",
      "(",
      "SELECT",
      "min",
      "(",
      "YEAR",
      ")",
      "FROM",
      "CARS_DATA",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "make",
      ",",
      "t1",
      ".",
      "year",
      "from",
      "cars_data",
      "as",
      "t1",
      "join",
      "car_names",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "makeid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "(",
      "select",
      "min",
      "(",
      "year",
      ")",
      "from",
      "cars_data",
      ")"
    ],
    "question": "What is the maker of the carr produced in the earliest year and what year was it?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maker",
      "of",
      "the",
      "carr",
      "produced",
      "in",
      "the",
      "earliest",
      "year",
      "and",
      "what",
      "year",
      "was",
      "it",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      23,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "query_toks": [
      "SELECT",
      "Citizenship",
      "FROM",
      "singer",
      "WHERE",
      "Birth_Year",
      "<",
      "1945",
      "INTERSECT",
      "SELECT",
      "Citizenship",
      "FROM",
      "singer",
      "WHERE",
      "Birth_Year",
      ">",
      "1955"
    ],
    "query_toks_no_value": [
      "select",
      "citizenship",
      "from",
      "singer",
      "where",
      "birth_year",
      "<",
      "value",
      "intersect",
      "select",
      "citizenship",
      "from",
      "singer",
      "where",
      "birth_year",
      ">",
      "value"
    ],
    "question": "Show the citizenship shared by singers with birth year before 1945 and after 1955.",
    "question_toks": [
      "Show",
      "the",
      "citizenship",
      "shared",
      "by",
      "singers",
      "with",
      "birth",
      "year",
      "before",
      "1945",
      "and",
      "after",
      "1955",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          1945.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            3,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            1955.0,
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T2.Airline",
      "=",
      "T1.uid",
      "WHERE",
      "T1.Airline",
      "=",
      "``",
      "United",
      "Airlines",
      "''",
      "AND",
      "T2.SourceAirport",
      "=",
      "``",
      "AHD",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "airline",
      "=",
      "t1",
      ".",
      "uid",
      "where",
      "t1",
      ".",
      "airline",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "sourceairport",
      "=",
      "value"
    ],
    "question": "How many 'United Airlines' flights depart from Airport 'AHD'?",
    "question_toks": [
      "How",
      "many",
      "'United",
      "Airlines",
      "'",
      "flights",
      "depart",
      "from",
      "Airport",
      "'AHD",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"United Airlines\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"AHD\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "winner_name",
      "FROM",
      "matches",
      "WHERE",
      "tourney_name",
      "=",
      "'Australian",
      "Open",
      "'",
      "ORDER",
      "BY",
      "winner_rank_points",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "winner_name",
      "from",
      "matches",
      "where",
      "tourney_name",
      "=",
      "value",
      "order",
      "by",
      "winner_rank_points",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "winner",
      "with",
      "the",
      "most",
      "rank",
      "points",
      "who",
      "participated",
      "in",
      "the",
      "Australian",
      "Open",
      "tournament",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Australian Open\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              36,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler",
    "query_toks": [
      "SELECT",
      "grade",
      "FROM",
      "Highschooler"
    ],
    "query_toks_no_value": [
      "select",
      "grade",
      "from",
      "highschooler"
    ],
    "question": "Show all the grades of the high schoolers.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "grades",
      "of",
      "the",
      "high",
      "schoolers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Paragraphs",
      "WHERE",
      "paragraph_text",
      "=",
      "'Brazil",
      "'",
      "INTERSECT",
      "SELECT",
      "document_id",
      "FROM",
      "Paragraphs",
      "WHERE",
      "paragraph_text",
      "=",
      "'Ireland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "paragraphs",
      "where",
      "paragraph_text",
      "=",
      "value",
      "intersect",
      "select",
      "document_id",
      "from",
      "paragraphs",
      "where",
      "paragraph_text",
      "=",
      "value"
    ],
    "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
    "question_toks": [
      "Show",
      "the",
      "document",
      "id",
      "with",
      "paragraph",
      "text",
      "'Brazil",
      "'",
      "and",
      "'Ireland",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Brazil\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              3
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  15,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            "\"Ireland\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "FLIGHTS",
      "AS",
      "T1",
      "JOIN",
      "AIRPORTS",
      "AS",
      "T2",
      "ON",
      "T1.DestAirport",
      "=",
      "T2.AirportCode",
      "JOIN",
      "AIRPORTS",
      "AS",
      "T3",
      "ON",
      "T1.SourceAirport",
      "=",
      "T3.AirportCode",
      "WHERE",
      "T2.City",
      "=",
      "``",
      "Ashley",
      "''",
      "AND",
      "T3.City",
      "=",
      "``",
      "Aberdeen",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flights",
      "as",
      "t1",
      "join",
      "airports",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "destairport",
      "=",
      "t2",
      ".",
      "airportcode",
      "join",
      "airports",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "sourceairport",
      "=",
      "t3",
      ".",
      "airportcode",
      "where",
      "t2",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "city",
      "=",
      "value"
    ],
    "question": "How many flights fly from Aberdeen to Ashley?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "fly",
      "from",
      "Aberdeen",
      "to",
      "Ashley",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Ashley\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Aberdeen\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "query_toks": [
      "SELECT",
      "T1.Name",
      "FROM",
      "singer",
      "AS",
      "T1",
      "JOIN",
      "song",
      "AS",
      "T2",
      "ON",
      "T1.Singer_ID",
      "=",
      "T2.Singer_ID",
      "GROUP",
      "BY",
      "T1.Name",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "singer",
      "as",
      "t1",
      "join",
      "song",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "singer_id",
      "=",
      "t2",
      ".",
      "singer_id",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Show the names of singers that have more than one song.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "singers",
      "that",
      "have",
      "more",
      "than",
      "one",
      "song",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "(",
      "SELECT",
      "T1.Name",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T2.Language",
      "=",
      "``",
      "English",
      "''",
      "INTERSECT",
      "SELECT",
      "T1.Name",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T2.Language",
      "=",
      "``",
      "Dutch",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "(",
      "select",
      "t1",
      ".",
      "name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "language",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "language",
      "=",
      "value",
      ")"
    ],
    "question": "How many countries speak both English and Dutch?",
    "question_toks": [
      "How",
      "many",
      "countries",
      "speak",
      "both",
      "English",
      "and",
      "Dutch",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "sql",
            {
              "from": {
                "table_units": [
                  [
                    "table_unit",
                    2
                  ],
                  [
                    "table_unit",
                    3
                  ]
                ],
                "conds": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        8,
                        false
                      ],
                      null
                    ],
                    [
                      0,
                      23,
                      false
                    ],
                    null
                  ]
                ]
              },
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        9,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "where": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ],
                  "\"English\"",
                  null
                ]
              ],
              "groupBy": [],
              "having": [],
              "orderBy": [],
              "limit": null,
              "intersect": {
                "from": {
                  "table_units": [
                    [
                      "table_unit",
                      2
                    ],
                    [
                      "table_unit",
                      3
                    ]
                  ],
                  "conds": [
                    [
                      false,
                      2,
                      [
                        0,
                        [
                          0,
                          8,
                          false
                        ],
                        null
                      ],
                      [
                        0,
                        23,
                        false
                      ],
                      null
                    ]
                  ]
                },
                "select": [
                  false,
                  [
                    [
                      0,
                      [
                        0,
                        [
                          0,
                          9,
                          false
                        ],
                        null
                      ]
                    ]
                  ]
                ],
                "where": [
                  [
                    false,
                    2,
                    [
                      0,
                      [
                        0,
                        24,
                        false
                      ],
                      null
                    ],
                    "\"Dutch\"",
                    null
                  ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
              },
              "union": null,
              "except": null
            }
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "query_toks": [
      "SELECT",
      "Major_Record_Format",
      "FROM",
      "orchestra",
      "GROUP",
      "BY",
      "Major_Record_Format",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "major_record_format",
      "from",
      "orchestra",
      "group",
      "by",
      "major_record_format",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "asc"
    ],
    "question": "What are the major record formats of orchestras, sorted by their frequency?",
    "question_toks": [
      "What",
      "are",
      "the",
      "major",
      "record",
      "formats",
      "of",
      "orchestras",
      ",",
      "sorted",
      "by",
      "their",
      "frequency",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "degree_summary_name",
      ")",
      "FROM",
      "Degree_Programs"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "degree_summary_name",
      ")",
      "from",
      "degree_programs"
    ],
    "question": "How many different degrees are offered?",
    "question_toks": [
      "How",
      "many",
      "different",
      "degrees",
      "are",
      "offered",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                20,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T2.semester_id",
      "FROM",
      "Degree_Programs",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T2",
      "ON",
      "T1.degree_program_id",
      "=",
      "T2.degree_program_id",
      "WHERE",
      "degree_summary_name",
      "=",
      "'Master",
      "'",
      "INTERSECT",
      "SELECT",
      "DISTINCT",
      "T2.semester_id",
      "FROM",
      "Degree_Programs",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T2",
      "ON",
      "T1.degree_program_id",
      "=",
      "T2.degree_program_id",
      "WHERE",
      "degree_summary_name",
      "=",
      "'Bachelor",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "semester_id",
      "from",
      "degree_programs",
      "as",
      "t1",
      "join",
      "student_enrolment",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "degree_program_id",
      "=",
      "t2",
      ".",
      "degree_program_id",
      "where",
      "degree_summary_name",
      "=",
      "value",
      "intersect",
      "select",
      "distinct",
      "t2",
      ".",
      "semester_id",
      "from",
      "degree_programs",
      "as",
      "t1",
      "join",
      "student_enrolment",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "degree_program_id",
      "=",
      "t2",
      ".",
      "degree_program_id",
      "where",
      "degree_summary_name",
      "=",
      "value"
    ],
    "question": "Find the semester when both Master students and Bachelor students got enrolled in.",
    "question_toks": [
      "Find",
      "the",
      "semester",
      "when",
      "both",
      "Master",
      "students",
      "and",
      "Bachelor",
      "students",
      "got",
      "enrolled",
      "in",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              45,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Master\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              3
            ],
            [
              "table_unit",
              7
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  18,
                  false
                ],
                null
              ],
              [
                0,
                45,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          true,
          [
            [
              0,
              [
                0,
                [
                  0,
                  46,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            "\"Bachelor\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.model",
      "FROM",
      "MODEL_LIST",
      "AS",
      "T1",
      "JOIN",
      "CAR_NAMES",
      "AS",
      "T2",
      "ON",
      "T1.Model",
      "=",
      "T2.Model",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T3",
      "ON",
      "T2.MakeId",
      "=",
      "T3.Id",
      "JOIN",
      "CAR_MAKERS",
      "AS",
      "T4",
      "ON",
      "T1.Maker",
      "=",
      "T4.Id",
      "WHERE",
      "T3.weight",
      "<",
      "3500",
      "AND",
      "T4.FullName",
      "!",
      "=",
      "'Ford",
      "Motor",
      "Company",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "model",
      "from",
      "model_list",
      "as",
      "t1",
      "join",
      "car_names",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "model",
      "=",
      "t2",
      ".",
      "model",
      "join",
      "cars_data",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "makeid",
      "=",
      "t3",
      ".",
      "id",
      "join",
      "car_makers",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "maker",
      "=",
      "t4",
      ".",
      "id",
      "where",
      "t3",
      ".",
      "weight",
      "<",
      "value",
      "and",
      "t4",
      ".",
      "fullname",
      "!",
      "=",
      "value"
    ],
    "question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "models",
      "wthat",
      "are",
      "lighter",
      "than",
      "3500",
      "but",
      "were",
      "not",
      "built",
      "by",
      "the",
      "Ford",
      "Motor",
      "Company",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              14,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          3500.0,
          null
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Ford Motor Company\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "breed_code",
      ",",
      "size_code",
      "FROM",
      "dogs"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "breed_code",
      ",",
      "size_code",
      "from",
      "dogs"
    ],
    "question": "Find the distinct breed type and size type combinations for dogs.",
    "question_toks": [
      "Find",
      "the",
      "distinct",
      "breed",
      "type",
      "and",
      "size",
      "type",
      "combinations",
      "for",
      "dogs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_1",
    "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.contestant_number",
      ",",
      "T1.contestant_name",
      "FROM",
      "contestants",
      "AS",
      "T1",
      "JOIN",
      "votes",
      "AS",
      "T2",
      "ON",
      "T1.contestant_number",
      "=",
      "T2.contestant_number",
      "GROUP",
      "BY",
      "T1.contestant_number",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "contestant_number",
      ",",
      "t1",
      ".",
      "contestant_name",
      "from",
      "contestants",
      "as",
      "t1",
      "join",
      "votes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "contestant_number",
      "=",
      "t2",
      ".",
      "contestant_number",
      "group",
      "by",
      "t1",
      ".",
      "contestant_number",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "asc",
      "limit",
      "value"
    ],
    "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
    "question_toks": [
      "Of",
      "all",
      "the",
      "contestants",
      "who",
      "got",
      "voted",
      ",",
      "what",
      "is",
      "the",
      "contestant",
      "number",
      "and",
      "name",
      "of",
      "the",
      "contestant",
      "who",
      "got",
      "least",
      "votes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T1.cylinders",
      "FROM",
      "CARS_DATA",
      "AS",
      "T1",
      "JOIN",
      "CAR_NAMES",
      "AS",
      "T2",
      "ON",
      "T1.Id",
      "=",
      "T2.MakeId",
      "WHERE",
      "T2.Model",
      "=",
      "'volvo",
      "'",
      "ORDER",
      "BY",
      "T1.accelerate",
      "ASC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "cylinders",
      "from",
      "cars_data",
      "as",
      "t1",
      "join",
      "car_names",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "makeid",
      "where",
      "t2",
      ".",
      "model",
      "=",
      "value",
      "order",
      "by",
      "t1",
      ".",
      "accelerate",
      "asc",
      "limit",
      "value"
    ],
    "question": "For a volvo model, how many cylinders does the version with least accelerate have?",
    "question_toks": [
      "For",
      "a",
      "volvo",
      "model",
      ",",
      "how",
      "many",
      "cylinders",
      "does",
      "the",
      "version",
      "with",
      "least",
      "accelerate",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"volvo\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.age",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'dog",
      "'",
      "AND",
      "T1.stuid",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.stuid",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'cat",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "age",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value",
      ")"
    ],
    "question": "Find the first name and age of students who have a dog but do not have a cat as a pet.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "and",
      "age",
      "of",
      "students",
      "who",
      "have",
      "a",
      "dog",
      "but",
      "do",
      "not",
      "have",
      "a",
      "cat",
      "as",
      "a",
      "pet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"dog\"",
          null
        ],
        "and",
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ],
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ],
                "and",
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    10,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"cat\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "GROUP",
      "BY",
      "T1.Airline",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "group",
      "by",
      "t1",
      ".",
      "airline",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which airline has most number of flights?",
    "question_toks": [
      "Which",
      "airline",
      "has",
      "most",
      "number",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Highschooler",
      "EXCEPT",
      "SELECT",
      "T2.name",
      "FROM",
      "Friend",
      "AS",
      "T1",
      "JOIN",
      "Highschooler",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.id"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "highschooler",
      "except",
      "select",
      "t2",
      ".",
      "name",
      "from",
      "friend",
      "as",
      "t1",
      "join",
      "highschooler",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "id"
    ],
    "question": "What are the names of students who have no friends?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "students",
      "who",
      "have",
      "no",
      "friends",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              0
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  4,
                  false
                ],
                null
              ],
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Citizenship",
      "FROM",
      "singer",
      "GROUP",
      "BY",
      "Citizenship",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "citizenship",
      "from",
      "singer",
      "group",
      "by",
      "citizenship",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Please show the most common citizenship of singers.",
    "question_toks": [
      "Please",
      "show",
      "the",
      "most",
      "common",
      "citizenship",
      "of",
      "singers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;",
    "query_toks": [
      "select",
      "t1.id",
      ",",
      "t1.maker",
      "from",
      "car_makers",
      "as",
      "t1",
      "join",
      "model_list",
      "as",
      "t2",
      "on",
      "t1.id",
      "=",
      "t2.maker",
      "group",
      "by",
      "t1.id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">=",
      "2",
      "intersect",
      "select",
      "t1.id",
      ",",
      "t1.maker",
      "from",
      "car_makers",
      "as",
      "t1",
      "join",
      "model_list",
      "as",
      "t2",
      "on",
      "t1.id",
      "=",
      "t2.maker",
      "join",
      "car_names",
      "as",
      "t3",
      "on",
      "t2.model",
      "=",
      "t3.model",
      "group",
      "by",
      "t1.id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "id",
      ",",
      "t1",
      ".",
      "maker",
      "from",
      "car_makers",
      "as",
      "t1",
      "join",
      "model_list",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "maker",
      "group",
      "by",
      "t1",
      ".",
      "id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "id",
      ",",
      "t1",
      ".",
      "maker",
      "from",
      "car_makers",
      "as",
      "t1",
      "join",
      "model_list",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "maker",
      "join",
      "car_names",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "model",
      "=",
      "t3",
      ".",
      "model",
      "group",
      "by",
      "t1",
      ".",
      "id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .",
    "question_toks": [
      "Which",
      "are",
      "the",
      "car",
      "makers",
      "which",
      "produce",
      "at",
      "least",
      "2",
      "models",
      "and",
      "more",
      "than",
      "3",
      "car",
      "makers",
      "?",
      "List",
      "the",
      "id",
      "and",
      "the",
      "maker",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              3
            ],
            [
              "table_unit",
              4
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  6,
                  false
                ],
                null
              ],
              [
                0,
                11,
                false
              ],
              null
            ],
            "and",
            [
              false,
              2,
              [
                0,
                [
                  0,
                  12,
                  false
                ],
                null
              ],
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  6,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  7,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [
          [
            0,
            6,
            false
          ]
        ],
        "having": [
          [
            false,
            3,
            [
              0,
              [
                3,
                0,
                false
              ],
              null
            ],
            3.0,
            null
          ]
        ],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T1.Model",
      "FROM",
      "CAR_NAMES",
      "AS",
      "T1",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T2",
      "ON",
      "T1.MakeId",
      "=",
      "T2.Id",
      "ORDER",
      "BY",
      "T2.horsepower",
      "ASC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "model",
      "from",
      "car_names",
      "as",
      "t1",
      "join",
      "cars_data",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "makeid",
      "=",
      "t2",
      ".",
      "id",
      "order",
      "by",
      "t2",
      ".",
      "horsepower",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which model of the car has the minimum horsepower?",
    "question_toks": [
      "Which",
      "model",
      "of",
      "the",
      "car",
      "has",
      "the",
      "minimum",
      "horsepower",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T2.CountryName",
      "FROM",
      "CAR_MAKERS",
      "AS",
      "T1",
      "JOIN",
      "COUNTRIES",
      "AS",
      "T2",
      "ON",
      "T1.Country",
      "=",
      "T2.CountryId",
      "GROUP",
      "BY",
      "T1.Country",
      "ORDER",
      "BY",
      "Count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "countryname",
      "from",
      "car_makers",
      "as",
      "t1",
      "join",
      "countries",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "country",
      "=",
      "t2",
      ".",
      "countryid",
      "group",
      "by",
      "t1",
      ".",
      "country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which of the countries has the most car makers? List the country name.",
    "question_toks": [
      "Which",
      "of",
      "the",
      "countries",
      "has",
      "the",
      "most",
      "car",
      "makers",
      "?",
      "List",
      "the",
      "country",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "query_toks": [
      "SELECT",
      "T1.country",
      "FROM",
      "TV_Channel",
      "AS",
      "T1",
      "JOIN",
      "cartoon",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.Channel",
      "WHERE",
      "T2.written_by",
      "=",
      "'Todd",
      "Casey",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "country",
      "from",
      "tv_channel",
      "as",
      "t1",
      "join",
      "cartoon",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "channel",
      "where",
      "t2",
      ".",
      "written_by",
      "=",
      "value"
    ],
    "question": "What are the countries that have cartoons on TV that were written by Todd Casey?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "that",
      "have",
      "cartoons",
      "on",
      "TV",
      "that",
      "were",
      "written",
      "by",
      "Todd",
      "Casey",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"Todd Casey\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "query_toks": [
      "SELECT",
      "weight",
      "FROM",
      "pets",
      "ORDER",
      "BY",
      "pet_age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "weight",
      "from",
      "pets",
      "order",
      "by",
      "pet_age",
      "limit",
      "value"
    ],
    "question": "How much does the youngest dog weigh?",
    "question_toks": [
      "How",
      "much",
      "does",
      "the",
      "youngest",
      "dog",
      "weigh",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "WHERE",
      "SurfaceArea",
      ">",
      "(",
      "SELECT",
      "min",
      "(",
      "SurfaceArea",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Continent",
      "=",
      "``",
      "Europe",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "where",
      "surfacearea",
      ">",
      "(",
      "select",
      "min",
      "(",
      "surfacearea",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value",
      ")"
    ],
    "question": "Which countries have greater area than that of any country in Europe?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "greater",
      "area",
      "than",
      "that",
      "of",
      "any",
      "country",
      "in",
      "Europe",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    10,
                    false
                  ],
                  null
                ],
                "\"Europe\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T2.CountryName",
      "FROM",
      "CAR_MAKERS",
      "AS",
      "T1",
      "JOIN",
      "COUNTRIES",
      "AS",
      "T2",
      "ON",
      "T1.Country",
      "=",
      "T2.CountryId",
      "GROUP",
      "BY",
      "T1.Country",
      "ORDER",
      "BY",
      "Count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "countryname",
      "from",
      "car_makers",
      "as",
      "t1",
      "join",
      "countries",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "country",
      "=",
      "t2",
      ".",
      "countryid",
      "group",
      "by",
      "t1",
      ".",
      "country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the country with the most car makers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "country",
      "with",
      "the",
      "most",
      "car",
      "makers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T2.Name",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "city",
      "AS",
      "T2",
      "ON",
      "T2.CountryCode",
      "=",
      "T1.Code",
      "WHERE",
      "T1.Continent",
      "=",
      "'Europe",
      "'",
      "AND",
      "T1.Name",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T3.Name",
      "FROM",
      "country",
      "AS",
      "T3",
      "JOIN",
      "countrylanguage",
      "AS",
      "T4",
      "ON",
      "T3.Code",
      "=",
      "T4.CountryCode",
      "WHERE",
      "T4.IsOfficial",
      "=",
      "'T",
      "'",
      "AND",
      "T4.Language",
      "=",
      "'English",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "city",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "countrycode",
      "=",
      "t1",
      ".",
      "code",
      "where",
      "t1",
      ".",
      "continent",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "not",
      "in",
      "(",
      "select",
      "t3",
      ".",
      "name",
      "from",
      "country",
      "as",
      "t3",
      "join",
      "countrylanguage",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "code",
      "=",
      "t4",
      ".",
      "countrycode",
      "where",
      "t4",
      ".",
      "isofficial",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "language",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of cities in Europe for which English is not the official language?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "cities",
      "in",
      "Europe",
      "for",
      "which",
      "English",
      "is",
      "not",
      "the",
      "official",
      "language",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Europe\"",
          null
        ],
        "and",
        [
          true,
          8,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ],
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    23,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    25,
                    false
                  ],
                  null
                ],
                "\"T\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    24,
                    false
                  ],
                  null
                ],
                "\"English\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "select other_details from paragraphs where paragraph_text like 'korea'",
    "query_toks": [
      "select",
      "other_details",
      "from",
      "paragraphs",
      "where",
      "paragraph_text",
      "like",
      "\"korea\""
    ],
    "query_toks_no_value": [
      "select",
      "other_details",
      "from",
      "paragraphs",
      "where",
      "paragraph_text",
      "like",
      "value"
    ],
    "question": "Show paragraph details for paragraph with text 'Korea ' .",
    "question_toks": [
      "Show",
      "paragraph",
      "details",
      "for",
      "paragraph",
      "with",
      "text",
      "'Korea",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"korea\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "query_toks": [
      "SELECT",
      "T1.series_name",
      "FROM",
      "TV_Channel",
      "AS",
      "T1",
      "JOIN",
      "Cartoon",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.Channel",
      "WHERE",
      "T2.Title",
      "=",
      "``",
      "The",
      "Rise",
      "of",
      "the",
      "Blue",
      "Beetle",
      "!",
      "``",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "series_name",
      "from",
      "tv_channel",
      "as",
      "t1",
      "join",
      "cartoon",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "channel",
      "where",
      "t2",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "series",
      "name",
      "of",
      "the",
      "TV",
      "Channel",
      "that",
      "shows",
      "the",
      "cartoon",
      "``",
      "The",
      "Rise",
      "of",
      "the",
      "Blue",
      "Beetle",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"The Rise of the Blue Beetle!\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "professional_id",
      ",",
      "last_name",
      ",",
      "cell_number",
      "FROM",
      "Professionals",
      "WHERE",
      "state",
      "=",
      "'Indiana",
      "'",
      "UNION",
      "SELECT",
      "T1.professional_id",
      ",",
      "T1.last_name",
      ",",
      "T1.cell_number",
      "FROM",
      "Professionals",
      "AS",
      "T1",
      "JOIN",
      "Treatments",
      "AS",
      "T2",
      "ON",
      "T1.professional_id",
      "=",
      "T2.professional_id",
      "GROUP",
      "BY",
      "T1.professional_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "professional_id",
      ",",
      "last_name",
      ",",
      "cell_number",
      "from",
      "professionals",
      "where",
      "state",
      "=",
      "value",
      "union",
      "select",
      "t1",
      ".",
      "professional_id",
      ",",
      "t1",
      ".",
      "last_name",
      ",",
      "t1",
      ".",
      "cell_number",
      "from",
      "professionals",
      "as",
      "t1",
      "join",
      "treatments",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "professional_id",
      "=",
      "t2",
      ".",
      "professional_id",
      "group",
      "by",
      "t1",
      ".",
      "professional_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
    "question_toks": [
      "Which",
      "professionals",
      "live",
      "in",
      "the",
      "state",
      "of",
      "Indiana",
      "or",
      "have",
      "done",
      "treatment",
      "on",
      "more",
      "than",
      "2",
      "treatments",
      "?",
      "List",
      "his",
      "or",
      "her",
      "id",
      ",",
      "last",
      "name",
      "and",
      "cell",
      "phone",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"Indiana\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": {
        "from": {
          "table_units": [
            [
              "table_unit",
              6
            ],
            [
              "table_unit",
              7
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  33,
                  false
                ],
                null
              ],
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  33,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  40,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  43,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [
          [
            0,
            33,
            false
          ]
        ],
        "having": [
          [
            false,
            3,
            [
              0,
              [
                3,
                0,
                false
              ],
              null
            ],
            2.0,
            null
          ]
        ],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "query_toks": [
      "SELECT",
      "T2.Language",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T1.GovernmentForm",
      "=",
      "``",
      "Republic",
      "''",
      "GROUP",
      "BY",
      "T2.Language",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "language",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t1",
      ".",
      "governmentform",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "language",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "What languages are only used by a single country with a republic government?",
    "question_toks": [
      "What",
      "languages",
      "are",
      "only",
      "used",
      "by",
      "a",
      "single",
      "country",
      "with",
      "a",
      "republic",
      "government",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Republic\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          24,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "query_toks": [
      "SELECT",
      "T1.CountryName",
      "FROM",
      "COUNTRIES",
      "AS",
      "T1",
      "JOIN",
      "CONTINENTS",
      "AS",
      "T2",
      "ON",
      "T1.Continent",
      "=",
      "T2.ContId",
      "JOIN",
      "CAR_MAKERS",
      "AS",
      "T3",
      "ON",
      "T1.CountryId",
      "=",
      "T3.Country",
      "WHERE",
      "T2.Continent",
      "=",
      "'europe",
      "'",
      "GROUP",
      "BY",
      "T1.CountryName",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "3",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "countryname",
      "from",
      "countries",
      "as",
      "t1",
      "join",
      "continents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "continent",
      "=",
      "t2",
      ".",
      "contid",
      "join",
      "car_makers",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "countryid",
      "=",
      "t3",
      ".",
      "country",
      "where",
      "t2",
      ".",
      "continent",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "countryname",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the names of all European countries with at least 3 manufacturers?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "European",
      "countries",
      "with",
      "at",
      "least",
      "3",
      "manufacturers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"europe\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "winner_name",
      ",",
      "winner_rank",
      "FROM",
      "matches",
      "ORDER",
      "BY",
      "winner_age",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "winner_name",
      ",",
      "winner_rank",
      "from",
      "matches",
      "order",
      "by",
      "winner_age",
      "limit",
      "value"
    ],
    "question": "Find the name and rank of the 3 youngest winners across all matches.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "rank",
      "of",
      "the",
      "3",
      "youngest",
      "winners",
      "across",
      "all",
      "matches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.AirportCode",
      "FROM",
      "AIRPORTS",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.AirportCode",
      "=",
      "T2.DestAirport",
      "OR",
      "T1.AirportCode",
      "=",
      "T2.SourceAirport",
      "GROUP",
      "BY",
      "T1.AirportCode",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airportcode",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "airportcode",
      "=",
      "t2",
      ".",
      "destairport",
      "or",
      "t1",
      ".",
      "airportcode",
      "=",
      "t2",
      ".",
      "sourceairport",
      "group",
      "by",
      "t1",
      ".",
      "airportcode",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "limit",
      "value"
    ],
    "question": "Give the code of the airport with the least flights.",
    "question_toks": [
      "Give",
      "the",
      "code",
      "of",
      "the",
      "airport",
      "with",
      "the",
      "least",
      "flights",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "student_course_id",
      "FROM",
      "Transcript_Contents",
      "GROUP",
      "BY",
      "student_course_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "student_course_id",
      "from",
      "transcript_contents",
      "group",
      "by",
      "student_course_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "number",
      "of",
      "times",
      "that",
      "a",
      "course",
      "shows",
      "up",
      "in",
      "different",
      "transcripts",
      "and",
      "what",
      "is",
      "that",
      "course",
      "'s",
      "enrollment",
      "id",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                55,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          55,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T2.Money_Rank",
      "FROM",
      "people",
      "AS",
      "T1",
      "JOIN",
      "poker_player",
      "AS",
      "T2",
      "ON",
      "T1.People_ID",
      "=",
      "T2.People_ID",
      "ORDER",
      "BY",
      "T1.Height",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "money_rank",
      "from",
      "people",
      "as",
      "t1",
      "join",
      "poker_player",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "people_id",
      "=",
      "t2",
      ".",
      "people_id",
      "order",
      "by",
      "t1",
      ".",
      "height",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the money rank of the poker player with the greatest height.",
    "question_toks": [
      "Return",
      "the",
      "money",
      "rank",
      "of",
      "the",
      "poker",
      "player",
      "with",
      "the",
      "greatest",
      "height",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      ",",
      "SurfaceArea",
      ",",
      "IndepYear",
      "FROM",
      "country",
      "ORDER",
      "BY",
      "Population",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "surfacearea",
      ",",
      "indepyear",
      "from",
      "country",
      "order",
      "by",
      "population",
      "limit",
      "value"
    ],
    "question": "Give the name, year of independence, and surface area of the country that has the lowest population.",
    "question_toks": [
      "Give",
      "the",
      "name",
      ",",
      "year",
      "of",
      "independence",
      ",",
      "and",
      "surface",
      "area",
      "of",
      "the",
      "country",
      "that",
      "has",
      "the",
      "lowest",
      "population",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T2.Language",
      "=",
      "``",
      "English",
      "''",
      "AND",
      "IsOfficial",
      "=",
      "``",
      "T",
      "''",
      "UNION",
      "SELECT",
      "*",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T2.Language",
      "=",
      "``",
      "Dutch",
      "''",
      "AND",
      "IsOfficial",
      "=",
      "``",
      "T",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "language",
      "=",
      "value",
      "and",
      "isofficial",
      "=",
      "value",
      "union",
      "select",
      "*",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "language",
      "=",
      "value",
      "and",
      "isofficial",
      "=",
      "value"
    ],
    "question": "Which countries have either English or Dutch as an official language?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "either",
      "English",
      "or",
      "Dutch",
      "as",
      "an",
      "official",
      "language",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"English\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"T\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              3
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  8,
                  false
                ],
                null
              ],
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  0,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            "\"Dutch\"",
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            "\"T\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';",
    "query_toks": [
      "select",
      "t1.countryid",
      ",",
      "t1.countryname",
      "from",
      "countries",
      "as",
      "t1",
      "join",
      "car_makers",
      "as",
      "t2",
      "on",
      "t1.countryid",
      "=",
      "t2.country",
      "group",
      "by",
      "t1.countryid",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3",
      "union",
      "select",
      "t1.countryid",
      ",",
      "t1.countryname",
      "from",
      "countries",
      "as",
      "t1",
      "join",
      "car_makers",
      "as",
      "t2",
      "on",
      "t1.countryid",
      "=",
      "t2.country",
      "join",
      "model_list",
      "as",
      "t3",
      "on",
      "t2.id",
      "=",
      "t3.maker",
      "where",
      "t3.model",
      "=",
      "\"fiat\"",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "countryid",
      ",",
      "t1",
      ".",
      "countryname",
      "from",
      "countries",
      "as",
      "t1",
      "join",
      "car_makers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "countryid",
      "=",
      "t2",
      ".",
      "country",
      "group",
      "by",
      "t1",
      ".",
      "countryid",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value",
      "union",
      "select",
      "t1",
      ".",
      "countryid",
      ",",
      "t1",
      ".",
      "countryname",
      "from",
      "countries",
      "as",
      "t1",
      "join",
      "car_makers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "countryid",
      "=",
      "t2",
      ".",
      "country",
      "join",
      "model_list",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "maker",
      "where",
      "t3",
      ".",
      "model",
      "=",
      "value"
    ],
    "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "and",
      "names",
      "of",
      "all",
      "countries",
      "that",
      "either",
      "have",
      "more",
      "than",
      "3",
      "car",
      "makers",
      "or",
      "produce",
      "fiat",
      "model",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              3
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ],
              [
                0,
                9,
                false
              ],
              null
            ],
            "and",
            [
              false,
              2,
              [
                0,
                [
                  0,
                  6,
                  false
                ],
                null
              ],
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  4,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            "\"fiat\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Record_Company",
      "FROM",
      "orchestra",
      "GROUP",
      "BY",
      "Record_Company",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "record_company",
      "from",
      "orchestra",
      "group",
      "by",
      "record_company",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "List the record company shared by the most number of orchestras.",
    "question_toks": [
      "List",
      "the",
      "record",
      "company",
      "shared",
      "by",
      "the",
      "most",
      "number",
      "of",
      "orchestras",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "T1.professional_id",
      ",",
      "T1.cell_number",
      "FROM",
      "Professionals",
      "AS",
      "T1",
      "JOIN",
      "Treatments",
      "AS",
      "T2",
      "ON",
      "T1.professional_id",
      "=",
      "T2.professional_id",
      "GROUP",
      "BY",
      "T1.professional_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "professional_id",
      ",",
      "t1",
      ".",
      "cell_number",
      "from",
      "professionals",
      "as",
      "t1",
      "join",
      "treatments",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "professional_id",
      "=",
      "t2",
      ".",
      "professional_id",
      "group",
      "by",
      "t1",
      ".",
      "professional_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Find the id and cell phone of the professionals who operate two or more types of treatments.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "and",
      "cell",
      "phone",
      "of",
      "the",
      "professionals",
      "who",
      "operate",
      "two",
      "or",
      "more",
      "types",
      "of",
      "treatments",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ],
            [
              0,
              46,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          33,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "query_toks": [
      "SELECT",
      "T1.last_name",
      "FROM",
      "Students",
      "AS",
      "T1",
      "JOIN",
      "Addresses",
      "AS",
      "T2",
      "ON",
      "T1.current_address_id",
      "=",
      "T2.address_id",
      "WHERE",
      "T2.state_province_county",
      "=",
      "'NorthCarolina",
      "'",
      "EXCEPT",
      "SELECT",
      "DISTINCT",
      "T3.last_name",
      "FROM",
      "Students",
      "AS",
      "T3",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T4",
      "ON",
      "T3.student_id",
      "=",
      "T4.student_id"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "last_name",
      "from",
      "students",
      "as",
      "t1",
      "join",
      "addresses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "current_address_id",
      "=",
      "t2",
      ".",
      "address_id",
      "where",
      "t2",
      ".",
      "state_province_county",
      "=",
      "value",
      "except",
      "select",
      "distinct",
      "t3",
      ".",
      "last_name",
      "from",
      "students",
      "as",
      "t3",
      "join",
      "student_enrolment",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "student_id",
      "=",
      "t4",
      ".",
      "student_id"
    ],
    "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
    "question_toks": [
      "Find",
      "the",
      "last",
      "name",
      "of",
      "the",
      "students",
      "who",
      "currently",
      "live",
      "in",
      "the",
      "state",
      "of",
      "North",
      "Carolina",
      "but",
      "have",
      "not",
      "registered",
      "in",
      "any",
      "degree",
      "program",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"NorthCarolina\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              6
            ],
            [
              "table_unit",
              7
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  32,
                  false
                ],
                null
              ],
              [
                0,
                47,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          true,
          [
            [
              0,
              [
                0,
                [
                  0,
                  37,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "query_toks": [
      "SELECT",
      "T1.series_name",
      ",",
      "T1.country",
      "FROM",
      "TV_Channel",
      "AS",
      "T1",
      "JOIN",
      "cartoon",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.Channel",
      "WHERE",
      "T2.directed_by",
      "=",
      "'Michael",
      "Chang",
      "'",
      "INTERSECT",
      "SELECT",
      "T1.series_name",
      ",",
      "T1.country",
      "FROM",
      "TV_Channel",
      "AS",
      "T1",
      "JOIN",
      "cartoon",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.Channel",
      "WHERE",
      "T2.directed_by",
      "=",
      "'Ben",
      "Jones",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "series_name",
      ",",
      "t1",
      ".",
      "country",
      "from",
      "tv_channel",
      "as",
      "t1",
      "join",
      "cartoon",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "channel",
      "where",
      "t2",
      ".",
      "directed_by",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "series_name",
      ",",
      "t1",
      ".",
      "country",
      "from",
      "tv_channel",
      "as",
      "t1",
      "join",
      "cartoon",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "channel",
      "where",
      "t2",
      ".",
      "directed_by",
      "=",
      "value"
    ],
    "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
    "question_toks": [
      "What",
      "is",
      "the",
      "series",
      "name",
      "and",
      "country",
      "of",
      "all",
      "TV",
      "channels",
      "that",
      "are",
      "playing",
      "cartoons",
      "directed",
      "by",
      "Ben",
      "Jones",
      "and",
      "cartoons",
      "directed",
      "by",
      "Michael",
      "Chang",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Michael Chang\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            "\"Ben Jones\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "query_toks": [
      "SELECT",
      "CountryCode",
      "FROM",
      "countrylanguage",
      "EXCEPT",
      "SELECT",
      "CountryCode",
      "FROM",
      "countrylanguage",
      "WHERE",
      "LANGUAGE",
      "=",
      "``",
      "English",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "countrycode",
      "from",
      "countrylanguage",
      "except",
      "select",
      "countrycode",
      "from",
      "countrylanguage",
      "where",
      "language",
      "=",
      "value"
    ],
    "question": "Return the country codes for countries that do not speak English.",
    "question_toks": [
      "Return",
      "the",
      "country",
      "codes",
      "for",
      "countries",
      "that",
      "do",
      "not",
      "speak",
      "English",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              3
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  23,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            "\"English\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "stadium",
      "EXCEPT",
      "SELECT",
      "T2.name",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "WHERE",
      "T1.year",
      "=",
      "2014"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "stadium",
      "except",
      "select",
      "t2",
      ".",
      "name",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "What are the names of all stadiums that did not have a concert in 2014?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "stadiums",
      "that",
      "did",
      "not",
      "have",
      "a",
      "concert",
      "in",
      "2014",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              0
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  18,
                  false
                ],
                null
              ],
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            2014.0,
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "query_toks": [
      "SELECT",
      "T2.name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "GROUP",
      "BY",
      "T1.stadium_id"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "group",
      "by",
      "t1",
      ".",
      "stadium_id"
    ],
    "question": "For each stadium, how many concerts play there?",
    "question_toks": [
      "For",
      "each",
      "stadium",
      ",",
      "how",
      "many",
      "concerts",
      "play",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "query_toks": [
      "SELECT",
      "winner_name",
      "FROM",
      "matches",
      "WHERE",
      "YEAR",
      "=",
      "2013",
      "INTERSECT",
      "SELECT",
      "winner_name",
      "FROM",
      "matches",
      "WHERE",
      "YEAR",
      "=",
      "2016"
    ],
    "query_toks_no_value": [
      "select",
      "winner_name",
      "from",
      "matches",
      "where",
      "year",
      "=",
      "value",
      "intersect",
      "select",
      "winner_name",
      "from",
      "matches",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What are the names of players who won in both 2013 and 2016?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "players",
      "who",
      "won",
      "in",
      "both",
      "2013",
      "and",
      "2016",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          2013.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  34,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            2016.0,
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "query_toks": [
      "SELECT",
      "pettype",
      ",",
      "weight",
      "FROM",
      "pets",
      "ORDER",
      "BY",
      "pet_age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "pettype",
      ",",
      "weight",
      "from",
      "pets",
      "order",
      "by",
      "pet_age",
      "limit",
      "value"
    ],
    "question": "Find the type and weight of the youngest pet.",
    "question_toks": [
      "Find",
      "the",
      "type",
      "and",
      "weight",
      "of",
      "the",
      "youngest",
      "pet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.template_id",
      ",",
      "T2.Template_Type_Code",
      "FROM",
      "Documents",
      "AS",
      "T1",
      "JOIN",
      "Templates",
      "AS",
      "T2",
      "ON",
      "T1.template_id",
      "=",
      "T2.template_id",
      "GROUP",
      "BY",
      "T1.template_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "template_id",
      ",",
      "t2",
      ".",
      "template_type_code",
      "from",
      "documents",
      "as",
      "t1",
      "join",
      "templates",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "template_id",
      "=",
      "t2",
      ".",
      "template_id",
      "group",
      "by",
      "t1",
      ".",
      "template_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the id and type code of the template that is used for the greatest number of documents.",
    "question_toks": [
      "Return",
      "the",
      "id",
      "and",
      "type",
      "code",
      "of",
      "the",
      "template",
      "that",
      "is",
      "used",
      "for",
      "the",
      "greatest",
      "number",
      "of",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "query_toks": [
      "SELECT",
      "Major_Record_Format",
      "FROM",
      "orchestra",
      "GROUP",
      "BY",
      "Major_Record_Format",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "major_record_format",
      "from",
      "orchestra",
      "group",
      "by",
      "major_record_format",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "asc"
    ],
    "question": "Please show the record formats of orchestras in ascending order of count.",
    "question_toks": [
      "Please",
      "show",
      "the",
      "record",
      "formats",
      "of",
      "orchestras",
      "in",
      "ascending",
      "order",
      "of",
      "count",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "query_toks": [
      "SELECT",
      "department_description",
      "FROM",
      "Departments",
      "WHERE",
      "department_name",
      "LIKE",
      "'",
      "%",
      "computer",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "department_description",
      "from",
      "departments",
      "where",
      "department_name",
      "like",
      "value"
    ],
    "question": "What is the description of the department whose name has the substring the computer?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "department",
      "whose",
      "name",
      "has",
      "the",
      "substring",
      "the",
      "computer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%computer%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "stadium",
      "EXCEPT",
      "SELECT",
      "T2.name",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "WHERE",
      "T1.year",
      "=",
      "2014"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "stadium",
      "except",
      "select",
      "t2",
      ".",
      "name",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "Show names for all stadiums except for stadiums having a concert in year 2014.",
    "question_toks": [
      "Show",
      "names",
      "for",
      "all",
      "stadiums",
      "except",
      "for",
      "stadiums",
      "having",
      "a",
      "concert",
      "in",
      "year",
      "2014",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              0
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  18,
                  false
                ],
                null
              ],
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            2014.0,
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "query_toks": [
      "SELECT",
      "T2.Name",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "course_arrange",
      "AS",
      "T1",
      "JOIN",
      "teacher",
      "AS",
      "T2",
      "ON",
      "T1.Teacher_ID",
      "=",
      "T2.Teacher_ID",
      "GROUP",
      "BY",
      "T2.Name"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "course_arrange",
      "as",
      "t1",
      "join",
      "teacher",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "teacher_id",
      "=",
      "t2",
      ".",
      "teacher_id",
      "group",
      "by",
      "t2",
      ".",
      "name"
    ],
    "question": "What are the names of the teachers and how many courses do they teach?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "teachers",
      "and",
      "how",
      "many",
      "courses",
      "do",
      "they",
      "teach",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",
    "query_toks": [
      "select",
      "t2.makeid",
      ",",
      "t2.make",
      "from",
      "cars_data",
      "as",
      "t1",
      "join",
      "car_names",
      "as",
      "t2",
      "on",
      "t1.id",
      "=",
      "t2.makeid",
      "where",
      "t1.horsepower",
      ">",
      "(",
      "select",
      "min",
      "(",
      "horsepower",
      ")",
      "from",
      "cars_data",
      ")",
      "and",
      "t1.cylinders",
      "<",
      "4",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "makeid",
      ",",
      "t2",
      ".",
      "make",
      "from",
      "cars_data",
      "as",
      "t1",
      "join",
      "car_names",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "makeid",
      "where",
      "t1",
      ".",
      "horsepower",
      ">",
      "(",
      "select",
      "min",
      "(",
      "horsepower",
      ")",
      "from",
      "cars_data",
      ")",
      "and",
      "t1",
      ".",
      "cylinders",
      "<",
      "value"
    ],
    "question": "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?",
    "question_toks": [
      "Among",
      "the",
      "cars",
      "that",
      "do",
      "not",
      "have",
      "the",
      "minimum",
      "horsepower",
      ",",
      "what",
      "are",
      "the",
      "make",
      "ids",
      "and",
      "names",
      "of",
      "all",
      "those",
      "with",
      "less",
      "than",
      "4",
      "cylinders",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      20,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(DISTINCT current_address_id) FROM Students",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "current_address_id",
      ")",
      "FROM",
      "Students"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "current_address_id",
      ")",
      "from",
      "students"
    ],
    "question": "What are the different addresses that have students living there?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "addresses",
      "that",
      "have",
      "students",
      "living",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                33,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "countries",
      "as",
      "t1",
      "join",
      "car_makers",
      "as",
      "t2",
      "on",
      "t1.countryid",
      "=",
      "t2.country",
      "group",
      "by",
      "t1.countryid",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "countries",
      "as",
      "t1",
      "join",
      "car_makers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "countryid",
      "=",
      "t2",
      ".",
      "country",
      "group",
      "by",
      "t1",
      ".",
      "countryid",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What is the number of countries with more than 2 car makers ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "countries",
      "with",
      "more",
      "than",
      "2",
      "car",
      "makers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Likes",
      "AS",
      "T1",
      "JOIN",
      "Highschooler",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.id",
      "WHERE",
      "T2.name",
      "=",
      "``",
      "Kyle",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "likes",
      "as",
      "t1",
      "join",
      "highschooler",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "id",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "How many likes does Kyle have?",
    "question_toks": [
      "How",
      "many",
      "likes",
      "does",
      "Kyle",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Kyle\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
    "query_toks": [
      "select",
      "t2.department_name",
      ",",
      "t1.department_id",
      "from",
      "degree_programs",
      "as",
      "t1",
      "join",
      "departments",
      "as",
      "t2",
      "on",
      "t1.department_id",
      "=",
      "t2.department_id",
      "group",
      "by",
      "t1.department_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "department_name",
      ",",
      "t1",
      ".",
      "department_id",
      "from",
      "degree_programs",
      "as",
      "t1",
      "join",
      "departments",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "department_id",
      "=",
      "t2",
      ".",
      "department_id",
      "group",
      "by",
      "t1",
      ".",
      "department_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name and id of the department with the most number of degrees ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "id",
      "of",
      "the",
      "department",
      "with",
      "the",
      "most",
      "number",
      "of",
      "degrees",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "query_toks": [
      "SELECT",
      "Country",
      "FROM",
      "AIRLINES",
      "WHERE",
      "Airline",
      "=",
      "``",
      "JetBlue",
      "Airways",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airlines",
      "where",
      "airline",
      "=",
      "value"
    ],
    "question": "What country is Jetblue Airways affiliated with?",
    "question_toks": [
      "What",
      "country",
      "is",
      "Jetblue",
      "Airways",
      "affiliated",
      "with",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"JetBlue Airways\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "t1.id",
      ",",
      "t1.name",
      ",",
      "t1.age",
      "FROM",
      "visitor",
      "AS",
      "t1",
      "JOIN",
      "visit",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.visitor_id",
      "GROUP",
      "BY",
      "t1.id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "id",
      ",",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "age",
      "from",
      "visitor",
      "as",
      "t1",
      "join",
      "visit",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "visitor_id",
      "group",
      "by",
      "t1",
      ".",
      "id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "find the id, name and age for visitors who visited some museums more than once.",
    "question_toks": [
      "find",
      "the",
      "id",
      ",",
      "name",
      "and",
      "age",
      "for",
      "visitors",
      "who",
      "visited",
      "some",
      "museums",
      "more",
      "than",
      "once",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "WHERE",
      "Continent",
      "=",
      "``",
      "Africa",
      "''",
      "AND",
      "population",
      "<",
      "(",
      "SELECT",
      "max",
      "(",
      "population",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Continent",
      "=",
      "``",
      "Asia",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value",
      "and",
      "population",
      "<",
      "(",
      "select",
      "max",
      "(",
      "population",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value",
      ")"
    ],
    "question": "What are the African countries that have a  population less than any country in Asia?",
    "question_toks": [
      "What",
      "are",
      "the",
      "African",
      "countries",
      "that",
      "have",
      "a",
      "population",
      "less",
      "than",
      "any",
      "country",
      "in",
      "Asia",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Africa\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    10,
                    false
                  ],
                  null
                ],
                "\"Asia\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "winner_name",
      ")",
      "FROM",
      "matches",
      "WHERE",
      "tourney_name",
      "=",
      "'WTA",
      "Championships",
      "'",
      "AND",
      "winner_hand",
      "=",
      "'L",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "winner_name",
      ")",
      "from",
      "matches",
      "where",
      "tourney_name",
      "=",
      "value",
      "and",
      "winner_hand",
      "=",
      "value"
    ],
    "question": "How many different winners both participated in the WTA Championships and were left handed?",
    "question_toks": [
      "How",
      "many",
      "different",
      "winners",
      "both",
      "participated",
      "in",
      "the",
      "WTA",
      "Championships",
      "and",
      "were",
      "left",
      "handed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                34,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"WTA Championships\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          "\"L\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.first_name",
      ",",
      "T1.middle_name",
      ",",
      "T1.last_name",
      "FROM",
      "Students",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.student_id",
      "JOIN",
      "Degree_Programs",
      "AS",
      "T3",
      "ON",
      "T2.degree_program_id",
      "=",
      "T3.degree_program_id",
      "WHERE",
      "T3.degree_summary_name",
      "=",
      "'Bachelor",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "first_name",
      ",",
      "t1",
      ".",
      "middle_name",
      ",",
      "t1",
      ".",
      "last_name",
      "from",
      "students",
      "as",
      "t1",
      "join",
      "student_enrolment",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "student_id",
      "join",
      "degree_programs",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "degree_program_id",
      "=",
      "t3",
      ".",
      "degree_program_id",
      "where",
      "t3",
      ".",
      "degree_summary_name",
      "=",
      "value"
    ],
    "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      ",",
      "middle",
      ",",
      "and",
      "last",
      "names",
      "for",
      "everybody",
      "enrolled",
      "in",
      "a",
      "Bachelors",
      "program",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ],
            [
              0,
              47,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                45,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Bachelor\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "query_toks": [
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "WHERE",
      "T2.SourceAirport",
      "=",
      "``",
      "APG",
      "''",
      "INTERSECT",
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "WHERE",
      "T2.SourceAirport",
      "=",
      "``",
      "CVO",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "sourceairport",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "sourceairport",
      "=",
      "value"
    ],
    "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
    "question_toks": [
      "Find",
      "all",
      "airlines",
      "that",
      "have",
      "flights",
      "from",
      "both",
      "airports",
      "'APG",
      "'",
      "and",
      "'CVO",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"APG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            "\"CVO\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T2.transcript_date",
      ",",
      "T1.transcript_id",
      "FROM",
      "Transcript_Contents",
      "AS",
      "T1",
      "JOIN",
      "Transcripts",
      "AS",
      "T2",
      "ON",
      "T1.transcript_id",
      "=",
      "T2.transcript_id",
      "GROUP",
      "BY",
      "T1.transcript_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "transcript_date",
      ",",
      "t1",
      ".",
      "transcript_id",
      "from",
      "transcript_contents",
      "as",
      "t1",
      "join",
      "transcripts",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "transcript_id",
      "=",
      "t2",
      ".",
      "transcript_id",
      "group",
      "by",
      "t1",
      ".",
      "transcript_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "asc",
      "limit",
      "value"
    ],
    "question": "Show the date of the transcript which shows the least number of results, also list the id.",
    "question_toks": [
      "Show",
      "the",
      "date",
      "of",
      "the",
      "transcript",
      "which",
      "shows",
      "the",
      "least",
      "number",
      "of",
      "results",
      ",",
      "also",
      "list",
      "the",
      "id",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ],
          [
            "table_unit",
            9
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                56,
                false
              ],
              null
            ],
            [
              0,
              52,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                53,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                56,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          56,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "LifeExpectancy",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Name",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.Name",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T2.Language",
      "=",
      "``",
      "English",
      "''",
      "AND",
      "T2.IsOfficial",
      "=",
      "``",
      "T",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "lifeexpectancy",
      ")",
      "from",
      "country",
      "where",
      "name",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "name",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "language",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "isofficial",
      "=",
      "value",
      ")"
    ],
    "question": "Give the mean life expectancy of countries in which English is not the official language.",
    "question_toks": [
      "Give",
      "the",
      "mean",
      "life",
      "expectancy",
      "of",
      "countries",
      "in",
      "which",
      "English",
      "is",
      "not",
      "the",
      "official",
      "language",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ],
                [
                  "table_unit",
                  3
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    23,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    24,
                    false
                  ],
                  null
                ],
                "\"English\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    25,
                    false
                  ],
                  null
                ],
                "\"T\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "query_toks": [
      "SELECT",
      "Citizenship",
      "FROM",
      "singer",
      "WHERE",
      "Birth_Year",
      "<",
      "1945",
      "INTERSECT",
      "SELECT",
      "Citizenship",
      "FROM",
      "singer",
      "WHERE",
      "Birth_Year",
      ">",
      "1955"
    ],
    "query_toks_no_value": [
      "select",
      "citizenship",
      "from",
      "singer",
      "where",
      "birth_year",
      "<",
      "value",
      "intersect",
      "select",
      "citizenship",
      "from",
      "singer",
      "where",
      "birth_year",
      ">",
      "value"
    ],
    "question": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?",
    "question_toks": [
      "What",
      "are",
      "the",
      "citizenships",
      "that",
      "are",
      "shared",
      "by",
      "singers",
      "with",
      "a",
      "birth",
      "year",
      "before",
      "1945",
      "and",
      "after",
      "1955",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          1945.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            3,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            1955.0,
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t2.name",
      "FROM",
      "hiring",
      "AS",
      "t1",
      "JOIN",
      "shop",
      "AS",
      "t2",
      "ON",
      "t1.shop_id",
      "=",
      "t2.shop_id",
      "GROUP",
      "BY",
      "t2.name"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t2",
      ".",
      "name",
      "from",
      "hiring",
      "as",
      "t1",
      "join",
      "shop",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "shop_id",
      "=",
      "t2",
      ".",
      "shop_id",
      "group",
      "by",
      "t2",
      ".",
      "name"
    ],
    "question": "Find the number of employees hired in each shop; show the shop name as well.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "employees",
      "hired",
      "in",
      "each",
      "shop",
      ";",
      "show",
      "the",
      "shop",
      "name",
      "as",
      "well",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "query_toks": [
      "SELECT",
      "T2.name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "GROUP",
      "BY",
      "T1.stadium_id"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "group",
      "by",
      "t1",
      ".",
      "stadium_id"
    ],
    "question": "Show the stadium name and the number of concerts in each stadium.",
    "question_toks": [
      "Show",
      "the",
      "stadium",
      "name",
      "and",
      "the",
      "number",
      "of",
      "concerts",
      "in",
      "each",
      "stadium",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "max",
      "(",
      "Percentage",
      ")",
      "FROM",
      "countrylanguage",
      "WHERE",
      "LANGUAGE",
      "=",
      "``",
      "Spanish",
      "''",
      "GROUP",
      "BY",
      "CountryCode"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "max",
      "(",
      "percentage",
      ")",
      "from",
      "countrylanguage",
      "where",
      "language",
      "=",
      "value",
      "group",
      "by",
      "countrycode"
    ],
    "question": "Count the number of countries for which Spanish is the predominantly spoken language.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "countries",
      "for",
      "which",
      "Spanish",
      "is",
      "the",
      "predominantly",
      "spoken",
      "language",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Spanish\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          23,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "breed_code",
      ",",
      "size_code",
      "FROM",
      "dogs"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "breed_code",
      ",",
      "size_code",
      "from",
      "dogs"
    ],
    "question": "What are all the possible breed type and size type combinations?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "possible",
      "breed",
      "type",
      "and",
      "size",
      "type",
      "combinations",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.model",
      "FROM",
      "MODEL_LIST",
      "AS",
      "T1",
      "JOIN",
      "CAR_NAMES",
      "AS",
      "T2",
      "ON",
      "T1.Model",
      "=",
      "T2.Model",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T3",
      "ON",
      "T2.MakeId",
      "=",
      "T3.Id",
      "JOIN",
      "CAR_MAKERS",
      "AS",
      "T4",
      "ON",
      "T1.Maker",
      "=",
      "T4.Id",
      "WHERE",
      "T3.weight",
      "<",
      "3500",
      "AND",
      "T4.FullName",
      "!",
      "=",
      "'Ford",
      "Motor",
      "Company",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "model",
      "from",
      "model_list",
      "as",
      "t1",
      "join",
      "car_names",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "model",
      "=",
      "t2",
      ".",
      "model",
      "join",
      "cars_data",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "makeid",
      "=",
      "t3",
      ".",
      "id",
      "join",
      "car_makers",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "maker",
      "=",
      "t4",
      ".",
      "id",
      "where",
      "t3",
      ".",
      "weight",
      "<",
      "value",
      "and",
      "t4",
      ".",
      "fullname",
      "!",
      "=",
      "value"
    ],
    "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
    "question_toks": [
      "Which",
      "models",
      "are",
      "lighter",
      "than",
      "3500",
      "but",
      "not",
      "built",
      "by",
      "the",
      "'Ford",
      "Motor",
      "Company",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              14,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          3500.0,
          null
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Ford Motor Company\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "query_toks": [
      "SELECT",
      "course_description",
      "FROM",
      "Courses",
      "WHERE",
      "course_name",
      "=",
      "'math",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "course_description",
      "from",
      "courses",
      "where",
      "course_name",
      "=",
      "value"
    ],
    "question": "What are the descriptions for all the math courses?",
    "question_toks": [
      "What",
      "are",
      "the",
      "descriptions",
      "for",
      "all",
      "the",
      "math",
      "courses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"math\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "query_toks": [
      "SELECT",
      "T1.last_name",
      "FROM",
      "Owners",
      "AS",
      "T1",
      "JOIN",
      "Dogs",
      "AS",
      "T2",
      "ON",
      "T1.owner_id",
      "=",
      "T2.owner_id",
      "WHERE",
      "T2.age",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "Dogs",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "last_name",
      "from",
      "owners",
      "as",
      "t1",
      "join",
      "dogs",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "owner_id",
      "=",
      "t2",
      ".",
      "owner_id",
      "where",
      "t2",
      ".",
      "age",
      "=",
      "(",
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "dogs",
      ")"
    ],
    "question": "List the last name of the owner owning the youngest dog.",
    "question_toks": [
      "List",
      "the",
      "last",
      "name",
      "of",
      "the",
      "owner",
      "owning",
      "the",
      "youngest",
      "dog",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      26,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.first_name",
      ",",
      "T1.last_name",
      "FROM",
      "Professionals",
      "AS",
      "T1",
      "JOIN",
      "Treatments",
      "AS",
      "T2",
      "WHERE",
      "cost_of_treatment",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "cost_of_treatment",
      ")",
      "FROM",
      "Treatments",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "first_name",
      ",",
      "t1",
      ".",
      "last_name",
      "from",
      "professionals",
      "as",
      "t1",
      "join",
      "treatments",
      "as",
      "t2",
      "where",
      "cost_of_treatment",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "cost_of_treatment",
      ")",
      "from",
      "treatments",
      ")"
    ],
    "question": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.",
    "question_toks": [
      "Which",
      "professionals",
      "have",
      "operated",
      "a",
      "treatment",
      "that",
      "costs",
      "less",
      "than",
      "the",
      "average",
      "?",
      "Give",
      "me",
      "theor",
      "first",
      "names",
      "and",
      "last",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              49,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  7
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      49,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "FLIGHTS",
      "AS",
      "T1",
      "JOIN",
      "AIRPORTS",
      "AS",
      "T2",
      "ON",
      "T1.DestAirport",
      "=",
      "T2.AirportCode",
      "JOIN",
      "AIRLINES",
      "AS",
      "T3",
      "ON",
      "T3.uid",
      "=",
      "T1.Airline",
      "WHERE",
      "T2.City",
      "=",
      "``",
      "Aberdeen",
      "''",
      "AND",
      "T3.Airline",
      "=",
      "``",
      "United",
      "Airlines",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flights",
      "as",
      "t1",
      "join",
      "airports",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "destairport",
      "=",
      "t2",
      ".",
      "airportcode",
      "join",
      "airlines",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "uid",
      "=",
      "t1",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "airline",
      "=",
      "value"
    ],
    "question": "How many United Airlines flights go to City 'Aberdeen'?",
    "question_toks": [
      "How",
      "many",
      "United",
      "Airlines",
      "flights",
      "go",
      "to",
      "City",
      "'Aberdeen",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Aberdeen\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"United Airlines\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Departments",
      "AS",
      "T1",
      "JOIN",
      "Degree_Programs",
      "AS",
      "T2",
      "ON",
      "T1.department_id",
      "=",
      "T2.department_id",
      "WHERE",
      "T1.department_name",
      "=",
      "'engineer",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "departments",
      "as",
      "t1",
      "join",
      "degree_programs",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "department_id",
      "=",
      "t2",
      ".",
      "department_id",
      "where",
      "t1",
      ".",
      "department_name",
      "=",
      "value"
    ],
    "question": "How many degrees does the engineering department have?",
    "question_toks": [
      "How",
      "many",
      "degrees",
      "does",
      "the",
      "engineering",
      "department",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"engineer\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "battle_death",
    "query": "SELECT name ,  date FROM battle",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "date",
      "FROM",
      "battle"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "date",
      "from",
      "battle"
    ],
    "question": "List the name, date and result of each battle.",
    "question_toks": [
      "List",
      "the",
      "name",
      ",",
      "date",
      "and",
      "result",
      "of",
      "each",
      "battle",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "query_toks": [
      "SELECT",
      "other_student_details",
      "FROM",
      "Students",
      "ORDER",
      "BY",
      "other_student_details",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "other_student_details",
      "from",
      "students",
      "order",
      "by",
      "other_student_details",
      "desc"
    ],
    "question": "List all the student details in reversed lexicographical order.",
    "question_toks": [
      "List",
      "all",
      "the",
      "student",
      "details",
      "in",
      "reversed",
      "lexicographical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "query_toks": [
      "SELECT",
      "CountryCode",
      ",",
      "max",
      "(",
      "Percentage",
      ")",
      "FROM",
      "countrylanguage",
      "WHERE",
      "LANGUAGE",
      "=",
      "``",
      "Spanish",
      "''",
      "GROUP",
      "BY",
      "CountryCode"
    ],
    "query_toks_no_value": [
      "select",
      "countrycode",
      ",",
      "max",
      "(",
      "percentage",
      ")",
      "from",
      "countrylanguage",
      "where",
      "language",
      "=",
      "value",
      "group",
      "by",
      "countrycode"
    ],
    "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
    "question_toks": [
      "What",
      "are",
      "the",
      "codes",
      "of",
      "countries",
      "where",
      "Spanish",
      "is",
      "spoken",
      "by",
      "the",
      "largest",
      "percentage",
      "of",
      "people",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Spanish\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          23,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "query_toks": [
      "SELECT",
      "Maker",
      ",",
      "Model",
      "FROM",
      "MODEL_LIST",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "maker",
      ",",
      "model",
      "from",
      "model_list"
    ],
    "question": "What are the makers and models?",
    "question_toks": [
      "What",
      "are",
      "the",
      "makers",
      "and",
      "models",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t2.visitor_id",
      ",",
      "t1.name",
      ",",
      "t1.Level_of_membership",
      "FROM",
      "visitor",
      "AS",
      "t1",
      "JOIN",
      "visit",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.visitor_id",
      "GROUP",
      "BY",
      "t2.visitor_id",
      "ORDER",
      "BY",
      "sum",
      "(",
      "t2.Total_spent",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "visitor_id",
      ",",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "level_of_membership",
      "from",
      "visitor",
      "as",
      "t1",
      "join",
      "visit",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "visitor_id",
      "group",
      "by",
      "t2",
      ".",
      "visitor_id",
      "order",
      "by",
      "sum",
      "(",
      "t2",
      ".",
      "total_spent",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
    "question_toks": [
      "What",
      "are",
      "the",
      "id",
      ",",
      "name",
      "and",
      "membership",
      "level",
      "of",
      "visitors",
      "who",
      "have",
      "spent",
      "the",
      "largest",
      "amount",
      "of",
      "money",
      "in",
      "total",
      "in",
      "all",
      "museum",
      "tickets",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              4,
              12,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT DISTINCT template_type_code FROM Templates",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "template_type_code",
      "FROM",
      "Templates"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "template_type_code",
      "from",
      "templates"
    ],
    "question": "What are the different template type codes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "template",
      "type",
      "codes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "hiring",
      "AS",
      "t1",
      "JOIN",
      "shop",
      "AS",
      "t2",
      "ON",
      "t1.shop_id",
      "=",
      "t2.shop_id",
      "GROUP",
      "BY",
      "t1.shop_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "hiring",
      "as",
      "t1",
      "join",
      "shop",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "shop_id",
      "=",
      "t2",
      ".",
      "shop_id",
      "group",
      "by",
      "t1",
      ".",
      "shop_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which shop has the most employees? Give me the shop name.",
    "question_toks": [
      "Which",
      "shop",
      "has",
      "the",
      "most",
      "employees",
      "?",
      "Give",
      "me",
      "the",
      "shop",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Continent",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "GROUP",
      "BY",
      "T1.Continent",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "continent",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "group",
      "by",
      "t1",
      ".",
      "continent",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which continent speaks the most languages?",
    "question_toks": [
      "Which",
      "continent",
      "speaks",
      "the",
      "most",
      "languages",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "query_toks": [
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "GROUP",
      "BY",
      "T1.Airline",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "group",
      "by",
      "t1",
      ".",
      "airline",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which airlines have at least 10 flights?",
    "question_toks": [
      "Which",
      "airlines",
      "have",
      "at",
      "least",
      "10",
      "flights",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t2.Museum_ID",
      ",",
      "t1.name",
      "FROM",
      "museum",
      "AS",
      "t1",
      "JOIN",
      "visit",
      "AS",
      "t2",
      "ON",
      "t1.Museum_ID",
      "=",
      "t2.Museum_ID",
      "GROUP",
      "BY",
      "t2.Museum_ID",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "museum_id",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "museum",
      "as",
      "t1",
      "join",
      "visit",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "museum_id",
      "=",
      "t2",
      ".",
      "museum_id",
      "group",
      "by",
      "t2",
      ".",
      "museum_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the id and name of the museum visited most times?",
    "question_toks": [
      "What",
      "are",
      "the",
      "id",
      "and",
      "name",
      "of",
      "the",
      "museum",
      "visited",
      "most",
      "times",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.owner_id",
      ",",
      "T1.last_name",
      "FROM",
      "Owners",
      "AS",
      "T1",
      "JOIN",
      "Dogs",
      "AS",
      "T2",
      "ON",
      "T1.owner_id",
      "=",
      "T2.owner_id",
      "JOIN",
      "Treatments",
      "AS",
      "T3",
      "ON",
      "T2.dog_id",
      "=",
      "T3.dog_id",
      "GROUP",
      "BY",
      "T1.owner_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "owner_id",
      ",",
      "t1",
      ".",
      "last_name",
      "from",
      "owners",
      "as",
      "t1",
      "join",
      "dogs",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "owner_id",
      "=",
      "t2",
      ".",
      "owner_id",
      "join",
      "treatments",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "dog_id",
      "=",
      "t3",
      ".",
      "dog_id",
      "group",
      "by",
      "t1",
      ".",
      "owner_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.",
    "question_toks": [
      "Which",
      "owner",
      "has",
      "paid",
      "for",
      "the",
      "most",
      "treatments",
      "on",
      "his",
      "or",
      "her",
      "dogs",
      "?",
      "List",
      "the",
      "owner",
      "id",
      "and",
      "last",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              45,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "TV_Channel",
      "EXCEPT",
      "SELECT",
      "T1.country",
      "FROM",
      "TV_Channel",
      "AS",
      "T1",
      "JOIN",
      "cartoon",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.Channel",
      "WHERE",
      "T2.written_by",
      "=",
      "'Todd",
      "Casey",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "tv_channel",
      "except",
      "select",
      "t1",
      ".",
      "country",
      "from",
      "tv_channel",
      "as",
      "t1",
      "join",
      "cartoon",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "channel",
      "where",
      "t2",
      ".",
      "written_by",
      "=",
      "value"
    ],
    "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
    "question_toks": [
      "which",
      "countries",
      "'",
      "tv",
      "channels",
      "are",
      "not",
      "playing",
      "any",
      "cartoon",
      "written",
      "by",
      "Todd",
      "Casey",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            "\"Todd Casey\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "Version_Number",
      ")",
      ",",
      "template_type_code",
      "FROM",
      "Templates"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "version_number",
      ")",
      ",",
      "template_type_code",
      "from",
      "templates"
    ],
    "question": "What the smallest version number and its template type code?",
    "question_toks": [
      "What",
      "the",
      "smallest",
      "version",
      "number",
      "and",
      "its",
      "template",
      "type",
      "code",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T2.Airline",
      "=",
      "T1.uid",
      "WHERE",
      "T1.Airline",
      "=",
      "``",
      "United",
      "Airlines",
      "''",
      "AND",
      "T2.SourceAirport",
      "=",
      "``",
      "AHD",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "airline",
      "=",
      "t1",
      ".",
      "uid",
      "where",
      "t1",
      ".",
      "airline",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "sourceairport",
      "=",
      "value"
    ],
    "question": "Return the number of United Airlines flights leaving from AHD Airport.",
    "question_toks": [
      "Return",
      "the",
      "number",
      "of",
      "United",
      "Airlines",
      "flights",
      "leaving",
      "from",
      "AHD",
      "Airport",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"United Airlines\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"AHD\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "ranking",
      ")",
      ",",
      "T1.first_name",
      "FROM",
      "players",
      "AS",
      "T1",
      "JOIN",
      "rankings",
      "AS",
      "T2",
      "ON",
      "T1.player_id",
      "=",
      "T2.player_id",
      "GROUP",
      "BY",
      "T1.first_name"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "ranking",
      ")",
      ",",
      "t1",
      ".",
      "first_name",
      "from",
      "players",
      "as",
      "t1",
      "join",
      "rankings",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "player_id",
      "=",
      "t2",
      ".",
      "player_id",
      "group",
      "by",
      "t1",
      ".",
      "first_name"
    ],
    "question": "What are the first names of all players, and their average rankings?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "all",
      "players",
      ",",
      "and",
      "their",
      "average",
      "rankings",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              41,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "query_toks": [
      "SELECT",
      "T1.Name",
      "FROM",
      "conductor",
      "AS",
      "T1",
      "JOIN",
      "orchestra",
      "AS",
      "T2",
      "ON",
      "T1.Conductor_ID",
      "=",
      "T2.Conductor_ID",
      "GROUP",
      "BY",
      "T2.Conductor_ID",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "conductor",
      "as",
      "t1",
      "join",
      "orchestra",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "conductor_id",
      "=",
      "t2",
      ".",
      "conductor_id",
      "group",
      "by",
      "t2",
      ".",
      "conductor_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Show the names of conductors that have conducted more than one orchestras.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "conductors",
      "that",
      "have",
      "conducted",
      "more",
      "than",
      "one",
      "orchestras",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "query_toks": [
      "SELECT",
      "T2.name",
      ",",
      "T2.location",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "WHERE",
      "T1.Year",
      "=",
      "2014",
      "INTERSECT",
      "SELECT",
      "T2.name",
      ",",
      "T2.location",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "WHERE",
      "T1.Year",
      "=",
      "2015"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "location",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "intersect",
      "select",
      "t2",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "location",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "locations",
      "of",
      "the",
      "stadiums",
      "that",
      "had",
      "concerts",
      "that",
      "occurred",
      "in",
      "both",
      "2014",
      "and",
      "2015",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              0
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  18,
                  false
                ],
                null
              ],
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            2015.0,
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "query_toks": [
      "SELECT",
      "CountryName",
      "FROM",
      "countries",
      "EXCEPT",
      "SELECT",
      "T1.CountryName",
      "FROM",
      "countries",
      "AS",
      "T1",
      "JOIN",
      "CAR_MAKERS",
      "AS",
      "T2",
      "ON",
      "T1.countryId",
      "=",
      "T2.Country",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "countryname",
      "from",
      "countries",
      "except",
      "select",
      "t1",
      ".",
      "countryname",
      "from",
      "countries",
      "as",
      "t1",
      "join",
      "car_makers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "countryid",
      "=",
      "t2",
      ".",
      "country"
    ],
    "question": "What are the names of the countries with no car makers?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "countries",
      "with",
      "no",
      "car",
      "makers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ],
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  4,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  }
]