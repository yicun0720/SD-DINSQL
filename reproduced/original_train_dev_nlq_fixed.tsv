0	SELECT COUNT(*) FROM singer
1	SELECT COUNT(*) FROM singer
2	SELECT Name, Country, Age FROM singer ORDER BY Age DESC, Singer_ID
3	SELECT Name, Country, Age FROM singer ORDER BY Age DESC, Singer_ID ASC
4	SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'
5	SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'French'
6	SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT min(Age) FROM singer)
7	SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)
8	SELECT DISTINCT Country FROM singer WHERE Age > 20
9	SELECT DISTINCT Country FROM singer WHERE Age > 20
10	SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
11	SELECT Country, COUNT(*) FROM singer GROUP BY Country
12	SELECT DISTINCT Song_Name FROM singer WHERE Age > (SELECT avg(Age) FROM singer)
13	SELECT DISTINCT Song_Name FROM singer WHERE Age > (SELECT avg(Age) FROM singer)
14	SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
15	SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
16	SELECT MAX(Capacity), AVG(Average) FROM stadium
17	SELECT MAX(Capacity), AVG(Capacity) FROM stadium
18	SELECT Name, Capacity FROM stadium WHERE Average = (SELECT max(Average) FROM stadium) ORDER BY Stadium_ID ASC LIMIT 1
19	SELECT Name, Capacity FROM stadium WHERE Average = (SELECT max(Average) FROM stadium)
20	SELECT COUNT(*) FROM concert WHERE Year = 2014 OR Year = 2015
21	SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015)
22	SELECT T1.Name, COUNT(T2.concert_ID) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name
23	SELECT Stadium_ID, COUNT(concert_ID) FROM concert GROUP BY Stadium_ID
24	SELECT T2.Name, T2.Capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year >= 2014 GROUP BY T1.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1
25	SELECT T1.Name, T1.Capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year > 2013 GROUP BY T1.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1
26	SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
27	SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
28	SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)
29	SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)
30	SELECT Country FROM singer WHERE Age > 40 INTERSECT SELECT Country FROM singer WHERE Age < 30
31	SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)
32	SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)
33	SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID, T1.concert_Name, T1.Theme
34	SELECT concert_Name, Theme, COUNT(Singer_ID) AS number_of_singers FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID, concert_Name, Theme
35	SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
36	SELECT T1.Name, COUNT(DISTINCT T2.concert_ID) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
37	SELECT DISTINCT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Year = 2014
38	SELECT DISTINCT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Year = 2014
39	SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
40	SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
41	SELECT Name, Location FROM stadium WHERE Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year = 2014) AND Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year = 2015)
42	SELECT Name, Location FROM stadium WHERE Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year = 2014) INTERSECT SELECT Stadium_ID FROM concert WHERE Year = 2015
43	SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
44	SELECT COUNT(*) FROM concert WHERE Stadium_ID IN (SELECT Stadium_ID FROM stadium WHERE Capacity = (SELECT MAX(Capacity) FROM stadium))
45	SELECT COUNT(*) FROM Pets WHERE weight > 10
46	SELECT COUNT(*) FROM Pets WHERE weight > 10
47	SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
48	SELECT weight FROM Pets WHERE pet_age = (SELECT min(pet_age) FROM Pets WHERE PetType = 'dog') AND PetType = 'dog'
49	SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
50	SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
51	SELECT COUNT(T1.PetID) FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20
52	SELECT COUNT(DISTINCT T1.PetID) FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20
53	SELECT COUNT(*) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Pets.PetType = 'dog' AND Student.Sex = 'F'
54	SELECT COUNT(*) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Pets.PetType = 'dog' AND Student.Sex = 'female'
55	SELECT COUNT(DISTINCT PetType) FROM Pet
56	SELECT COUNT(DISTINCT PetType) FROM Pet
57	SELECT DISTINCT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
58	SELECT DISTINCT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' OR T3.PetType = 'dog'
59	SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat') AND StuID IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'dog')
60	SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat') AND StuID IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'dog')
61	SELECT Major, Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat')
62	SELECT Major, Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat')
63	SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat')
64	SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat')
65	SELECT Fname, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'dog') AND StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat')
66	SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'dog') AND StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat')
67	SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
68	SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
69	SELECT PetID, weight FROM Pets WHERE pet_age > 1
70	SELECT PetID, weight FROM Pets WHERE pet_age > 1
71	SELECT PetType, AVG(pet_age) AS Average_Age, MAX(pet_age) AS Max_Age FROM Pets GROUP BY PetType
72	SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS max_age FROM Pets GROUP BY PetType
73	SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
74	SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
75	SELECT Fname, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
76	SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
77	SELECT Pets.PetID FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.LName = 'Smith'
78	SELECT T2.PetID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.LName = 'Smith'
79	SELECT StuID, COUNT(PetID) AS NumberOfPets FROM Has_Pet GROUP BY StuID
80	SELECT T1.StuID, COUNT(T2.PetID) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID
81	SELECT Fname, Sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING COUNT(PetID) > 1)
82	SELECT Fname, Sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING COUNT(PetID) > 1)
83	SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3
84	SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3
85	SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
86	SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
87	SELECT COUNT(DISTINCT Continent) FROM continent
88	SELECT COUNT(DISTINCT Continent) FROM continent
89	SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
90	SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
91	SELECT COUNT(*) FROM countrie
92	SELECT COUNT(*) FROM countrie
93	SELECT T1.FullName, T1.Id, COUNT(T2.Model) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
94	SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.ModelId) AS NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName
95	SELECT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id ORDER BY T2.Horsepower ASC LIMIT 1
96	SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Horsepower = (SELECT min(Horsepower) FROM cars_data))
97	SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Weight < (SELECT avg(Weight) FROM cars_data))
98	SELECT MakeId FROM car_names WHERE Id IN (SELECT Id FROM cars_data WHERE Weight < (SELECT avg(Weight) FROM cars_data))
99	SELECT DISTINCT T1.FullName FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T3.Year = 1970
100	SELECT DISTINCT T1.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker JOIN car_names AS T3 ON T2.Model = T3.Model JOIN cars_data AS T4 ON T3.MakeId = T4.Id WHERE T4.Year = 1970
101	SELECT T1.Make, T2.Year FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Year = (SELECT min(Year) FROM cars_data)
102	SELECT T1.FullName, MIN(T3.Year) FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN cars_data AS T3 ON T2.MakeId = T3.Id
103	SELECT DISTINCT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Year > 1980
104	SELECT DISTINCT T1.ModelId, T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T3.Year > 1980
105	SELECT T1.Continent, COUNT(DISTINCT T2.Id) FROM continents AS T1 JOIN countries AS T3 ON T1.ContId = T3.Continent JOIN car_makers AS T2 ON T3.CountryId = T2.Country GROUP BY T1.Continent
106	SELECT T3.Continent, COUNT(T1.Id) FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId JOIN continents AS T3 ON T2.Continent = T3.ContId GROUP BY T3.Continent
107	SELECT T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName HAVING COUNT(T1.Id) = (SELECT MAX(car_count) FROM (SELECT COUNT(Id) AS car_count FROM car_makers GROUP BY Country) AS subquery)
108	SELECT T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T1.Country HAVING COUNT(T1.Id) = (SELECT MAX(MakerCount) FROM (SELECT COUNT(Id) AS MakerCount FROM car_makers GROUP BY Country) AS SubQuery)
109	SELECT COUNT(T1.Model), T2.FullName FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.FullName
110	SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName
111	SELECT T1.Accelerate FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'amc hornet sportabout (sw)'
112	SELECT Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Model = 'amc hornet sportabout (sw)'
113	SELECT COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France'
114	SELECT COUNT(DISTINCT T1.Id) FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'France'
115	SELECT COUNT(DISTINCT T1.Model) FROM car_names AS T1 JOIN car_makers AS T2 ON T1.MakeId = T2.Id WHERE T2.Country = 'USA'
116	SELECT COUNT(DISTINCT T1.Model) FROM car_names AS T1 JOIN car_makers AS T2 ON T1.MakeId = T2.Id WHERE T2.FullName = 'usa'
117	SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4
118	SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4
119	SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = '1974'
120	SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974
121	SELECT T1.FullName, T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker
122	SELECT T1.FullName, T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker
123	SELECT DISTINCT T1.CountryName, T1.CountryId FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country
124	SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE EXISTS (SELECT 1 FROM car_makers WHERE Country = T1.CountryId)
125	SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150
126	SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150
127	SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
128	SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
129	SELECT T1.CountryName FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId JOIN car_makers AS T3 ON T1.CountryId = T3.Country WHERE T2.Continent = 'Europe' GROUP BY T1.CountryName HAVING COUNT(T3.Id) >= 3
130	SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName HAVING COUNT(T2.Id) >= 3 AND T1.Continent = 'Europe'
131	SELECT MAX(T1.Horsepower), T2.Make FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3
132	SELECT MAX(T1.Horsepower), T2.Make FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 GROUP BY T2.Make ORDER BY MAX(T1.Horsepower) DESC LIMIT 1
133	SELECT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id ORDER BY T2.MPG DESC LIMIT 1
134	SELECT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id ORDER BY T2.MPG DESC LIMIT 1
135	SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980
136	SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980
137	SELECT AVG(T1.Edispl) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'Volvo'
138	SELECT AVG(T1.Edispl) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model JOIN car_makers AS T4 ON T3.Maker = T4.Id WHERE T4.FullName = 'Volvo'
139	SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinder
140	SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinder
141	SELECT T1.ModelId FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model GROUP BY T1.ModelId ORDER BY COUNT(DISTINCT T2.MakeId) DESC LIMIT 1
142	SELECT MakeId FROM car_names GROUP BY MakeId ORDER BY COUNT(*) DESC LIMIT 1
143	SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4
144	SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4
145	SELECT COUNT(*) FROM cars_data WHERE Year = 1980
146	SELECT COUNT(*) FROM cars_data WHERE Year = 1980
147	SELECT COUNT(*) FROM car_names JOIN car_makers ON car_names.MakeId = car_makers.Id WHERE car_makers.FullName = 'American Motor Company'
148	SELECT COUNT(T1.Model) FROM car_names AS T1 JOIN car_makers AS T2 ON T1.MakeId = T2.Id WHERE T2.FullName = 'American Motor Company'
149	SELECT T1.FullName, T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.Model) > 3
150	SELECT T1.Id, T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.Maker HAVING COUNT(T2.Model) > 3
151	SELECT DISTINCT T1.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.MakeId = T2.ModelId JOIN car_makers AS T3 ON T2.Maker = T3.Id JOIN cars_data AS T4 ON T1.MakeId = T4.Id WHERE T3.FullName = 'General Motors' OR T4.Weight > 3500
152	SELECT DISTINCT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id JOIN model_list AS T3 ON T1.MakeId = T3.ModelId JOIN car_makers AS T4 ON T3.Maker = T4.Id WHERE T4.Maker = 'General Motors' OR T2.Weight > 3500
153	SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000
154	SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 INTERSECT SELECT DISTINCT Year FROM cars_data WHERE Weight > 3000
155	SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1
156	SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
157	SELECT Cylinders FROM cars_data WHERE Accelerate = (SELECT min(Accelerate) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'Volvo') AND Id IN (SELECT MakeId FROM car_names WHERE Model = 'Volvo')
158	SELECT Cylinders FROM cars_data WHERE Id IN (SELECT Id FROM cars_data WHERE Accelerate = (SELECT min(Accelerate) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'Volvo'))
159	SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT max(Horsepower) FROM cars_data)
160	SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT max(Horsepower) FROM cars_data)
161	SELECT COUNT(*) FROM (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(Id) > 2) AS subquery
162	SELECT COUNT(DISTINCT CountryId) FROM car_makers GROUP BY CountryId HAVING COUNT(*) > 2
163	SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6
164	SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6
165	SELECT T2.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 ORDER BY T1.Horsepower DESC LIMIT 1
166	SELECT T2.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 ORDER BY T1.Horsepower DESC LIMIT 1
167	SELECT T2.MakeId, T3.Maker FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN car_makers AS T3 ON T2.MakeId = T3.Id WHERE T1.Horsepower > (SELECT min(Horsepower) FROM cars_data) AND T1.Cylinders <= 3
168	SELECT T1.MakeId, T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Horsepower > (SELECT min(Horsepower) FROM cars_data) AND T2.Cylinders < 4
169	SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
170	SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
171	SELECT ModelId FROM model_list WHERE ModelId IN (SELECT Id FROM cars_data WHERE Weight < 3500) AND Maker NOT IN (SELECT Id FROM car_makers WHERE FullName = 'Ford Motor Company')
172	SELECT DISTINCT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Weight < 3500) AND MakeId NOT IN (SELECT ModelId FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE Maker = 'Ford Motor Company'))
173	SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers)
174	SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers)
175	SELECT T1.Id, T1.Maker FROM car_makers AS T1 JOIN model_list AS T3 ON T1.Id = T3.Maker JOIN car_names AS T2 ON T3.Model = T2.Model GROUP BY T1.Id, T1.Maker HAVING COUNT(DISTINCT T3.Model) >= 2 AND COUNT(T2.Model) > 3
176	SELECT T1.Id, T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker JOIN car_names AS T3 ON T2.ModelId = T3.MakeId JOIN cars_data AS T4 ON T3.MakeId = T4.Id GROUP BY T1.Id, T1.Maker HAVING COUNT(DISTINCT T2.ModelId) >= 2 AND COUNT(DISTINCT T4.Id) > 3
177	SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers WHERE Id IN (SELECT Maker FROM model_list WHERE Model = 'fiat')) OR CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3)
178	SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3) OR CountryId IN (SELECT Country FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Model = 'Fiat')
179	SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways'
180	SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways'
181	SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways'
182	SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways'
183	SELECT DISTINCT Airline, Abbreviation FROM airlines WHERE Country = 'USA'
184	SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA'
185	SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'
186	SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'
187	SELECT COUNT(*) FROM airline
188	SELECT COUNT(*) FROM airline
189	SELECT COUNT(*) FROM airport
190	SELECT COUNT(*) FROM airport
191	SELECT COUNT(*) FROM flight
192	SELECT COUNT(*) FROM flight
193	SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'
194	SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'
195	SELECT COUNT(*) FROM airlines WHERE Country = 'USA'
196	SELECT COUNT(*) FROM airlines WHERE Country = 'USA'
197	SELECT City, Country FROM airports WHERE AirportName = 'Alton'
198	SELECT City, Country FROM airports WHERE AirportName = 'Alton'
199	SELECT AirportName FROM airports WHERE AirportCode = 'AKO'
200	SELECT AirportName FROM airports WHERE AirportCode = 'AKO'
201	SELECT DISTINCT AirportName FROM airports WHERE City = 'Aberdeen'
202	SELECT AirportName FROM airports WHERE City = 'Aberdeen'
203	SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG'
204	SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG'
205	SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO'
206	SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO'
207	SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
208	SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
209	SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
210	SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportName = 'Aberdeen'
211	SELECT COUNT(*) FROM flights JOIN airports AS source ON flights.SourceAirport = source.AirportCode JOIN airports AS dest ON flights.DestAirport = dest.AirportCode WHERE source.City = 'Aberdeen' AND dest.City = 'Ashley'
212	SELECT COUNT(*) FROM flights WHERE SourceAirport = 'Aberdeen' AND DestAirport = 'Ashley'
213	SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = 'JetBlue Airways'
214	SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = 'Jetblue Airways'
215	SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.AirportCode = 'ASY'
216	SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.AirportCode = 'ASY'
217	SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = 'United Airlines' AND flights.SourceAirport = 'AHD'
218	SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.AirportCode = 'AHD'
219	SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen'
220	SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen'
221	SELECT City FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City HAVING COUNT(*) = (SELECT MAX(CountFlights) FROM (SELECT COUNT(*) AS CountFlights FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City) AS SubQuery)
222	SELECT T1.City FROM airports AS T1 JOIN (SELECT DestAirport, COUNT(*) AS frequency FROM flights GROUP BY DestAirport) AS T2 ON T1.AirportCode = T2.DestAirport ORDER BY T2.frequency DESC LIMIT 1
223	SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport GROUP BY T1.City ORDER BY COUNT(*) DESC LIMIT 1
224	SELECT City FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY City HAVING COUNT(*) = (SELECT MAX(frequency) FROM (SELECT COUNT(*) AS frequency FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY City) AS subquery)
225	SELECT AirportCode FROM (SELECT AirportCode, COUNT(*) AS TotalFlights FROM (SELECT SourceAirport AS AirportCode FROM flights UNION ALL SELECT DestAirport AS AirportCode FROM flights) AS Combined GROUP BY AirportCode) AS Result WHERE TotalFlights = (SELECT MAX(TotalFlights) FROM (SELECT AirportCode, COUNT(*) AS TotalFlights FROM (SELECT SourceAirport AS AirportCode FROM flights UNION ALL SELECT DestAirport AS AirportCode FROM flights) AS Combined GROUP BY AirportCode) AS MaxResult)
226	SELECT AirportCode FROM (SELECT AirportCode, COUNT(*) AS TotalFlights FROM (SELECT SourceAirport AS AirportCode FROM flights UNION ALL SELECT DestAirport AS AirportCode FROM flights) AS Combined GROUP BY AirportCode) AS Result WHERE TotalFlights = (SELECT MAX(TotalFlights) FROM (SELECT AirportCode, COUNT(*) AS TotalFlights FROM (SELECT SourceAirport AS AirportCode FROM flights UNION ALL SELECT DestAirport AS AirportCode FROM flights) AS Combined GROUP BY AirportCode) AS MaxFlights)
227	SELECT AirportCode FROM (SELECT AirportCode, COUNT(*) AS TotalFlights FROM (SELECT SourceAirport AS AirportCode FROM flights UNION ALL SELECT DestAirport AS AirportCode FROM flights) AS Combined GROUP BY AirportCode) AS FlightCounts WHERE TotalFlights = (SELECT MIN(TotalFlights) FROM (SELECT AirportCode, COUNT(*) AS TotalFlights FROM (SELECT SourceAirport AS AirportCode FROM flights UNION ALL SELECT DestAirport AS AirportCode FROM flights) AS Combined GROUP BY AirportCode) AS MinFlights)
228	SELECT AirportCode FROM (SELECT AirportCode, COUNT(*) AS TotalFlights FROM (SELECT SourceAirport AS AirportCode FROM flights UNION ALL SELECT DestAirport AS AirportCode FROM flights) AS Combined GROUP BY AirportCode) AS Result WHERE TotalFlights = (SELECT MIN(TotalFlights) FROM (SELECT AirportCode, COUNT(*) AS TotalFlights FROM (SELECT SourceAirport AS AirportCode FROM flights UNION ALL SELECT DestAirport AS AirportCode FROM flights) AS Combined GROUP BY AirportCode) AS MinFlights)
229	SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING COUNT(*) = (SELECT MAX(FlightCount) FROM (SELECT COUNT(*) AS FlightCount FROM flights GROUP BY Airline) AS SubQuery)
230	SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING COUNT(*) = (SELECT MAX(Cnt) FROM (SELECT COUNT(*) AS Cnt FROM flights GROUP BY Airline) AS SubQuery)
231	SELECT T1.Abbreviation, T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.uid, T1.Abbreviation, T1.Country HAVING COUNT(*) = (SELECT MIN(FlightCount) FROM (SELECT COUNT(*) AS FlightCount FROM flights GROUP BY Airline) AS SubQuery)
232	SELECT A.Abbreviation, A.Country FROM airlines A JOIN flights F ON A.uid = F.Airline GROUP BY A.uid, A.Abbreviation, A.Country HAVING COUNT(F.FlightNo) = (SELECT MIN(FlightCount) FROM (SELECT COUNT(*) AS FlightCount FROM flights GROUP BY Airline) AS SubQuery)
233	SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = 'AHD'
234	SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = 'AHD'
235	SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = 'AHD'
236	SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = 'AHD'
237	SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights WHERE SourceAirport = 'APG') INTERSECT SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights WHERE SourceAirport = 'CVO')
238	SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights WHERE SourceAirport = 'APG') INTERSECT SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights WHERE SourceAirport = 'CVO')
239	SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights WHERE SourceAirport = 'CVO') AND uid NOT IN (SELECT Airline FROM flights WHERE SourceAirport = 'APG')
240	SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights WHERE SourceAirport = 'CVO') AND uid NOT IN (SELECT Airline FROM flights WHERE SourceAirport = 'APG')
241	SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING COUNT(*) >= 10
242	SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING COUNT(*) >= 10
243	SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING COUNT(*) < 200
244	SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING COUNT(*) < 200
245	SELECT DISTINCT FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = 'United Airlines'
246	SELECT FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = 'United Airlines'
247	SELECT FlightNo FROM flights WHERE SourceAirport = 'APG'
248	SELECT FlightNo FROM flights WHERE SourceAirport = 'APG'
249	SELECT FlightNo FROM flights WHERE DestAirport = 'APG'
250	SELECT FlightNo FROM flights WHERE DestAirport = 'APG'
251	SELECT DISTINCT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
252	SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
253	SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE City = 'Aberdeen'
254	SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportName = 'Aberdeen'
255	SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen' OR airports.City = 'Abilene'
256	SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportName = 'Aberdeen' OR airports.AirportName = 'Abilene'
257	SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights)
258	SELECT AirportCode FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights)
259	SELECT COUNT(*) FROM employee
260	SELECT COUNT(*) FROM employee
261	SELECT Name FROM employee ORDER BY Age, Employee_ID
262	SELECT Name FROM employee ORDER BY Age, Name
263	SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City
264	SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City
265	SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
266	SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
267	SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location
268	SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location
269	SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT max(Number_products) FROM shop)
270	SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT max(Number_products) FROM shop)
271	SELECT MIN(Number_products), MAX(Number_products) FROM shop
272	SELECT MIN(Number_products), MAX(Number_products) FROM shop
273	SELECT Name, Location, District FROM shop ORDER BY Number_products DESC, Shop_ID ASC
274	SELECT Name, Location, District FROM shop ORDER BY Number_products DESC, Shop_ID ASC
275	SELECT Name FROM shop WHERE Number_products > (SELECT avg(Number_products) FROM shop)
276	SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
277	SELECT Name FROM employee WHERE Employee_ID IN (SELECT Employee_ID FROM evaluation GROUP BY Employee_ID HAVING COUNT(*) = (SELECT MAX(awards_count) FROM (SELECT COUNT(*) AS awards_count FROM evaluation GROUP BY Employee_ID) AS subquery))
278	SELECT E.Name FROM employee E JOIN (SELECT Employee_ID, COUNT(*) AS AwardsCount FROM evaluation GROUP BY Employee_ID) AS A ON E.Employee_ID = A.Employee_ID WHERE A.AwardsCount = (SELECT MAX(AwardsCount) FROM (SELECT COUNT(*) AS AwardsCount FROM evaluation GROUP BY Employee_ID) AS Sub)
279	SELECT Name FROM employee WHERE Employee_ID IN (SELECT Employee_ID FROM evaluation WHERE Bonus = (SELECT max(Bonus) FROM evaluation))
280	SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID ORDER BY T2.Bonus DESC LIMIT 1
281	SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
282	SELECT Name, Employee_ID FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
283	SELECT Name FROM shop WHERE Shop_ID IN (SELECT Shop_ID FROM hiring GROUP BY Shop_ID HAVING COUNT(Employee_ID) = (SELECT MAX(num_employees) FROM (SELECT COUNT(Employee_ID) AS num_employees FROM hiring GROUP BY Shop_ID) AS subquery))
284	SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Name ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1
285	SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)
286	SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)
287	SELECT T1.Name, COUNT(T2.Employee_ID) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Name
288	SELECT S.Name, COUNT(H.Employee_ID) FROM shop S LEFT JOIN hiring H ON S.Shop_ID = H.Shop_ID GROUP BY S.Name
289	SELECT SUM(Bonus) FROM evaluation
290	SELECT SUM(Bonus) FROM evaluation
291	SELECT * FROM hiring
292	SELECT * FROM hiring
293	SELECT District FROM shop WHERE District IN (SELECT District FROM shop WHERE Number_products < 3000) AND District IN (SELECT District FROM shop WHERE Number_products > 10000)
294	SELECT District FROM shop WHERE District IN (SELECT District FROM shop WHERE Number_products < 3000) AND District IN (SELECT District FROM shop WHERE Number_products > 10000)
295	SELECT COUNT(DISTINCT Location) FROM shop
296	SELECT COUNT(DISTINCT Location) FROM shop
297	SELECT COUNT(*) FROM Document
298	SELECT COUNT(*) FROM Document
299	SELECT Document_ID, Document_Name, Document_Description FROM Document
300	SELECT Document_ID, Document_Name, Document_Description FROM Document
301	SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
302	SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
303	SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
304	SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
305	SELECT COUNT(DISTINCT Template_ID) FROM Document
306	SELECT COUNT(DISTINCT Template_ID) FROM Document
307	SELECT COUNT(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'PPT'
308	SELECT COUNT(*) FROM Documents AS D JOIN Templates AS T ON D.Template_ID = T.Template_ID JOIN Ref_Template_Types AS RTT ON T.Template_Type_Code = RTT.Template_Type_Code WHERE RTT.Template_Type_Description = 'PPT'
309	SELECT T1.Template_ID, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID
310	SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID
311	SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T1.Template_Type_Code HAVING COUNT(*) = (SELECT MAX(count) FROM (SELECT COUNT(*) AS count FROM Documents GROUP BY Template_ID) AS subquery)
312	SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 WHERE T1.Template_ID IN (SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(*) = (SELECT MAX(doc_count) FROM (SELECT COUNT(*) AS doc_count FROM Documents GROUP BY Template_ID) AS subquery))
313	SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(*) > 1
314	SELECT T1.Template_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(DISTINCT T2.Document_ID) > 1
315	SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
316	SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
317	SELECT COUNT(*) FROM Template
318	SELECT COUNT(*) FROM Template
319	SELECT Template_ID, Version_Number, Template_Type_Code FROM Template
320	SELECT Template_ID, Version_Number, Template_Type_Code FROM Template
321	SELECT DISTINCT Template_Type_Code FROM Template
322	SELECT DISTINCT Template_Type_Code FROM Ref_Template_Type
323	SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
324	SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
325	SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV'
326	SELECT COUNT(*) FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'CV'
327	SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
328	SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
329	SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code
330	SELECT T1.Template_Type_Code, COUNT(T1.Template_ID) FROM Templates AS T1 GROUP BY T1.Template_Type_Code
331	SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*) = (SELECT MAX(count) FROM (SELECT COUNT(*) AS count FROM Templates GROUP BY Template_Type_Code) AS counts)
332	SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*) = (SELECT MAX(template_count) FROM (SELECT COUNT(*) AS template_count FROM Templates GROUP BY Template_Type_Code) AS subquery)
333	SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*) < 3
334	SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3
335	SELECT MIN(Version_Number), Template_Type_Code FROM Templates GROUP BY Template_Type_Code
336	SELECT Template_Type_Code, MIN(Version_Number) FROM Templates GROUP BY Template_Type_Code
337	SELECT T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data base'
338	SELECT T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_Name = 'Data base'
339	SELECT T1.Document_Name FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
340	SELECT T1.Document_Name FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
341	SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code
342	SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Ref_Template_Types AS T1 JOIN Templates AS T3 ON T1.Template_Type_Code = T3.Template_Type_Code JOIN Documents AS T2 ON T3.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code
343	SELECT T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code HAVING COUNT(*) = (SELECT MAX(num_docs) FROM (SELECT COUNT(*) AS num_docs FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code) AS subquery)
344	SELECT T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T2.Template_Type_Code HAVING COUNT(*) = (SELECT MAX(usage_count) FROM (SELECT COUNT(*) AS usage_count FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T2.Template_Type_Code) AS subquery)
345	SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT DISTINCT Template_Type_Code FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Documents))
346	SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT DISTINCT Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID)
347	SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Type
348	SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Type
349	SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
350	SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
351	SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
352	SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
353	SELECT DISTINCT T3.Template_Type_Description FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code
354	SELECT DISTINCT T1.Template_Details FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID
355	SELECT T1.Template_ID FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
356	SELECT Template_ID FROM Templates WHERE Template_Details LIKE '%Presentation%'
357	SELECT COUNT(*) FROM Paragraph
358	SELECT COUNT(*) FROM Paragraph
359	SELECT COUNT(*) FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Summer Show'
360	SELECT COUNT(*) FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Summer Show'
361	SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
362	SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
363	SELECT Paragraph_ID, Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Welcome to NY'
364	SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
365	SELECT Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Customer reviews'
366	SELECT Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Customer reviews'
367	SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) AS NumberOfParagraphs FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
368	SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) AS NumberOfParagraphs FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
369	SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) AS NumberOfParagraphs FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID, Documents.Document_Name
370	SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
371	SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2
372	SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2
373	SELECT D.Document_ID, D.Document_Name FROM Documents D JOIN (SELECT Document_ID, COUNT(*) AS ParagraphCount FROM Paragraphs GROUP BY Document_ID) P ON D.Document_ID = P.Document_ID WHERE P.ParagraphCount = (SELECT MAX(ParagraphCount) FROM (SELECT COUNT(*) AS ParagraphCount FROM Paragraphs GROUP BY Document_ID) T)
374	SELECT D.Document_ID, D.Document_Name FROM Documents D WHERE D.Document_ID IN (SELECT P.Document_ID FROM Paragraphs P GROUP BY P.Document_ID HAVING COUNT(*) = (SELECT MAX(Count) FROM (SELECT COUNT(*) AS Count FROM Paragraphs GROUP BY Document_ID) AS SubQuery))
375	SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) = (SELECT MIN(counts) FROM (SELECT COUNT(*) AS counts FROM Paragraphs GROUP BY Document_ID) AS subquery)
376	SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) = (SELECT MIN(count) FROM (SELECT COUNT(*) AS count FROM Paragraphs GROUP BY Document_ID) AS subquery)
377	SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2
378	SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) BETWEEN 1 AND 2
379	SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Brazil' INTERSECT SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Ireland'
380	SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text LIKE '%Brazil%' INTERSECT SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text LIKE '%Ireland%'
381	SELECT COUNT(*) FROM teacher
382	SELECT COUNT(*) FROM teacher
383	SELECT Name FROM teacher ORDER BY Age, Teacher_ID
384	SELECT Name FROM teacher ORDER BY Age, Teacher_ID
385	SELECT Age, Hometown FROM teacher
386	SELECT Age, Hometown FROM teacher
387	SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'
388	SELECT DISTINCT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'
389	SELECT Name FROM teacher WHERE Age IN (32, 33)
390	SELECT Name FROM teacher WHERE Age IN (32, 33)
391	SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
392	SELECT Hometown FROM teacher WHERE Age = (SELECT min(Age) FROM teacher)
393	SELECT Hometown, COUNT(*) FROM teacher GROUP BY Hometown
394	SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
395	SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) = (SELECT MAX(frequency) FROM (SELECT COUNT(*) AS frequency FROM teacher GROUP BY Hometown) AS subquery)
396	SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
397	SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) > 1
398	SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2
399	SELECT T1.Name, T2.Course FROM teacher AS T1 JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID JOIN course AS T2 ON T3.Course_ID = T2.Course_ID
400	SELECT T1.Name, T2.Course FROM teacher AS T1 JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID JOIN course AS T2 ON T3.Course_ID = T2.Course_ID
401	SELECT T1.Name, T2.Course FROM teacher AS T1 JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID JOIN course AS T2 ON T3.Course_ID = T2.Course_ID ORDER BY T1.Name ASC, T2.Course ASC
402	SELECT T1.Name, T2.Course FROM teacher AS T1 JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID JOIN course AS T2 ON T3.Course_ID = T2.Course_ID ORDER BY T1.Name ASC, T2.Course ASC
403	SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T3.Course = 'math'
404	SELECT DISTINCT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T3.Course = 'math'
405	SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
406	SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
407	SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(DISTINCT T2.Course_ID) >= 2
408	SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(DISTINCT T2.Course_ID) >= 2
409	SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange)
410	SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange)
411	SELECT COUNT(*) FROM visitor WHERE Age < 30
412	SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
413	SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4
414	SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
415	SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT max(Num_of_Staff) FROM museum)
416	SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009
417	SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
418	SELECT Name FROM museum WHERE Num_of_Staff > (SELECT min(Num_of_Staff) FROM museum WHERE Open_Year > 2010)
419	SELECT ID, Name, Age FROM visitor WHERE ID IN (SELECT visitor_ID FROM visit GROUP BY visitor_ID HAVING COUNT(*) > 1)
420	SELECT T1.ID, T1.Name, T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T1.ID, T1.Name, T1.Level_of_membership HAVING SUM(T2.Total_spent) = (SELECT MAX(total_spent) FROM (SELECT SUM(Total_spent) AS total_spent FROM visit GROUP BY visitor_ID) AS subquery)
421	SELECT T1.Museum_ID, T1.Name FROM museum AS T1 JOIN (SELECT Museum_ID, COUNT(*) AS visit_count FROM visit GROUP BY Museum_ID ORDER BY visit_count DESC LIMIT 1) AS T2 ON T1.Museum_ID = T2.Museum_ID
422	SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit)
423	SELECT Name, Age FROM visitor WHERE ID IN (SELECT visitor_ID FROM visit WHERE Num_of_Ticket = (SELECT max(Num_of_Ticket) FROM visit))
424	SELECT AVG(Num_of_Ticket), MAX(Num_of_Ticket) FROM visit
425	SELECT SUM(T1.Total_spent) FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1
426	SELECT Name FROM visitor WHERE ID IN (SELECT visitor_ID FROM visit JOIN museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Open_Year < 2009) AND ID IN (SELECT visitor_ID FROM visit JOIN museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Open_Year > 2011)
427	SELECT COUNT(DISTINCT visitor.ID) FROM visitor WHERE visitor.ID NOT IN (SELECT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year > 2010))
428	SELECT COUNT(*) FROM museum WHERE Open_Year > 2013 OR Open_Year < 2008
429	SELECT COUNT(DISTINCT player_id) FROM player
430	SELECT COUNT(*) FROM player
431	SELECT COUNT(*) FROM matche
432	SELECT COUNT(*) FROM matche
433	SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
434	SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
435	SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matche
436	SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matche
437	SELECT AVG(winner_rank) FROM matche
438	SELECT AVG(T1.ranking) FROM rankings AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id
439	SELECT MIN(loser_rank) FROM matche
440	SELECT MIN(T1.ranking) FROM rankings AS T1 JOIN matches AS T2 ON T1.player_id = T2.loser_id
441	SELECT COUNT(DISTINCT country_code) FROM player
442	SELECT COUNT(DISTINCT country_code) FROM player
443	SELECT COUNT(DISTINCT loser_name) FROM matche
444	SELECT COUNT(DISTINCT loser_name) FROM matche
445	SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
446	SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
447	SELECT first_name, last_name FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE year = 2013) INTERSECT SELECT first_name, last_name FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE year = 2016)
448	SELECT first_name, last_name FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE year = 2013) AND player_id IN (SELECT winner_id FROM matches WHERE year = 2016)
449	SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016)
450	SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016)
451	SELECT country_code, first_name FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'WTA Championships') AND player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open')
452	SELECT first_name, country_code FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'WTA Championships' INTERSECT SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open')
453	SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1
454	SELECT first_name, country_code FROM players WHERE birth_date = (SELECT min(birth_date) FROM players)
455	SELECT first_name, last_name FROM players ORDER BY birth_date, last_name, player_id
456	SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date, player_id
457	SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date
458	SELECT first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date
459	SELECT first_name, country_code FROM players WHERE player_id IN (SELECT player_id FROM rankings ORDER BY tours DESC LIMIT 1)
460	SELECT first_name, country_code FROM players WHERE player_id IN (SELECT player_id FROM rankings ORDER BY tours DESC LIMIT 1)
461	SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC, year ASC LIMIT 1
462	SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC, year ASC LIMIT 1
463	SELECT P.first_name, P.last_name, SUM(R.ranking_points) FROM players P JOIN matches M ON P.player_id = M.winner_id JOIN rankings R ON P.player_id = R.player_id GROUP BY P.player_id HAVING COUNT(M.winner_id) = (SELECT COUNT(*) FROM matches GROUP BY winner_id ORDER BY COUNT(*) DESC LIMIT 1)
464	SELECT P.first_name, P.last_name, SUM(R.ranking_points) FROM players P JOIN matches M ON P.player_id = M.winner_id JOIN rankings R ON P.player_id = R.player_id GROUP BY P.player_id ORDER BY COUNT(M.winner_id) DESC LIMIT 1
465	SELECT first_name, last_name FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1)
466	SELECT first_name, last_name FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open' AND winner_id IN (SELECT player_id FROM rankings ORDER BY ranking_points DESC LIMIT 1))
467	SELECT P1.first_name AS winner_first_name, P1.last_name AS winner_last_name, P2.first_name AS loser_first_name, P2.last_name AS loser_last_name FROM matches JOIN players AS P1 ON matches.winner_id = P1.player_id JOIN players AS P2 ON matches.loser_id = P2.player_id WHERE matches.minutes = (SELECT max(minutes) FROM matches)
468	SELECT winner_name, loser_name FROM matches ORDER BY minutes DESC LIMIT 1
469	SELECT T1.first_name, T1.player_id, AVG(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id, T1.first_name
470	SELECT T1.first_name, T1.player_id, COALESCE(AVG(T2.ranking_points), 0) FROM players AS T1 LEFT JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id
471	SELECT T1.first_name, T1.player_id, SUM(T2.ranking_points) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id
472	SELECT T1.first_name, COALESCE(T2.ranking_points, 0) AS total_ranking_points FROM players AS T1 LEFT JOIN rankings AS T2 ON T1.player_id = T2.player_id
473	SELECT country_code, COUNT(player_id) AS number_of_players FROM players GROUP BY country_code
474	SELECT country_code, COUNT(*) FROM players GROUP BY country_code
475	SELECT country_code FROM players GROUP BY country_code HAVING count(*) = (SELECT max(player_count) FROM (SELECT count(*) AS player_count FROM players GROUP BY country_code) AS counts)
476	SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) = (SELECT MAX(cnt) FROM (SELECT COUNT(*) AS cnt FROM players GROUP BY country_code) AS subquery)
477	SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50
478	SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50
479	SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
480	SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
481	SELECT year, COUNT(*) FROM matches GROUP BY year
482	SELECT year, COUNT(*) FROM matches GROUP BY year
483	SELECT P.first_name, P.last_name, R.ranking FROM players P JOIN rankings R ON P.player_id = R.player_id WHERE P.player_id IN (SELECT player_id FROM players ORDER BY birth_date DESC LIMIT 3)
484	SELECT P.first_name, P.last_name, R.ranking FROM players P JOIN matches M ON P.player_id = M.winner_id JOIN rankings R ON P.player_id = R.player_id ORDER BY P.birth_date DESC LIMIT 3
485	SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'
486	SELECT count(DISTINCT T1.winner_id) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.hand = 'left' AND T1.tourney_name = 'WTA Championships'
487	SELECT first_name, country_code, birth_date FROM players WHERE player_id = (SELECT winner_id FROM matches JOIN rankings ON matches.winner_id = rankings.player_id ORDER BY ranking_points DESC LIMIT 1)
488	SELECT first_name, country_code, birth_date FROM players WHERE player_id = (SELECT player_id FROM rankings ORDER BY ranking_points DESC LIMIT 1)
489	SELECT hand, COUNT(player_id) FROM players GROUP BY hand
490	SELECT hand, COUNT(*) FROM players GROUP BY hand
491	SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured'
492	SELECT name, tonnage FROM ship ORDER BY name DESC, tonnage
493	SELECT name, date, result FROM battle
494	SELECT MAX(killed), MIN(killed) FROM death
495	SELECT AVG(injured) FROM death
496	SELECT T1.killed, T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'
497	SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'
498	SELECT DISTINCT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'
499	SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id GROUP BY T1.id, T1.name HAVING SUM(T3.killed) > 10
500	SELECT T1.id, T1.name FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name HAVING SUM(T2.injured) = (SELECT MAX(total_injuries) FROM (SELECT SUM(injured) AS total_injuries FROM death GROUP BY caused_by_ship_id) AS subquery)
501	SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
502	SELECT COUNT(DISTINCT result) FROM battle
503	SELECT COUNT(*) FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE tonnage = 225)
504	SELECT b.name, b.date FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.name IN ('Lettice', 'HMS Atalanta') GROUP BY b.id HAVING COUNT(DISTINCT s.name) = 2
505	SELECT T1.name, T1.result, T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.location = 'English Channel' AND T2.disposition_of_ship IS NULL
506	SELECT note FROM death WHERE note LIKE '%East%'
507	SELECT line_1, line_2 FROM Addresse
508	SELECT line_1, line_2 FROM Addresse
509	SELECT COUNT(*) FROM Course
510	SELECT COUNT(*) FROM Course
511	SELECT course_description FROM Courses WHERE course_name = 'math'
512	SELECT course_description FROM Courses WHERE course_name LIKE '%math%'
513	SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
514	SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
515	SELECT D.department_id, D.department_name FROM Departments D JOIN Degree_Programs DP ON D.department_id = DP.department_id GROUP BY D.department_id, D.department_name HAVING COUNT(DP.degree_program_id) = (SELECT MAX(Cnt) FROM (SELECT COUNT(degree_program_id) AS Cnt FROM Degree_Programs GROUP BY department_id) AS Sub)
516	SELECT D.department_id, D.department_name FROM Departments D JOIN Degree_Programs DP ON D.department_id = DP.department_id GROUP BY D.department_id, D.department_name HAVING COUNT(*) = (SELECT MAX(degree_count) FROM (SELECT COUNT(*) AS degree_count FROM Degree_Programs GROUP BY department_id) AS subquery)
517	SELECT COUNT(DISTINCT T1.department_id) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id
518	SELECT COUNT(DISTINCT department_id) FROM Departments JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id
519	SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Program
520	SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Program
521	SELECT COUNT(*) FROM Degree_Programs JOIN Departments ON Degree_Programs.department_id = Departments.department_id WHERE Departments.department_name = 'Engineering'
522	SELECT COUNT(*) FROM Degree_Programs JOIN Departments ON Degree_Programs.department_id = Departments.department_id WHERE Departments.department_name = 'Engineering'
523	SELECT section_name, section_description FROM Section
524	SELECT section_name, section_description FROM Section
525	SELECT T1.course_id, T1.course_name FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(T2.section_id) <= 2
526	SELECT T1.course_id, T1.course_name FROM Courses AS T1 LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id, T1.course_name HAVING COUNT(T2.section_id) < 2
527	SELECT section_name FROM Sections ORDER BY section_name DESC
528	SELECT section_name FROM Sections ORDER BY section_name DESC
529	SELECT T1.semester_id, T1.semester_name FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id, T1.semester_name ORDER BY COUNT(*) DESC LIMIT 1
530	SELECT T1.semester_id, T1.semester_name FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id, T1.semester_name HAVING COUNT(T2.student_id) = (SELECT MAX(count) FROM (SELECT COUNT(T3.student_id) AS count FROM Student_Enrolment AS T3 GROUP BY T3.semester_id) AS T4)
531	SELECT department_description FROM Departments WHERE department_name LIKE '%the computer%'
532	SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
533	SELECT S.first_name, S.middle_name, S.last_name, S.student_id FROM Students S JOIN Student_Enrolment SE ON S.student_id = SE.student_id GROUP BY SE.student_id, SE.semester_id HAVING COUNT(DISTINCT SE.degree_program_id) = 2
534	SELECT S.student_id, S.first_name, S.middle_name, S.last_name FROM Students S JOIN Student_Enrolment SE ON S.student_id = SE.student_id GROUP BY SE.student_id, SE.semester_id HAVING COUNT(DISTINCT SE.degree_program_id) = 2
535	SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'
536	SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelors'
537	SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(T2.student_id) DESC LIMIT 1
538	SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN (SELECT degree_program_id, COUNT(student_id) AS num_students FROM Student_Enrolment GROUP BY degree_program_id) AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.num_students = (SELECT MAX(num_students) FROM (SELECT COUNT(student_id) AS num_students FROM Student_Enrolment GROUP BY degree_program_id) AS T3)
539	SELECT T1.degree_program_id, T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id, T1.degree_summary_name ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1
540	SELECT T1.degree_program_id, T1.degree_summary_name FROM Degree_Programs AS T1 WHERE T1.degree_program_id IN (SELECT degree_program_id FROM Student_Enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1)
541	SELECT S.student_id, S.first_name, S.middle_name, S.last_name, COUNT(E.student_id) AS num_enrollments FROM Students S JOIN Student_Enrolment E ON S.student_id = E.student_id GROUP BY S.student_id HAVING COUNT(E.student_id) = (SELECT MAX(enrollment_count) FROM (SELECT student_id, COUNT(*) AS enrollment_count FROM Student_Enrolment GROUP BY student_id) AS subquery)
542	SELECT S.first_name, S.middle_name, S.last_name, S.student_id, COUNT(*) AS num_enrollments FROM Students S JOIN Student_Enrolment SE ON S.student_id = SE.student_id GROUP BY S.student_id ORDER BY num_enrollments DESC LIMIT 1
543	SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)
544	SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT DISTINCT semester_id FROM Student_Enrolment)
545	SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
546	SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
547	SELECT T1.course_name FROM Courses AS T1 JOIN (SELECT course_id, COUNT(*) AS enrollment_count FROM Student_Enrolment_Courses GROUP BY course_id) AS T2 ON T1.course_id = T2.course_id WHERE T2.enrollment_count = (SELECT MAX(enrollment_count) FROM (SELECT course_id, COUNT(*) AS enrollment_count FROM Student_Enrolment_Courses GROUP BY course_id) AS T3)
548	SELECT T1.course_name FROM Courses AS T1 JOIN (SELECT course_id, COUNT(*) AS student_count FROM Student_Enrolment_Courses GROUP BY course_id) AS T2 ON T1.course_id = T2.course_id WHERE T2.student_count = (SELECT MAX(student_count) FROM (SELECT course_id, COUNT(*) AS student_count FROM Student_Enrolment_Courses GROUP BY course_id) AS T3)
549	SELECT last_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM Student_Enrolment)
550	SELECT last_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM Student_Enrolment)
551	SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2
552	SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2
553	SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
554	SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
555	SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered, student_id LIMIT 1
556	SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered, student_id LIMIT 1
557	SELECT first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left, student_id LIMIT 1
558	SELECT first_name, middle_name, last_name FROM Students WHERE student_id = (SELECT student_id FROM Student_Enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment_Courses WHERE student_course_id IN (SELECT student_course_id FROM Transcript_Contents WHERE transcript_id IN (SELECT transcript_id FROM Transcripts ORDER BY transcript_date ASC, student_id ASC LIMIT 1))))
559	SELECT first_name FROM Students WHERE permanent_address_id != current_address_id
560	SELECT first_name FROM Students WHERE permanent_address_id != current_address_id
561	SELECT T1.address_id, T1.line_1, T1.line_2, T1.line_3 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1
562	SELECT A.address_id, A.line_1, A.line_2 FROM Addresses A WHERE A.address_id = (SELECT address_id FROM (SELECT current_address_id AS address_id FROM Students UNION ALL SELECT permanent_address_id FROM Students) AS combined GROUP BY address_id ORDER BY COUNT(*) DESC, address_id ASC LIMIT 1)
563	SELECT AVG(EXTRACT(YEAR FROM transcript_date)) FROM Transcript
564	SELECT AVG(transcript_date) FROM Transcript
565	SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date LIMIT 1
566	SELECT * FROM Transcripts WHERE transcript_date = (SELECT min(transcript_date) FROM Transcripts)
567	SELECT COUNT(*) FROM Transcript
568	SELECT COUNT(*) FROM Transcript
569	SELECT MAX(transcript_date) FROM Transcript
570	SELECT MAX(transcript_date) FROM Transcript
571	SELECT student_course_id, COUNT(*) AS count FROM Transcript_Contents GROUP BY student_course_id HAVING COUNT(*) = (SELECT MAX(count) FROM (SELECT student_course_id, COUNT(*) AS count FROM Transcript_Contents GROUP BY student_course_id) AS counts)
572	SELECT T1.student_course_id, T2.student_enrolment_id FROM Transcript_Contents AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id GROUP BY T1.student_course_id ORDER BY COUNT(*) DESC LIMIT 1
573	SELECT T1.transcript_id, T1.transcript_date FROM Transcripts T1 LEFT JOIN Transcript_Contents T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id, T1.transcript_date ORDER BY COUNT(T2.student_course_id) ASC, T1.transcript_id ASC LIMIT 1
574	SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 JOIN (SELECT transcript_id, COUNT(*) AS cnt FROM Transcript_Contents GROUP BY transcript_id) AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T2.cnt ASC LIMIT 1
575	SELECT semester_name FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Master')) INTERSECT SELECT semester_name FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Bachelor'))
576	SELECT semester_id FROM Student_Enrolment JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = 'Masters' INTERSECT SELECT semester_id FROM Student_Enrolment JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = 'Bachelors'
577	SELECT COUNT(DISTINCT current_address_id) FROM Student
578	SELECT DISTINCT address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM Addresses WHERE address_id IN (SELECT current_address_id FROM Students UNION SELECT permanent_address_id FROM Students)
579	SELECT * FROM Students ORDER BY last_name DESC
580	SELECT other_student_details FROM Students ORDER BY last_name DESC
581	SELECT section_description FROM Sections WHERE section_name = 'H'
582	SELECT section_description FROM Sections WHERE section_name = 'h'
583	SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582'
584	SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582'
585	SELECT Title FROM Cartoon ORDER BY Title
586	SELECT Title FROM Cartoon ORDER BY Title
587	SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones'
588	SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
589	SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'
590	SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'
591	SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date, id
592	SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date, id ASC
593	SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
594	SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
595	SELECT Country, COUNT(id) FROM TV_Channel GROUP BY Country ORDER BY COUNT(id) DESC LIMIT 1
596	SELECT Country, COUNT(id) AS ChannelCount FROM TV_Channel GROUP BY Country ORDER BY ChannelCount DESC LIMIT 1
597	SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channe
598	SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channe
599	SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
600	SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
601	SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
602	SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
603	SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'
604	SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'
605	SELECT Language, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Language ORDER BY Channel_Count ASC LIMIT 1
606	SELECT Language, COUNT(id) AS num_channels FROM TV_Channel GROUP BY Language HAVING COUNT(id) = (SELECT MIN(num_channels) FROM (SELECT COUNT(id) AS num_channels FROM TV_Channel GROUP BY Language) AS subquery)
607	SELECT Language, COUNT(DISTINCT id) FROM TV_Channel GROUP BY Language
608	SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language
609	SELECT T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
610	SELECT T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle'
611	SELECT T1.Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
612	SELECT T1.Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
613	SELECT Episode FROM TV_series ORDER BY Rating, id
614	SELECT Episode FROM TV_series ORDER BY Rating DESC, id ASC
615	SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC, Episode ASC LIMIT 3
616	SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
617	SELECT MIN(Share), MAX(Share) FROM TV_serie
618	SELECT MAX(Share), MIN(Share) FROM TV_serie
619	SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
620	SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
621	SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
622	SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
623	SELECT T2.series_name FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
624	SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'A Love of a Lifetime'
625	SELECT T1.Episode FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
626	SELECT T1.Episode FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
627	SELECT Directed_by, COUNT(id) FROM Cartoon GROUP BY Directed_by
628	SELECT Directed_by, COUNT(id) FROM Cartoon GROUP BY Directed_by
629	SELECT Production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT max(Original_air_date) FROM Cartoon)
630	SELECT T1.Production_code, T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id ORDER BY T1.Original_air_date DESC LIMIT 1
631	SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'High definition TV'
632	SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes'
633	SELECT DISTINCT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey'
634	SELECT DISTINCT T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'
635	SELECT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')
636	SELECT DISTINCT Country FROM TV_Channel WHERE Country NOT IN (SELECT DISTINCT Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Written_by = 'Todd Casey')
637	SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')
638	SELECT series_name, Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Michael Chang')
639	SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
640	SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
641	SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)
642	SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)
643	SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
644	SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
645	SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
646	SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
647	SELECT COUNT(*) FROM poker_player
648	SELECT COUNT(*) FROM poker_player
649	SELECT Earnings FROM poker_player ORDER BY Earnings DESC
650	SELECT Earnings, Poker_Player_ID FROM poker_player ORDER BY Earnings DESC, Poker_Player_ID ASC
651	SELECT Final_Table_Made, Best_Finish FROM poker_player
652	SELECT Final_Table_Made, Best_Finish FROM poker_player
653	SELECT AVG(Earnings) FROM poker_player
654	SELECT AVG(Earnings) FROM poker_player
655	SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT max(Earnings) FROM poker_player)
656	SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
657	SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
658	SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
659	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
660	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
661	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
662	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
663	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC, T2.Earnings DESC, T2.Poker_Player_ID ASC
664	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC, T1.Name ASC, T2.Poker_Player_ID ASC
665	SELECT Birth_Date FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player WHERE Earnings = (SELECT min(Earnings) FROM poker_player))
666	SELECT Birth_Date FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player WHERE Earnings = (SELECT min(Earnings) FROM poker_player))
667	SELECT Money_Rank FROM poker_player WHERE People_ID IN (SELECT People_ID FROM people WHERE Height = (SELECT max(Height) FROM people))
668	SELECT T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Height DESC LIMIT 1
669	SELECT AVG(T1.Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
670	SELECT AVG(T1.Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
671	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC, T1.Name
672	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC, T1.Name ASC, T2.Poker_Player_ID ASC
673	SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality
674	SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality
675	SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
676	SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
677	SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) > 1
678	SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
679	SELECT Name, Birth_Date FROM people ORDER BY Name ASC, People_ID ASC
680	SELECT Name, Birth_Date FROM people ORDER BY Name, People_ID
681	SELECT Name FROM people WHERE Nationality != 'Russia'
682	SELECT Name FROM people WHERE Nationality != 'Russia'
683	SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
684	SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
685	SELECT COUNT(DISTINCT Nationality) FROM people
686	SELECT COUNT(DISTINCT Nationality) FROM people
687	SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE
688	SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
689	SELECT vote_id, phone_number, state FROM VOTES
690	SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE
691	SELECT MAX(created) FROM VOTES WHERE state = 'CA'
692	SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'
693	SELECT DISTINCT state, created FROM VOTES
694	SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number HAVING COUNT(T2.vote_id) >= 2
695	SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number, T1.contestant_name ORDER BY COUNT(T2.vote_id) ASC LIMIT 1
696	SELECT COUNT(*) FROM VOTES WHERE state = 'NY' OR state = 'CA'
697	SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT DISTINCT contestant_number FROM VOTES)
698	SELECT area_code FROM AREA_CODE_STATE WHERE state IN (SELECT state FROM VOTES GROUP BY state HAVING count(*) = (SELECT max(vote_count) FROM (SELECT count(*) AS vote_count FROM VOTES GROUP BY state) AS subquery))
699	SELECT V.created, V.state, V.phone_number FROM VOTES V JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Tabatha Gehling'
700	SELECT area_code FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE contestant_name = 'Tabatha Gehling' INTERSECT SELECT area_code FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE contestant_name = 'Kelly Clauss'
701	SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
702	SELECT Name FROM country WHERE IndepYear > 1950
703	SELECT Name FROM country WHERE IndepYear > 1950
704	SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%'
705	SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%republic%'
706	SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
707	SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
708	SELECT Continent FROM country WHERE Name = 'Anguilla'
709	SELECT Continent FROM country WHERE Name = 'Anguilla'
710	SELECT T2.Region FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
711	SELECT T2.Region FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
712	SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = 'Aruba' AND Percentage = (SELECT max(Percentage) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = 'Aruba')
713	SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = 'Aruba' AND IsOfficial = 'T'
714	SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
715	SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
716	SELECT Region, Population FROM country WHERE Name = 'Angola'
717	SELECT Region, Population FROM country WHERE Name = 'Angola'
718	SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
719	SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
720	SELECT Name FROM country WHERE Continent = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')
721	SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
722	SELECT SUM(Population), MAX(GNP) FROM country WHERE Continent = 'Asia'
723	SELECT SUM(Population), MAX(GNP) FROM country WHERE Continent = 'Asia'
724	SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'
725	SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'
726	SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')
727	SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')
728	SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
729	SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
730	SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm = 'US territory'
731	SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm LIKE '%US territory%'
732	SELECT COUNT(DISTINCT Language) FROM countrylanguage
733	SELECT COUNT(DISTINCT Language) FROM countrylanguage
734	SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
735	SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
736	SELECT COUNT(Language) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = 'Aruba'
737	SELECT COUNT(Language) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = 'Aruba'
738	SELECT COUNT(*) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = 'Afghanistan' AND countrylanguage.IsOfficial = 'T'
739	SELECT COUNT(*) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = 'Afghanistan' AND countrylanguage.IsOfficial = 'T'
740	SELECT Name FROM country WHERE Code = (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(*) DESC LIMIT 1)
741	SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode HAVING COUNT(*) = (SELECT MAX(num_languages) FROM (SELECT COUNT(*) AS num_languages FROM countrylanguage GROUP BY CountryCode)))
742	SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent HAVING COUNT(DISTINCT Language) = (SELECT MAX(LanguageCount) FROM (SELECT COUNT(DISTINCT Language) AS LanguageCount FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent))
743	SELECT Continent FROM (SELECT Continent, COUNT(DISTINCT Language) AS NumLanguages FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent) AS ContinentLanguageCounts WHERE NumLanguages = (SELECT MAX(NumLanguages) FROM (SELECT COUNT(DISTINCT Language) AS NumLanguages FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent) AS MaxLanguages)
744	SELECT COUNT(*) FROM (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' INTERSECT SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch')
745	SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2
746	SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')
747	SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') INTERSECT SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')
748	SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T')
749	SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T' INTERSECT SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T')
750	SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'
751	SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'
752	SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' OR T2.Language = 'Dutch'
753	SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Dutch' OR T2.Language = 'English'
754	SELECT DISTINCT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE (T2.Language = 'English' OR T2.Language = 'Dutch') AND T2.IsOfficial = 'T'
755	SELECT DISTINCT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'Dutch') AND T2.IsOfficial = 'T'
756	SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' AND Percentage = (SELECT max(Percentage) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia')
757	SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY Language HAVING COUNT(*) = (SELECT MAX(NumCountries) FROM (SELECT COUNT(*) AS NumCountries FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY Language) AS SubQuery)
758	SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE GovernmentForm LIKE '%Republic%' GROUP BY Language HAVING COUNT(DISTINCT country.Code) = 1
759	SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm LIKE '%Republic%') GROUP BY Language HAVING COUNT(*) = 1
760	SELECT Name, Population FROM city WHERE ID IN (SELECT city.ID FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English') ORDER BY Population DESC LIMIT 1
761	SELECT Name, Population FROM city WHERE ID IN (SELECT city_id FROM countrylanguage WHERE Language = 'English') ORDER BY Population DESC LIMIT 1
762	SELECT Name, Population, LifeExpectancy FROM country WHERE SurfaceArea = (SELECT max(SurfaceArea) FROM country WHERE Continent = 'Asia') AND Continent = 'Asia'
763	SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' AND SurfaceArea = (SELECT max(SurfaceArea) FROM country WHERE Continent = 'Asia')
764	SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'F')
765	SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
766	SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
767	SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
768	SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T'
769	SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T'
770	SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930)
771	SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.IndepYear < 1930 AND T2.IsOfficial = 'T'
772	SELECT Name FROM country WHERE SurfaceArea > (SELECT max(SurfaceArea) FROM country WHERE Continent = 'Europe')
773	SELECT Name FROM country WHERE SurfaceArea > (SELECT max(SurfaceArea) FROM country WHERE Continent = 'Europe')
774	SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
775	SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT min(Population) FROM country WHERE Continent = 'Asia')
776	SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT max(Population) FROM country WHERE Continent = 'Africa')
777	SELECT Name FROM country WHERE Continent = 'Asia' AND Population > ALL (SELECT Population FROM country WHERE Continent = 'Africa')
778	SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
779	SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
780	SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
781	SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
782	SELECT Code FROM country WHERE GovernmentForm != 'Republic' AND Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
783	SELECT Code FROM country WHERE GovernmentForm NOT LIKE '%Republic%' AND Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
784	SELECT Name FROM city WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Europe' AND Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T'))
785	SELECT Name FROM city WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Europe') AND CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
786	SELECT DISTINCT T1.Name, T1.Population FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'
787	SELECT DISTINCT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'
788	SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT min(Population) FROM country)
789	SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT min(Population) FROM country)
790	SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT max(SurfaceArea) FROM country)
791	SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT max(SurfaceArea) FROM country)
792	SELECT T1.Name, COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Code HAVING COUNT(T2.Language) >= 3
793	SELECT T1.Name, COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(T2.Language) > 2
794	SELECT city.District, COUNT(*) AS NumberOfCities FROM city WHERE city.Population > (SELECT AVG(Population) FROM city) GROUP BY city.District;
795	SELECT District, COUNT(*) FROM city WHERE Population > (SELECT avg(Population) FROM city) GROUP BY District
796	SELECT GovernmentForm, SUM(Population) FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72
797	SELECT GovernmentForm, SUM(Population) AS TotalPopulation FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72
798	SELECT Continent, AVG(LifeExpectancy) AS AvgLifeExpectancy, SUM(Population) AS TotalPopulation FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
799	SELECT Continent, SUM(Population), AVG(LifeExpectancy) FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
800	SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC, Name, Code LIMIT 5
801	SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC, Population DESC, Code ASC LIMIT 5
802	SELECT Name FROM country ORDER BY Population DESC, Name, Code LIMIT 3
803	SELECT Name FROM country ORDER BY Population DESC, Name ASC, Code ASC LIMIT 3
804	SELECT Name FROM country ORDER BY Population ASC, Code ASC LIMIT 3
805	SELECT Name FROM country ORDER BY Population ASC, Name ASC, Code ASC LIMIT 3
806	SELECT COUNT(*) FROM country WHERE Continent = 'Asia'
807	SELECT COUNT(*) FROM country WHERE Continent = 'Asia'
808	SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
809	SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
810	SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
811	SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
812	SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
813	SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
814	SELECT Language FROM countrylanguage GROUP BY Language HAVING COUNT(*) = (SELECT MAX(cnt) FROM (SELECT COUNT(*) AS cnt FROM countrylanguage GROUP BY Language))
815	SELECT Language FROM countrylanguage GROUP BY Language HAVING COUNT(*) = (SELECT MAX(num_countries) FROM (SELECT COUNT(*) AS num_countries FROM countrylanguage GROUP BY Language))
816	SELECT T1.Language, T1.Percentage, T1.CountryCode, T2.Name FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE (T1.CountryCode, T1.Percentage) IN (SELECT CountryCode, MAX(Percentage) FROM countrylanguage GROUP BY CountryCode)
817	SELECT T1.Code, T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE (T2.Percentage, T2.CountryCode) IN (SELECT max(Percentage), CountryCode FROM countrylanguage GROUP BY CountryCode)
818	SELECT COUNT(DISTINCT T1.Code) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Spanish' AND T2.Percentage = (SELECT MAX(T3.Percentage) FROM countrylanguage AS T3 WHERE T3.CountryCode = T1.Code)
819	SELECT COUNT(DISTINCT T1.Code) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Spanish' AND T2.IsOfficial = 'T'
820	SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT max(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
821	SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T'
822	SELECT COUNT(*) FROM conductor
823	SELECT COUNT(*) FROM conductor
824	SELECT Name FROM conductor ORDER BY Age, Conductor_ID
825	SELECT Name FROM conductor ORDER BY Age, Conductor_ID
826	SELECT Name FROM conductor WHERE Nationality != 'USA'
827	SELECT Name FROM conductor WHERE Nationality != 'USA'
828	SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC, Orchestra_ID
829	SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC, Orchestra_ID
830	SELECT AVG(Attendance) FROM show
831	SELECT AVG(Attendance) FROM show
832	SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final'
833	SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final'
834	SELECT COUNT(DISTINCT Nationality) FROM conductor
835	SELECT COUNT(DISTINCT Nationality) FROM conductor
836	SELECT Name FROM conductor ORDER BY Year_of_Work DESC, Conductor_ID ASC
837	SELECT Name FROM conductor ORDER BY Year_of_Work DESC, Conductor_ID
838	SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
839	SELECT Name FROM conductor WHERE Year_of_Work = (SELECT max(Year_of_Work) FROM conductor)
840	SELECT T1.Name, T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
841	SELECT T1.Name, T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
842	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
843	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
844	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(*) = (SELECT MAX(num_orchestras) FROM (SELECT COUNT(*) AS num_orchestras FROM orchestra GROUP BY Conductor_ID) AS subquery)
845	SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(*) = (SELECT MAX(num_orchestras) FROM (SELECT COUNT(*) AS num_orchestras FROM orchestra GROUP BY Conductor_ID) AS counts))
846	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
847	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
848	SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
849	SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
850	SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*), Major_Record_Format
851	SELECT Major_Record_Format, COUNT(*) AS Frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY Frequency DESC, Major_Record_Format, Orchestra_ID
852	SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
853	SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
854	SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
855	SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
856	SELECT Record_Company FROM orchestra WHERE Record_Company IN (SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003) AND Record_Company IN (SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003)
857	SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
858	SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD')
859	SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD')
860	SELECT Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY orchestra.Orchestra_ID HAVING COUNT(performance.Performance_ID) > 1
861	SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(Performance_ID) > 1)
862	SELECT COUNT(*) FROM Highschooler
863	SELECT COUNT(*) FROM Highschooler
864	SELECT name, grade FROM Highschooler
865	SELECT name, grade FROM Highschooler
866	SELECT DISTINCT grade FROM Highschooler
867	SELECT ID, grade FROM Highschooler
868	SELECT grade FROM Highschooler WHERE name = 'Kyle'
869	SELECT grade FROM Highschooler WHERE name = 'Kyle'
870	SELECT name FROM Highschooler WHERE grade = 10
871	SELECT name FROM Highschooler WHERE grade = 10
872	SELECT ID FROM Highschooler WHERE name = 'Kyle'
873	SELECT ID FROM Highschooler WHERE name = 'Kyle'
874	SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)
875	SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)
876	SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade
877	SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade
878	SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(ID) DESC LIMIT 1
879	SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(ID) DESC LIMIT 1
880	SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4
881	SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
882	SELECT student_id, COUNT(friend_id) AS total_friends FROM Friend GROUP BY student_id UNION ALL SELECT friend_id, COUNT(student_id) AS total_friends FROM Friend GROUP BY friend_id
883	SELECT student_id, COUNT(DISTINCT friend_id) AS num_friends FROM Friend GROUP BY student_id UNION ALL SELECT friend_id AS student_id, COUNT(DISTINCT student_id) AS num_friends FROM Friend GROUP BY friend_id
884	SELECT H.name, COUNT(F.friend_id) FROM Highschooler H JOIN Friend F ON H.ID = F.student_id GROUP BY H.name
885	SELECT H.name, COUNT(F.friend_id) FROM Highschooler H JOIN Friend F ON H.ID = F.student_id GROUP BY H.name
886	SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM (SELECT student_id, COUNT(*) AS total_friends FROM (SELECT student_id FROM Friend UNION ALL SELECT friend_id AS student_id FROM Friend) AS all_friends GROUP BY student_id) AS total_counts ORDER BY total_friends DESC LIMIT 1)
887	SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) = (SELECT MAX(num_friends) FROM (SELECT COUNT(friend_id) AS num_friends FROM Friend GROUP BY student_id) AS subquery))
888	SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id OR T1.ID = T2.friend_id GROUP BY T1.ID HAVING COUNT(DISTINCT T2.friend_id) + COUNT(DISTINCT T2.student_id) >= 6
889	SELECT name FROM Highschooler WHERE ID IN (SELECT ID FROM (SELECT Highschooler.ID FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id OR Highschooler.ID = Friend.friend_id GROUP BY Highschooler.ID HAVING COUNT(*) >= 3) AS SubQuery)
890	SELECT T1.ID, T3.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Highschooler AS T3 ON T2.friend_id = T3.ID WHERE T1.name = 'Kyle'
891	SELECT T1.ID, T3.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Highschooler AS T3 ON T2.friend_id = T3.ID WHERE T1.name = 'Kyle'
892	SELECT T1.ID, COUNT(T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.name = 'Kyle' GROUP BY T1.ID
893	SELECT T1.ID, COUNT(T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.name = 'Kyle' GROUP BY T1.ID
894	SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
895	SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
896	SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)
897	SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)
898	SELECT ID FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT liked_id FROM Likes)
899	SELECT ID FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT liked_id FROM Likes)
900	SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT liked_id FROM Likes)
901	SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT student_id FROM Likes)
902	SELECT ID, (SELECT COUNT(*) FROM Likes WHERE student_id = Highschooler.ID) + (SELECT COUNT(*) FROM Likes WHERE liked_id = Highschooler.ID) AS total_likes FROM Highschooler
903	SELECT T1.ID, COUNT(DISTINCT T2.student_id) AS given_likes, COUNT(DISTINCT T2.liked_id) AS received_likes FROM Highschooler AS T1 LEFT JOIN Likes AS T2 ON T1.ID = T2.student_id OR T1.ID = T2.liked_id GROUP BY T1.ID
904	SELECT H.name, COUNT(DISTINCT L1.liked_id) AS likes_given, COUNT(DISTINCT L2.student_id) AS likes_received FROM Highschooler H LEFT JOIN Likes L1 ON H.ID = L1.student_id LEFT JOIN Likes L2 ON H.ID = L2.liked_id GROUP BY H.name
905	SELECT H.name, COUNT(DISTINCT L1.liked_id) AS likes_given, COUNT(DISTINCT L2.student_id) AS likes_received FROM Highschooler H LEFT JOIN Likes L1 ON H.ID = L1.student_id LEFT JOIN Likes L2 ON H.ID = L2.liked_id GROUP BY H.name
906	SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.liked_id GROUP BY T1.ID ORDER BY COUNT(*) DESC LIMIT 1
907	SELECT name FROM Highschooler WHERE ID IN (SELECT liked_id FROM Likes GROUP BY liked_id HAVING COUNT(*) = (SELECT MAX(like_count) FROM (SELECT COUNT(*) AS like_count FROM Likes GROUP BY liked_id) AS counts))
908	SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.liked_id GROUP BY T2.liked_id HAVING COUNT(*) >= 2
909	SELECT name FROM Highschooler WHERE ID IN (SELECT liked_id FROM Likes GROUP BY liked_id HAVING COUNT(*) >= 2)
910	SELECT H.name FROM Highschooler H WHERE H.grade > 5 AND (SELECT COUNT(*) FROM Friend F WHERE F.student_id = H.ID OR F.friend_id = H.ID) >= 2
911	SELECT H.name FROM Highschooler H JOIN Friend F ON H.ID = F.student_id OR H.ID = F.friend_id WHERE H.grade > 5 GROUP BY H.ID HAVING COUNT(DISTINCT F.friend_id) >= 2 OR COUNT(DISTINCT F.student_id) >= 2
912	SELECT T1.ID, COUNT(*) AS num_likes FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.liked_id WHERE T1.name = 'Kyle' GROUP BY T1.ID
913	SELECT T1.ID, COUNT(*) AS num_likes FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.liked_id WHERE T1.name = 'Kyle' GROUP BY T1.ID
914	SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)
915	SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT T2.student_id FROM Friend AS T2 UNION SELECT T2.friend_id FROM Friend AS T2)
916	SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend) AND ID NOT IN (SELECT friend_id FROM Friend)
917	SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend) AND ID NOT IN (SELECT friend_id FROM Friend)
918	SELECT DISTINCT O.state FROM Owners O JOIN Professionals P ON O.state = P.state
919	SELECT state FROM Owners WHERE state IN (SELECT state FROM Professionals)
920	SELECT AVG(T1.age) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
921	SELECT AVG(T1.age) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
922	SELECT P.professional_id, P.last_name, P.cell_number FROM Professionals P WHERE P.state = 'IN' OR P.professional_id IN (SELECT T.professional_id FROM Treatments T GROUP BY T.professional_id HAVING COUNT(*) > 2)
923	SELECT P.professional_id, P.last_name, P.cell_number FROM Professionals P WHERE P.state = 'Indiana' OR P.professional_id IN (SELECT T.professional_id FROM Treatments T GROUP BY T.professional_id HAVING COUNT(*) > 2)
924	SELECT name FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments GROUP BY dog_id HAVING SUM(cost_of_treatment) <= 1000)
925	SELECT D.name FROM Dogs D WHERE D.dog_id IN (SELECT T.dog_id FROM Treatments T GROUP BY T.dog_id HAVING SUM(T.cost_of_treatment) <= 1000)
926	SELECT first_name FROM Professionals WHERE first_name NOT IN (SELECT name FROM Dogs) UNION SELECT first_name FROM Owners WHERE first_name NOT IN (SELECT name FROM Dogs)
927	SELECT first_name FROM Professionals WHERE first_name NOT IN (SELECT name FROM Dogs) UNION SELECT first_name FROM Owners WHERE first_name NOT IN (SELECT name FROM Dogs)
928	SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
929	SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
930	SELECT O.owner_id, O.first_name, O.last_name FROM Owners O JOIN (SELECT owner_id FROM Dogs GROUP BY owner_id HAVING COUNT(*) = (SELECT MAX(count) FROM (SELECT COUNT(*) AS count FROM Dogs GROUP BY owner_id) AS counts)) D ON O.owner_id = D.owner_id
931	SELECT O.owner_id, O.first_name, O.last_name FROM Owners O WHERE O.owner_id IN (SELECT D.owner_id FROM Dogs D GROUP BY D.owner_id HAVING COUNT(*) = (SELECT MAX(count) FROM (SELECT COUNT(*) AS count FROM Dogs GROUP BY owner_id) AS counts))
932	SELECT P.professional_id, P.role_code, P.first_name FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id GROUP BY P.professional_id HAVING COUNT(T.treatment_id) >= 2
933	SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.professional_id) >= 2
934	SELECT B.breed_name FROM Breeds B JOIN Dogs D ON B.breed_code = D.breed_code GROUP BY B.breed_name HAVING COUNT(D.dog_id) = (SELECT MAX(count) FROM (SELECT COUNT(dog_id) AS count FROM Dogs GROUP BY breed_code) AS MaxCount)
935	SELECT T2.breed_name FROM Dogs AS T1 JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_code ORDER BY COUNT(*) DESC LIMIT 1
936	SELECT O.owner_id, O.last_name FROM Owners AS O JOIN Dogs AS D ON O.owner_id = D.owner_id JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY O.owner_id, O.last_name HAVING COUNT(T.treatment_id) = (SELECT MAX(treatment_count) FROM (SELECT COUNT(T.treatment_id) AS treatment_count FROM Owners AS O JOIN Dogs AS D ON O.owner_id = D.owner_id JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY O.owner_id, O.last_name) AS subquery)
937	SELECT O.owner_id, O.last_name FROM Owners O WHERE O.owner_id IN (SELECT D.owner_id FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id GROUP BY D.owner_id HAVING SUM(T.cost_of_treatment) = (SELECT MAX(total_spent) FROM (SELECT owner_id, SUM(cost_of_treatment) AS total_spent FROM Treatments JOIN Dogs ON Treatments.dog_id = Dogs.dog_id GROUP BY owner_id) AS total_costs))
938	SELECT T1.treatment_type_description FROM Treatment_Types AS T1 WHERE T1.treatment_type_code IN (SELECT T2.treatment_type_code FROM Treatments AS T2 GROUP BY T2.treatment_type_code HAVING SUM(T2.cost_of_treatment) = (SELECT MIN(total_cost) FROM (SELECT SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code) AS SubQuery))
939	SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code) AS T2 ON T1.treatment_type_code = T2.treatment_type_code WHERE T2.total_cost = (SELECT MIN(total_cost) FROM (SELECT SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code) AS T3)
940	SELECT T1.owner_id, T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id, T1.zip_code ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1
941	SELECT O.owner_id, O.zip_code FROM Owners O WHERE O.owner_id IN (SELECT D.owner_id FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id GROUP BY D.owner_id HAVING SUM(T.cost_of_treatment) = (SELECT MAX(total_spent) FROM (SELECT D.owner_id, SUM(T.cost_of_treatment) AS total_spent FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id GROUP BY D.owner_id) AS total_spending))
942	SELECT T1.professional_id, T2.cell_number FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T1.treatment_type_code) >= 2
943	SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
944	SELECT P.first_name, P.last_name FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id WHERE T.cost_of_treatment < (SELECT avg(cost_of_treatment) FROM Treatments)
945	SELECT DISTINCT p.first_name, p.last_name FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
946	SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
947	SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
948	SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
949	SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
950	SELECT O.first_name, O.last_name, S.size_description FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id JOIN Sizes S ON D.size_code = S.size_code
951	SELECT O.first_name, O.last_name, S.size_description FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id JOIN Sizes S ON D.size_code = S.size_code
952	SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id
953	SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id
954	SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Dogs.breed_code IN (SELECT breed_code FROM (SELECT breed_code, COUNT(*) AS count FROM Dogs GROUP BY breed_code) AS BreedCounts WHERE count = (SELECT MIN(count) FROM (SELECT COUNT(*) AS count FROM Dogs GROUP BY breed_code) AS SubBreedCounts))
955	SELECT D.name, T.date_of_treatment FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id WHERE D.breed_code IN (SELECT breed_code FROM Dogs GROUP BY breed_code HAVING COUNT(*) = (SELECT MIN(c) FROM (SELECT COUNT(*) AS c FROM Dogs GROUP BY breed_code) AS sub))
956	SELECT O.first_name, D.name FROM Dogs AS D JOIN Owners AS O ON D.owner_id = O.owner_id WHERE O.state = 'Virginia'
957	SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia'
958	SELECT DISTINCT T1.date_arrived, T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
959	SELECT DISTINCT T1.date_arrived, T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
960	SELECT last_name FROM Owners WHERE owner_id IN (SELECT owner_id FROM Dogs WHERE date_of_birth = (SELECT max(date_of_birth) FROM Dogs))
961	SELECT O.last_name FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id WHERE D.date_of_birth = (SELECT max(date_of_birth) FROM Dogs)
962	SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
963	SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
964	SELECT date_arrived, date_departed FROM Dog
965	SELECT date_arrived, date_departed FROM Dog
966	SELECT COUNT(DISTINCT T1.dog_id) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
967	SELECT COUNT(DISTINCT T1.dog_id) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
968	SELECT COUNT(DISTINCT T1.professional_id) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id
969	SELECT COUNT(DISTINCT T1.professional_id) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id
970	SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
971	SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
972	SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
973	SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
974	SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)
975	SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)
976	SELECT max(cost_of_treatment) FROM Treatments WHERE date_of_treatment = (SELECT max(date_of_treatment) FROM Treatments)
977	SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT max(date_of_treatment) FROM Treatments)
978	SELECT COUNT(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
979	SELECT COUNT(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
980	SELECT COUNT(*) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.owner_id IS NULL
981	SELECT COUNT(*) FROM Owners WHERE owner_id NOT IN (SELECT DISTINCT owner_id FROM Dogs WHERE abandoned_yn = 'N')
982	SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
983	SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
984	SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1
985	SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1
986	SELECT AVG(age) FROM Dog
987	SELECT AVG(age) FROM Dog
988	SELECT MAX(age) FROM Dog
989	SELECT MAX(age) FROM Dog
990	SELECT charge_type, charge_amount FROM Charge
991	SELECT charge_type, charge_amount FROM Charge
992	SELECT MAX(charge_amount) FROM Charge
993	SELECT MAX(charge_amount) FROM Charge
994	SELECT email_address, cell_number, home_phone FROM Professiona
995	SELECT email_address, cell_number, home_phone FROM Professiona
996	SELECT DISTINCT T1.breed_name, T3.size_description FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code JOIN Sizes AS T3 ON T2.size_code = T3.size_code
997	SELECT DISTINCT T1.breed_name, T2.size_description FROM Dogs AS T3 JOIN Breeds AS T1 ON T3.breed_code = T1.breed_code JOIN Sizes AS T2 ON T3.size_code = T2.size_code
998	SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
999	SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
1000	SELECT COUNT(*) FROM singer
1001	SELECT COUNT(*) FROM singer
1002	SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC, Name ASC
1003	SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC, Singer_ID ASC
1004	SELECT Birth_Year, Citizenship FROM singer
1005	SELECT Birth_Year, Citizenship FROM singer
1006	SELECT Name FROM singer WHERE Citizenship != 'France'
1007	SELECT Name FROM singer WHERE Citizenship != 'French'
1008	SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)
1009	SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)
1010	SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT max(Net_Worth_Millions) FROM singer)
1011	SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
1012	SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
1013	SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
1014	SELECT Citizenship FROM singer GROUP BY Citizenship HAVING COUNT(*) = (SELECT MAX(freq) FROM (SELECT COUNT(*) AS freq FROM singer GROUP BY Citizenship) AS subquery)
1015	SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship
1016	SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
1017	SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
1018	SELECT song.Title, singer.Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID
1019	SELECT song.Title, singer.Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID
1020	SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
1021	SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
1022	SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(*) > 1
1023	SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(T2.Song_ID) > 1
1024	SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
1025	SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
1026	SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
1027	SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
1028	SELECT Citizenship FROM singer WHERE Citizenship IN (SELECT Citizenship FROM singer WHERE Birth_Year < 1945) INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955
1029	SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955
1030	SELECT COUNT(*) FROM Other_Available_Feature
1031	SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_name = 'AirCon'
1032	SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code
1033	SELECT property_name FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE (Ref_Property_Types.property_type_description = 'house' OR Ref_Property_Types.property_type_description = 'apartment') AND room_count > 1