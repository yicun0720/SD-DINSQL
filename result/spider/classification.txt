The SQL query for the question "What are the details for the paragraph that includes the text 'Korea'?" needs these tables = [Paragraphs], so we don't need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we don't need JOIN and don't need nested queries, then the SQL query can be classified as "EASY".
Label: "EASY"
The SQL query for the question "Show name of all students who have some friends and also are liked by someone else." needs these tables = [Highschooler, Friend, Likes], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What are the names of high schoolers who both have friends and are liked?" needs these tables = [Highschooler, Friend, Likes], so we need JOIN.
Plus, it requires nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and need nested queries, then the SQL query can be classified as "NESTED".
Label: "NESTED"
The SQL query for the question "List each owner's first name, last name, and the size of his or her dog." needs these tables = [Owners, Dogs, Sizes], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582." needs these tables = [Students, Addresses], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "How many car makers are there in France?" needs these tables = [car_makers, countries], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What are the different models created by either the car maker General Motors or weighed more than 3500?" needs these tables = [model_list,car_makers,car_names,cars_data], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "Find the average ranking for each player and their first name." needs these tables = [rankings,players], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What is the name of the conductor who has conducted the most orchestras?" needs these tables = [conductor, orchestra], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What is the id of the semester that had both Masters and Bachelors students enrolled?" needs these tables = [Semesters, Student_Enrolment, Degree_Programs], so we need JOIN.
Plus, it requires nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = ["What are the ids of the semesters that had Masters students enrolled?", "What are the ids of the semesters that had Bachelors students enrolled?"].
So, we need JOIN and need nested queries, then the SQL query can be classified as "NESTED".
Label: "NESTED"
The SQL query for the question "What are the country codes for countries that do not speak English?" needs these tables = [country,countrylanguage], so we need JOIN.
Plus, it requires nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = ["What are the country codes for countries that speak English?"].
So, we need JOIN and need nested queries, then the the SQL query can be classified as "NESTED".
Label: "NESTED"
The SQL query for the question "How many countries have a republic as their form of government?" needs these tables = [country], so we don't need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we don't need JOIN and don't need nested queries, then the the SQL query can be classified as "EASY".
Label: "EASY"
The SQL query for the question "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582?" needs these tables = [Students, Addresses], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?" needs these tables = [battle], so we don't need JOIN.
Plus, it requires nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we don't need JOIN and need nested queries, then the the SQL query can be classified as "NESTED".
Label: "NESTED"
The SQL query for the question "What are the codes of template types that are not used for any document?" needs these tables = [Ref_Template_Types,Documents,Templates], so we need JOIN.
Plus, it requires nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = ["What are the codes of template types that are used for any document?"].
So, we need JOIN and need nested queries, then the the SQL query can be classified as "NESTED".
Label: "NESTED"
The SQL query for the question "Count the number of United Airlines flights that arrive in Aberdeen." needs these tables = [flights, airports], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "Which airlines have departing flights from both APG and CVO airports?" needs these tables = [airlines,flights,airports], so we need JOIN.
Plus, it requires nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = ["Which airlines have departing flights from APG airport?", "Which airlines have departing flights from CVO airport?"].
So, we need JOIN and need nested queries, then the the SQL query can be classified as "NESTED".
Label: "NESTED"
The SQL query for the question "What is the name of the course with the most students enrolled?" needs these tables = [Courses, Student_Enrolment_Courses], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What type of pet is the youngest animal, and how much does it weigh?" needs these tables = [Pets], so we don't need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we don't need JOIN and don't need nested queries, then the the SQL query can be classified as "EASY".
Label: "EASY"
The SQL query for the question "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'" needs these tables = [battle, ship], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "Give the name of the student with the most likes." needs these tables = [Highschooler,Likes], so we need JOIN.
Plus, it doesn't need nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What is the most common hometowns for teachers?" needs these tables = [teacher], so we don't need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we don't need JOIN and don't need nested queries, then the the SQL query can be classified as "EASY".
Label: "EASY"
The SQL query for the question "Find the package choice and series name of the TV channel that has high definition TV." needs these tables = [TV_Channel, TV_series], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "Which airlines have a flight with destination airport AHD?" needs these tables = [airlines,flights,airports], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What are the names of the singers who are not French citizens?" needs these tables = [singer], so we don't need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we don't need JOIN and don't need nested queries, then the the SQL query can be classified as "EASY".
Label: "EASY"
The SQL query for the question "What is the number of makers of cars in France?" needs these tables = [car_makers,countries], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "Find all airlines that have at least 10 flights." needs these tables = [airlines,flights], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "Which address holds the most number of students currently? List the address id and all lines." needs these tables = [Addresses, Students], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "How many 'United Airlines' flights go to Airport 'ASY'?" needs these tables = [flights, airlines, airports], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What other details can you tell me about students in reverse alphabetical order?" needs these tables = [Students], so we don't need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we don't need JOIN and don't need nested queries, then the the SQL query can be classified as "EASY".
Label: "EASY"
The SQL query for the question "find the names of loser and winner who played in the match with greatest number of minutes." needs these tables = [players, matches], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "Show names of teachers that teach at least two courses." needs these tables = [teacher,course_arrange], so we need JOIN.
Plus, it requires nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and need nested queries, then the the SQL query can be classified as "NESTED".
Label: "NESTED"
The SQL query for the question "What are the countries that have greater surface area than any country in Europe?" needs these tables = [country,city,countrylanguage], so we need JOIN.
Plus, it requires nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = ["What is the surface area of countries in Europe?"].
So, we need JOIN and need nested queries, then the the SQL query can be classified as "NESTED".
Label: "NESTED"
The SQL query for the question "What is the abbreviation of the airline that has the fewest flights and what country is it in?" needs these tables = [airlines,flights], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighed more than 3000?" needs these tables = [cars_data], so we don't need JOIN.
Plus, it requires nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = ["What are the different years in which there were cars produced that weighed less than 4000?", "What are the different years in which there were cars produced that weighed more than 3000?"].
So, we don't need JOIN and need nested queries, then the SQL query can be classified as "NESTED".
Label: "NESTED"
The SQL query for the question "What are airlines that have some flight departing from airport 'AHD'?" needs these tables = [airlines,flights,airports], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "For each shop, return the number of employees working there and the name of the shop." needs these tables = [shop, employee, hiring], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What are the names and ids of every course with less than 2 sections?" needs these tables = [Courses, Sections], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs." needs these tables = [Owners,Dogs,Treatments], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What are all the makers and models?" needs these tables = [car_makers,model_list], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "Show the name and the release year of the song by the youngest singer." needs these tables = [singer], so we don't need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we don't need JOIN and don't need nested queries, then the the SQL query can be classified as "EASY".
Label: "EASY"
The SQL query for the question "What are the countries that are not playing cartoons written by Todd Casey?" needs these tables = [TV_Channel,Cartoon], so we need JOIN.
Plus, it requires nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = ["What are the countries that are playing cartoons written by Todd Casey?"].
So, we need JOIN and need nested queries, then the the SQL query can be classified as "NESTED".
Label: "NESTED"
The SQL query for the question "Which airlines have a flight with source airport AHD?" needs these tables = [airlines,flights,airports], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What is the document id and name with greatest number of paragraphs?" needs these tables = [Documents, Paragraphs], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name." needs these tables = [Students, Student_Enrolment, Degree_Programs], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What is the name of the high schooler who has the greatest number of friends?" needs these tables = [Highschooler,Friend], so we need JOIN.
Plus, it doesn't need nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What is the average edispl for all volvos?" needs these tables = [cars_data,model_list,car_makers], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "Who owns the youngest dog? Give me his or her last name." needs these tables = [Owners,Dogs], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What are the names of the people who teach math courses?" needs these tables = [teacher,course,course_arrange], so we need JOIN.
Plus, it doesn't require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = [""].
So, we need JOIN and don't need nested queries, then the the SQL query can be classified as "NON-NESTED".
Label: "NON-NESTED"
The SQL query for the question "What are the languages used by the least number of TV Channels and how many channels use it?" needs these tables = [TV_Channel], so we don't need JOIN.
Plus, it requires nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to the questions = ["What is the count of TV Channels for each language"].
So, we don't need JOIN and need nested queries, then the the SQL query can be classified as "NESTED".
Label: "NESTED"
